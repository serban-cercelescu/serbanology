{"ast":null,"code":"module.exports = function (t) {\n  var e = {};\n\n  function i(s) {\n    if (e[s]) return e[s].exports;\n    var r = e[s] = {\n      i: s,\n      l: !1,\n      exports: {}\n    };\n    return t[s].call(r.exports, r, r.exports, i), r.l = !0, r.exports;\n  }\n\n  return i.m = t, i.c = e, i.d = function (t, e, s) {\n    i.o(t, e) || Object.defineProperty(t, e, {\n      enumerable: !0,\n      get: s\n    });\n  }, i.r = function (t) {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n      value: \"Module\"\n    }), Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n  }, i.t = function (t, e) {\n    if (1 & e && (t = i(t)), 8 & e) return t;\n    if (4 & e && \"object\" == typeof t && t && t.__esModule) return t;\n    var s = Object.create(null);\n    if (i.r(s), Object.defineProperty(s, \"default\", {\n      enumerable: !0,\n      value: t\n    }), 2 & e && \"string\" != typeof t) for (var r in t) i.d(s, r, function (e) {\n      return t[e];\n    }.bind(null, r));\n    return s;\n  }, i.n = function (t) {\n    var e = t && t.__esModule ? function () {\n      return t.default;\n    } : function () {\n      return t;\n    };\n    return i.d(e, \"a\", e), e;\n  }, i.o = function (t, e) {\n    return Object.prototype.hasOwnProperty.call(t, e);\n  }, i.p = \"\", i(i.s = 4);\n}([function (t, e) {\n  t.exports = require(\"react\");\n}, function (t, e, i) {\n  \"use strict\";\n\n  i.r(e), i.d(e, \"Node\", function () {\n    return st;\n  }), i.d(e, \"Parser\", function () {\n    return U;\n  }), i.d(e, \"Position\", function () {\n    return V;\n  }), i.d(e, \"SourceLocation\", function () {\n    return j;\n  }), i.d(e, \"TokContext\", function () {\n    return at;\n  }), i.d(e, \"Token\", function () {\n    return Pt;\n  }), i.d(e, \"TokenType\", function () {\n    return x;\n  }), i.d(e, \"defaultOptions\", function () {\n    return M;\n  }), i.d(e, \"getLineInfo\", function () {\n    return R;\n  }), i.d(e, \"isIdentifierChar\", function () {\n    return m;\n  }), i.d(e, \"isIdentifierStart\", function () {\n    return f;\n  }), i.d(e, \"isNewLine\", function () {\n    return C;\n  }), i.d(e, \"keywordTypes\", function () {\n    return b;\n  }), i.d(e, \"lineBreak\", function () {\n    return E;\n  }), i.d(e, \"lineBreakG\", function () {\n    return S;\n  }), i.d(e, \"nonASCIIwhitespace\", function () {\n    return w;\n  }), i.d(e, \"parse\", function () {\n    return Vt;\n  }), i.d(e, \"parseExpressionAt\", function () {\n    return jt;\n  }), i.d(e, \"tokContexts\", function () {\n    return ot;\n  }), i.d(e, \"tokTypes\", function () {\n    return k;\n  }), i.d(e, \"tokenizer\", function () {\n    return Rt;\n  }), i.d(e, \"version\", function () {\n    return Ot;\n  });\n  var s = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  },\n      r = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\",\n      n = {\n    5: r,\n    \"5module\": r + \" export import\",\n    6: r + \" const class extends export import super\"\n  },\n      a = /^in(stanceof)?$/,\n      o = \"ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࣇऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-鿼ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-ꟊꟵ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ\",\n      h = \"‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿᫀᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿\",\n      p = new RegExp(\"[\" + o + \"]\"),\n      c = new RegExp(\"[\" + o + h + \"]\");\n  o = h = null;\n  var u = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938],\n      l = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n  function d(t, e) {\n    for (var i = 65536, s = 0; s < e.length; s += 2) {\n      if ((i += e[s]) > t) return !1;\n      if ((i += e[s + 1]) >= t) return !0;\n    }\n  }\n\n  function f(t, e) {\n    return t < 65 ? 36 === t : t < 91 || (t < 97 ? 95 === t : t < 123 || (t <= 65535 ? t >= 170 && p.test(String.fromCharCode(t)) : !1 !== e && d(t, u)));\n  }\n\n  function m(t, e) {\n    return t < 48 ? 36 === t : t < 58 || !(t < 65) && (t < 91 || (t < 97 ? 95 === t : t < 123 || (t <= 65535 ? t >= 170 && c.test(String.fromCharCode(t)) : !1 !== e && (d(t, u) || d(t, l)))));\n  }\n\n  var x = function (t, e) {\n    void 0 === e && (e = {}), this.label = t, this.keyword = e.keyword, this.beforeExpr = !!e.beforeExpr, this.startsExpr = !!e.startsExpr, this.isLoop = !!e.isLoop, this.isAssign = !!e.isAssign, this.prefix = !!e.prefix, this.postfix = !!e.postfix, this.binop = e.binop || null, this.updateContext = null;\n  };\n\n  function g(t, e) {\n    return new x(t, {\n      beforeExpr: !0,\n      binop: e\n    });\n  }\n\n  var y = {\n    beforeExpr: !0\n  },\n      v = {\n    startsExpr: !0\n  },\n      b = {};\n\n  function _(t, e) {\n    return void 0 === e && (e = {}), e.keyword = t, b[t] = new x(t, e);\n  }\n\n  var k = {\n    num: new x(\"num\", v),\n    regexp: new x(\"regexp\", v),\n    string: new x(\"string\", v),\n    name: new x(\"name\", v),\n    eof: new x(\"eof\"),\n    bracketL: new x(\"[\", {\n      beforeExpr: !0,\n      startsExpr: !0\n    }),\n    bracketR: new x(\"]\"),\n    braceL: new x(\"{\", {\n      beforeExpr: !0,\n      startsExpr: !0\n    }),\n    braceR: new x(\"}\"),\n    parenL: new x(\"(\", {\n      beforeExpr: !0,\n      startsExpr: !0\n    }),\n    parenR: new x(\")\"),\n    comma: new x(\",\", y),\n    semi: new x(\";\", y),\n    colon: new x(\":\", y),\n    dot: new x(\".\"),\n    question: new x(\"?\", y),\n    arrow: new x(\"=>\", y),\n    template: new x(\"template\"),\n    invalidTemplate: new x(\"invalidTemplate\"),\n    ellipsis: new x(\"...\", y),\n    backQuote: new x(\"`\", v),\n    dollarBraceL: new x(\"${\", {\n      beforeExpr: !0,\n      startsExpr: !0\n    }),\n    eq: new x(\"=\", {\n      beforeExpr: !0,\n      isAssign: !0\n    }),\n    assign: new x(\"_=\", {\n      beforeExpr: !0,\n      isAssign: !0\n    }),\n    incDec: new x(\"++/--\", {\n      prefix: !0,\n      postfix: !0,\n      startsExpr: !0\n    }),\n    prefix: new x(\"!/~\", {\n      beforeExpr: !0,\n      prefix: !0,\n      startsExpr: !0\n    }),\n    logicalOR: g(\"||\", 1),\n    logicalAND: g(\"&&\", 2),\n    bitwiseOR: g(\"|\", 3),\n    bitwiseXOR: g(\"^\", 4),\n    bitwiseAND: g(\"&\", 5),\n    equality: g(\"==/!=/===/!==\", 6),\n    relational: g(\"</>/<=/>=\", 7),\n    bitShift: g(\"<</>>/>>>\", 8),\n    plusMin: new x(\"+/-\", {\n      beforeExpr: !0,\n      binop: 9,\n      prefix: !0,\n      startsExpr: !0\n    }),\n    modulo: g(\"%\", 10),\n    star: g(\"*\", 10),\n    slash: g(\"/\", 10),\n    starstar: new x(\"**\", {\n      beforeExpr: !0\n    }),\n    coalesce: g(\"??\", 1),\n    _break: _(\"break\"),\n    _case: _(\"case\", y),\n    _catch: _(\"catch\"),\n    _continue: _(\"continue\"),\n    _debugger: _(\"debugger\"),\n    _default: _(\"default\", y),\n    _do: _(\"do\", {\n      isLoop: !0,\n      beforeExpr: !0\n    }),\n    _else: _(\"else\", y),\n    _finally: _(\"finally\"),\n    _for: _(\"for\", {\n      isLoop: !0\n    }),\n    _function: _(\"function\", v),\n    _if: _(\"if\"),\n    _return: _(\"return\", y),\n    _switch: _(\"switch\"),\n    _throw: _(\"throw\", y),\n    _try: _(\"try\"),\n    _var: _(\"var\"),\n    _const: _(\"const\"),\n    _while: _(\"while\", {\n      isLoop: !0\n    }),\n    _with: _(\"with\"),\n    _new: _(\"new\", {\n      beforeExpr: !0,\n      startsExpr: !0\n    }),\n    _this: _(\"this\", v),\n    _super: _(\"super\", v),\n    _class: _(\"class\", v),\n    _extends: _(\"extends\", y),\n    _export: _(\"export\"),\n    _import: _(\"import\", v),\n    _null: _(\"null\", v),\n    _true: _(\"true\", v),\n    _false: _(\"false\", v),\n    _in: _(\"in\", {\n      beforeExpr: !0,\n      binop: 7\n    }),\n    _instanceof: _(\"instanceof\", {\n      beforeExpr: !0,\n      binop: 7\n    }),\n    _typeof: _(\"typeof\", {\n      beforeExpr: !0,\n      prefix: !0,\n      startsExpr: !0\n    }),\n    _void: _(\"void\", {\n      beforeExpr: !0,\n      prefix: !0,\n      startsExpr: !0\n    }),\n    _delete: _(\"delete\", {\n      beforeExpr: !0,\n      prefix: !0,\n      startsExpr: !0\n    })\n  },\n      E = /\\r\\n?|\\n|\\u2028|\\u2029/,\n      S = new RegExp(E.source, \"g\");\n\n  function C(t, e) {\n    return 10 === t || 13 === t || !e && (8232 === t || 8233 === t);\n  }\n\n  var w = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/,\n      A = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g,\n      I = Object.prototype,\n      P = I.hasOwnProperty,\n      T = I.toString;\n\n  function N(t, e) {\n    return P.call(t, e);\n  }\n\n  var L = Array.isArray || function (t) {\n    return \"[object Array]\" === T.call(t);\n  };\n\n  function O(t) {\n    return new RegExp(\"^(?:\" + t.replace(/ /g, \"|\") + \")$\");\n  }\n\n  var V = function (t, e) {\n    this.line = t, this.column = e;\n  };\n\n  V.prototype.offset = function (t) {\n    return new V(this.line, this.column + t);\n  };\n\n  var j = function (t, e, i) {\n    this.start = e, this.end = i, null !== t.sourceFile && (this.source = t.sourceFile);\n  };\n\n  function R(t, e) {\n    for (var i = 1, s = 0;;) {\n      S.lastIndex = s;\n      var r = S.exec(t);\n      if (!(r && r.index < e)) return new V(i, e - s);\n      ++i, s = r.index + r[0].length;\n    }\n  }\n\n  var M = {\n    ecmaVersion: 10,\n    sourceType: \"script\",\n    onInsertedSemicolon: null,\n    onTrailingComma: null,\n    allowReserved: null,\n    allowReturnOutsideFunction: !1,\n    allowImportExportEverywhere: !1,\n    allowAwaitOutsideFunction: !1,\n    allowHashBang: !1,\n    locations: !1,\n    onToken: null,\n    onComment: null,\n    ranges: !1,\n    program: null,\n    sourceFile: null,\n    directSourceFile: null,\n    preserveParens: !1\n  };\n\n  function B(t) {\n    var e = {};\n\n    for (var i in M) e[i] = t && N(t, i) ? t[i] : M[i];\n\n    if (e.ecmaVersion >= 2015 && (e.ecmaVersion -= 2009), null == e.allowReserved && (e.allowReserved = e.ecmaVersion < 5), L(e.onToken)) {\n      var s = e.onToken;\n\n      e.onToken = function (t) {\n        return s.push(t);\n      };\n    }\n\n    return L(e.onComment) && (e.onComment = function (t, e) {\n      return function (i, s, r, n, a, o) {\n        var h = {\n          type: i ? \"Block\" : \"Line\",\n          value: s,\n          start: r,\n          end: n\n        };\n        t.locations && (h.loc = new j(this, a, o)), t.ranges && (h.range = [r, n]), e.push(h);\n      };\n    }(e, e.onComment)), e;\n  }\n\n  function D(t, e) {\n    return 2 | (t ? 4 : 0) | (e ? 8 : 0);\n  }\n\n  var U = function (t, e, i) {\n    this.options = t = B(t), this.sourceFile = t.sourceFile, this.keywords = O(n[t.ecmaVersion >= 6 ? 6 : \"module\" === t.sourceType ? \"5module\" : 5]);\n    var r = \"\";\n\n    if (!0 !== t.allowReserved) {\n      for (var a = t.ecmaVersion; !(r = s[a]); a--);\n\n      \"module\" === t.sourceType && (r += \" await\");\n    }\n\n    this.reservedWords = O(r);\n    var o = (r ? r + \" \" : \"\") + s.strict;\n    this.reservedWordsStrict = O(o), this.reservedWordsStrictBind = O(o + \" \" + s.strictBind), this.input = String(e), this.containsEsc = !1, i ? (this.pos = i, this.lineStart = this.input.lastIndexOf(\"\\n\", i - 1) + 1, this.curLine = this.input.slice(0, this.lineStart).split(E).length) : (this.pos = this.lineStart = 0, this.curLine = 1), this.type = k.eof, this.value = null, this.start = this.end = this.pos, this.startLoc = this.endLoc = this.curPosition(), this.lastTokEndLoc = this.lastTokStartLoc = null, this.lastTokStart = this.lastTokEnd = this.pos, this.context = this.initialContext(), this.exprAllowed = !0, this.inModule = \"module\" === t.sourceType, this.strict = this.inModule || this.strictDirective(this.pos), this.potentialArrowAt = -1, this.yieldPos = this.awaitPos = this.awaitIdentPos = 0, this.labels = [], this.undefinedExports = {}, 0 === this.pos && t.allowHashBang && \"#!\" === this.input.slice(0, 2) && this.skipLineComment(2), this.scopeStack = [], this.enterScope(1), this.regexpState = null;\n  },\n      F = {\n    inFunction: {\n      configurable: !0\n    },\n    inGenerator: {\n      configurable: !0\n    },\n    inAsync: {\n      configurable: !0\n    },\n    allowSuper: {\n      configurable: !0\n    },\n    allowDirectSuper: {\n      configurable: !0\n    },\n    treatFunctionsAsVar: {\n      configurable: !0\n    }\n  };\n\n  U.prototype.parse = function () {\n    var t = this.options.program || this.startNode();\n    return this.nextToken(), this.parseTopLevel(t);\n  }, F.inFunction.get = function () {\n    return (2 & this.currentVarScope().flags) > 0;\n  }, F.inGenerator.get = function () {\n    return (8 & this.currentVarScope().flags) > 0;\n  }, F.inAsync.get = function () {\n    return (4 & this.currentVarScope().flags) > 0;\n  }, F.allowSuper.get = function () {\n    return (64 & this.currentThisScope().flags) > 0;\n  }, F.allowDirectSuper.get = function () {\n    return (128 & this.currentThisScope().flags) > 0;\n  }, F.treatFunctionsAsVar.get = function () {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }, U.prototype.inNonArrowFunction = function () {\n    return (2 & this.currentThisScope().flags) > 0;\n  }, U.extend = function () {\n    for (var t = [], e = arguments.length; e--;) t[e] = arguments[e];\n\n    for (var i = this, s = 0; s < t.length; s++) i = t[s](i);\n\n    return i;\n  }, U.parse = function (t, e) {\n    return new this(e, t).parse();\n  }, U.parseExpressionAt = function (t, e, i) {\n    var s = new this(i, t, e);\n    return s.nextToken(), s.parseExpression();\n  }, U.tokenizer = function (t, e) {\n    return new this(e, t);\n  }, Object.defineProperties(U.prototype, F);\n  var G = U.prototype,\n      H = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\")/;\n\n  function q() {\n    this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;\n  }\n\n  G.strictDirective = function (t) {\n    for (;;) {\n      A.lastIndex = t, t += A.exec(this.input)[0].length;\n      var e = H.exec(this.input.slice(t));\n      if (!e) return !1;\n\n      if (\"use strict\" === (e[1] || e[2])) {\n        A.lastIndex = t + e[0].length;\n        var i = A.exec(this.input),\n            s = i.index + i[0].length,\n            r = this.input.charAt(s);\n        return \";\" === r || \"}\" === r || E.test(i[0]) && !(/[(`.[+\\-/*%<>=,?^&]/.test(r) || \"!\" === r && \"=\" === this.input.charAt(s + 1));\n      }\n\n      t += e[0].length, A.lastIndex = t, t += A.exec(this.input)[0].length, \";\" === this.input[t] && t++;\n    }\n  }, G.eat = function (t) {\n    return this.type === t && (this.next(), !0);\n  }, G.isContextual = function (t) {\n    return this.type === k.name && this.value === t && !this.containsEsc;\n  }, G.eatContextual = function (t) {\n    return !!this.isContextual(t) && (this.next(), !0);\n  }, G.expectContextual = function (t) {\n    this.eatContextual(t) || this.unexpected();\n  }, G.canInsertSemicolon = function () {\n    return this.type === k.eof || this.type === k.braceR || E.test(this.input.slice(this.lastTokEnd, this.start));\n  }, G.insertSemicolon = function () {\n    if (this.canInsertSemicolon()) return this.options.onInsertedSemicolon && this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc), !0;\n  }, G.semicolon = function () {\n    this.eat(k.semi) || this.insertSemicolon() || this.unexpected();\n  }, G.afterTrailingComma = function (t, e) {\n    if (this.type === t) return this.options.onTrailingComma && this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc), e || this.next(), !0;\n  }, G.expect = function (t) {\n    this.eat(t) || this.unexpected();\n  }, G.unexpected = function (t) {\n    this.raise(null != t ? t : this.start, \"Unexpected token\");\n  }, G.checkPatternErrors = function (t, e) {\n    if (t) {\n      t.trailingComma > -1 && this.raiseRecoverable(t.trailingComma, \"Comma is not permitted after the rest element\");\n      var i = e ? t.parenthesizedAssign : t.parenthesizedBind;\n      i > -1 && this.raiseRecoverable(i, \"Parenthesized pattern\");\n    }\n  }, G.checkExpressionErrors = function (t, e) {\n    if (!t) return !1;\n    var i = t.shorthandAssign,\n        s = t.doubleProto;\n    if (!e) return i >= 0 || s >= 0;\n    i >= 0 && this.raise(i, \"Shorthand property assignments are valid only in destructuring patterns\"), s >= 0 && this.raiseRecoverable(s, \"Redefinition of __proto__ property\");\n  }, G.checkYieldAwaitInDefaultParams = function () {\n    this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos) && this.raise(this.yieldPos, \"Yield expression cannot be a default value\"), this.awaitPos && this.raise(this.awaitPos, \"Await expression cannot be a default value\");\n  }, G.isSimpleAssignTarget = function (t) {\n    return \"ParenthesizedExpression\" === t.type ? this.isSimpleAssignTarget(t.expression) : \"Identifier\" === t.type || \"MemberExpression\" === t.type;\n  };\n  var W = U.prototype;\n\n  W.parseTopLevel = function (t) {\n    var e = {};\n\n    for (t.body || (t.body = []); this.type !== k.eof;) {\n      var i = this.parseStatement(null, !0, e);\n      t.body.push(i);\n    }\n\n    if (this.inModule) for (var s = 0, r = Object.keys(this.undefinedExports); s < r.length; s += 1) {\n      var n = r[s];\n      this.raiseRecoverable(this.undefinedExports[n].start, \"Export '\" + n + \"' is not defined\");\n    }\n    return this.adaptDirectivePrologue(t.body), this.next(), t.sourceType = this.options.sourceType, this.finishNode(t, \"Program\");\n  };\n\n  var X = {\n    kind: \"loop\"\n  },\n      z = {\n    kind: \"switch\"\n  };\n  W.isLet = function (t) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) return !1;\n    A.lastIndex = this.pos;\n    var e = A.exec(this.input),\n        i = this.pos + e[0].length,\n        s = this.input.charCodeAt(i);\n    if (91 === s) return !0;\n    if (t) return !1;\n    if (123 === s) return !0;\n\n    if (f(s, !0)) {\n      for (var r = i + 1; m(this.input.charCodeAt(r), !0);) ++r;\n\n      var n = this.input.slice(i, r);\n      if (!a.test(n)) return !0;\n    }\n\n    return !1;\n  }, W.isAsyncFunction = function () {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\")) return !1;\n    A.lastIndex = this.pos;\n    var t = A.exec(this.input),\n        e = this.pos + t[0].length;\n    return !(E.test(this.input.slice(this.pos, e)) || \"function\" !== this.input.slice(e, e + 8) || e + 8 !== this.input.length && m(this.input.charAt(e + 8)));\n  }, W.parseStatement = function (t, e, i) {\n    var s,\n        r = this.type,\n        n = this.startNode();\n\n    switch (this.isLet(t) && (r = k._var, s = \"let\"), r) {\n      case k._break:\n      case k._continue:\n        return this.parseBreakContinueStatement(n, r.keyword);\n\n      case k._debugger:\n        return this.parseDebuggerStatement(n);\n\n      case k._do:\n        return this.parseDoStatement(n);\n\n      case k._for:\n        return this.parseForStatement(n);\n\n      case k._function:\n        return t && (this.strict || \"if\" !== t && \"label\" !== t) && this.options.ecmaVersion >= 6 && this.unexpected(), this.parseFunctionStatement(n, !1, !t);\n\n      case k._class:\n        return t && this.unexpected(), this.parseClass(n, !0);\n\n      case k._if:\n        return this.parseIfStatement(n);\n\n      case k._return:\n        return this.parseReturnStatement(n);\n\n      case k._switch:\n        return this.parseSwitchStatement(n);\n\n      case k._throw:\n        return this.parseThrowStatement(n);\n\n      case k._try:\n        return this.parseTryStatement(n);\n\n      case k._const:\n      case k._var:\n        return s = s || this.value, t && \"var\" !== s && this.unexpected(), this.parseVarStatement(n, s);\n\n      case k._while:\n        return this.parseWhileStatement(n);\n\n      case k._with:\n        return this.parseWithStatement(n);\n\n      case k.braceL:\n        return this.parseBlock(!0, n);\n\n      case k.semi:\n        return this.parseEmptyStatement(n);\n\n      case k._export:\n      case k._import:\n        if (this.options.ecmaVersion > 10 && r === k._import) {\n          A.lastIndex = this.pos;\n          var a = A.exec(this.input),\n              o = this.pos + a[0].length,\n              h = this.input.charCodeAt(o);\n          if (40 === h || 46 === h) return this.parseExpressionStatement(n, this.parseExpression());\n        }\n\n        return this.options.allowImportExportEverywhere || (e || this.raise(this.start, \"'import' and 'export' may only appear at the top level\"), this.inModule || this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\")), r === k._import ? this.parseImport(n) : this.parseExport(n, i);\n\n      default:\n        if (this.isAsyncFunction()) return t && this.unexpected(), this.next(), this.parseFunctionStatement(n, !0, !t);\n        var p = this.value,\n            c = this.parseExpression();\n        return r === k.name && \"Identifier\" === c.type && this.eat(k.colon) ? this.parseLabeledStatement(n, p, c, t) : this.parseExpressionStatement(n, c);\n    }\n  }, W.parseBreakContinueStatement = function (t, e) {\n    var i = \"break\" === e;\n    this.next(), this.eat(k.semi) || this.insertSemicolon() ? t.label = null : this.type !== k.name ? this.unexpected() : (t.label = this.parseIdent(), this.semicolon());\n\n    for (var s = 0; s < this.labels.length; ++s) {\n      var r = this.labels[s];\n\n      if (null == t.label || r.name === t.label.name) {\n        if (null != r.kind && (i || \"loop\" === r.kind)) break;\n        if (t.label && i) break;\n      }\n    }\n\n    return s === this.labels.length && this.raise(t.start, \"Unsyntactic \" + e), this.finishNode(t, i ? \"BreakStatement\" : \"ContinueStatement\");\n  }, W.parseDebuggerStatement = function (t) {\n    return this.next(), this.semicolon(), this.finishNode(t, \"DebuggerStatement\");\n  }, W.parseDoStatement = function (t) {\n    return this.next(), this.labels.push(X), t.body = this.parseStatement(\"do\"), this.labels.pop(), this.expect(k._while), t.test = this.parseParenExpression(), this.options.ecmaVersion >= 6 ? this.eat(k.semi) : this.semicolon(), this.finishNode(t, \"DoWhileStatement\");\n  }, W.parseForStatement = function (t) {\n    this.next();\n    var e = this.options.ecmaVersion >= 9 && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction) && this.eatContextual(\"await\") ? this.lastTokStart : -1;\n    if (this.labels.push(X), this.enterScope(0), this.expect(k.parenL), this.type === k.semi) return e > -1 && this.unexpected(e), this.parseFor(t, null);\n    var i = this.isLet();\n\n    if (this.type === k._var || this.type === k._const || i) {\n      var s = this.startNode(),\n          r = i ? \"let\" : this.value;\n      return this.next(), this.parseVar(s, !0, r), this.finishNode(s, \"VariableDeclaration\"), (this.type === k._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) && 1 === s.declarations.length ? (this.options.ecmaVersion >= 9 && (this.type === k._in ? e > -1 && this.unexpected(e) : t.await = e > -1), this.parseForIn(t, s)) : (e > -1 && this.unexpected(e), this.parseFor(t, s));\n    }\n\n    var n = new q(),\n        a = this.parseExpression(!0, n);\n    return this.type === k._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\") ? (this.options.ecmaVersion >= 9 && (this.type === k._in ? e > -1 && this.unexpected(e) : t.await = e > -1), this.toAssignable(a, !1, n), this.checkLVal(a), this.parseForIn(t, a)) : (this.checkExpressionErrors(n, !0), e > -1 && this.unexpected(e), this.parseFor(t, a));\n  }, W.parseFunctionStatement = function (t, e, i) {\n    return this.next(), this.parseFunction(t, K | (i ? 0 : Q), !1, e);\n  }, W.parseIfStatement = function (t) {\n    return this.next(), t.test = this.parseParenExpression(), t.consequent = this.parseStatement(\"if\"), t.alternate = this.eat(k._else) ? this.parseStatement(\"if\") : null, this.finishNode(t, \"IfStatement\");\n  }, W.parseReturnStatement = function (t) {\n    return this.inFunction || this.options.allowReturnOutsideFunction || this.raise(this.start, \"'return' outside of function\"), this.next(), this.eat(k.semi) || this.insertSemicolon() ? t.argument = null : (t.argument = this.parseExpression(), this.semicolon()), this.finishNode(t, \"ReturnStatement\");\n  }, W.parseSwitchStatement = function (t) {\n    var e;\n    this.next(), t.discriminant = this.parseParenExpression(), t.cases = [], this.expect(k.braceL), this.labels.push(z), this.enterScope(0);\n\n    for (var i = !1; this.type !== k.braceR;) if (this.type === k._case || this.type === k._default) {\n      var s = this.type === k._case;\n      e && this.finishNode(e, \"SwitchCase\"), t.cases.push(e = this.startNode()), e.consequent = [], this.next(), s ? e.test = this.parseExpression() : (i && this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"), i = !0, e.test = null), this.expect(k.colon);\n    } else e || this.unexpected(), e.consequent.push(this.parseStatement(null));\n\n    return this.exitScope(), e && this.finishNode(e, \"SwitchCase\"), this.next(), this.labels.pop(), this.finishNode(t, \"SwitchStatement\");\n  }, W.parseThrowStatement = function (t) {\n    return this.next(), E.test(this.input.slice(this.lastTokEnd, this.start)) && this.raise(this.lastTokEnd, \"Illegal newline after throw\"), t.argument = this.parseExpression(), this.semicolon(), this.finishNode(t, \"ThrowStatement\");\n  };\n  var J = [];\n  W.parseTryStatement = function (t) {\n    if (this.next(), t.block = this.parseBlock(), t.handler = null, this.type === k._catch) {\n      var e = this.startNode();\n\n      if (this.next(), this.eat(k.parenL)) {\n        e.param = this.parseBindingAtom();\n        var i = \"Identifier\" === e.param.type;\n        this.enterScope(i ? 32 : 0), this.checkLVal(e.param, i ? 4 : 2), this.expect(k.parenR);\n      } else this.options.ecmaVersion < 10 && this.unexpected(), e.param = null, this.enterScope(0);\n\n      e.body = this.parseBlock(!1), this.exitScope(), t.handler = this.finishNode(e, \"CatchClause\");\n    }\n\n    return t.finalizer = this.eat(k._finally) ? this.parseBlock() : null, t.handler || t.finalizer || this.raise(t.start, \"Missing catch or finally clause\"), this.finishNode(t, \"TryStatement\");\n  }, W.parseVarStatement = function (t, e) {\n    return this.next(), this.parseVar(t, !1, e), this.semicolon(), this.finishNode(t, \"VariableDeclaration\");\n  }, W.parseWhileStatement = function (t) {\n    return this.next(), t.test = this.parseParenExpression(), this.labels.push(X), t.body = this.parseStatement(\"while\"), this.labels.pop(), this.finishNode(t, \"WhileStatement\");\n  }, W.parseWithStatement = function (t) {\n    return this.strict && this.raise(this.start, \"'with' in strict mode\"), this.next(), t.object = this.parseParenExpression(), t.body = this.parseStatement(\"with\"), this.finishNode(t, \"WithStatement\");\n  }, W.parseEmptyStatement = function (t) {\n    return this.next(), this.finishNode(t, \"EmptyStatement\");\n  }, W.parseLabeledStatement = function (t, e, i, s) {\n    for (var r = 0, n = this.labels; r < n.length; r += 1) {\n      n[r].name === e && this.raise(i.start, \"Label '\" + e + \"' is already declared\");\n    }\n\n    for (var a = this.type.isLoop ? \"loop\" : this.type === k._switch ? \"switch\" : null, o = this.labels.length - 1; o >= 0; o--) {\n      var h = this.labels[o];\n      if (h.statementStart !== t.start) break;\n      h.statementStart = this.start, h.kind = a;\n    }\n\n    return this.labels.push({\n      name: e,\n      kind: a,\n      statementStart: this.start\n    }), t.body = this.parseStatement(s ? -1 === s.indexOf(\"label\") ? s + \"label\" : s : \"label\"), this.labels.pop(), t.label = i, this.finishNode(t, \"LabeledStatement\");\n  }, W.parseExpressionStatement = function (t, e) {\n    return t.expression = e, this.semicolon(), this.finishNode(t, \"ExpressionStatement\");\n  }, W.parseBlock = function (t, e, i) {\n    for (void 0 === t && (t = !0), void 0 === e && (e = this.startNode()), e.body = [], this.expect(k.braceL), t && this.enterScope(0); this.type !== k.braceR;) {\n      var s = this.parseStatement(null);\n      e.body.push(s);\n    }\n\n    return i && (this.strict = !1), this.next(), t && this.exitScope(), this.finishNode(e, \"BlockStatement\");\n  }, W.parseFor = function (t, e) {\n    return t.init = e, this.expect(k.semi), t.test = this.type === k.semi ? null : this.parseExpression(), this.expect(k.semi), t.update = this.type === k.parenR ? null : this.parseExpression(), this.expect(k.parenR), t.body = this.parseStatement(\"for\"), this.exitScope(), this.labels.pop(), this.finishNode(t, \"ForStatement\");\n  }, W.parseForIn = function (t, e) {\n    var i = this.type === k._in;\n    return this.next(), \"VariableDeclaration\" === e.type && null != e.declarations[0].init && (!i || this.options.ecmaVersion < 8 || this.strict || \"var\" !== e.kind || \"Identifier\" !== e.declarations[0].id.type) ? this.raise(e.start, (i ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\") : \"AssignmentPattern\" === e.type && this.raise(e.start, \"Invalid left-hand side in for-loop\"), t.left = e, t.right = i ? this.parseExpression() : this.parseMaybeAssign(), this.expect(k.parenR), t.body = this.parseStatement(\"for\"), this.exitScope(), this.labels.pop(), this.finishNode(t, i ? \"ForInStatement\" : \"ForOfStatement\");\n  }, W.parseVar = function (t, e, i) {\n    for (t.declarations = [], t.kind = i;;) {\n      var s = this.startNode();\n      if (this.parseVarId(s, i), this.eat(k.eq) ? s.init = this.parseMaybeAssign(e) : \"const\" !== i || this.type === k._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\") ? \"Identifier\" === s.id.type || e && (this.type === k._in || this.isContextual(\"of\")) ? s.init = null : this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\") : this.unexpected(), t.declarations.push(this.finishNode(s, \"VariableDeclarator\")), !this.eat(k.comma)) break;\n    }\n\n    return t;\n  }, W.parseVarId = function (t, e) {\n    t.id = this.parseBindingAtom(), this.checkLVal(t.id, \"var\" === e ? 1 : 2, !1);\n  };\n  var K = 1,\n      Q = 2;\n  W.parseFunction = function (t, e, i, s) {\n    this.initFunction(t), (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !s) && (this.type === k.star && e & Q && this.unexpected(), t.generator = this.eat(k.star)), this.options.ecmaVersion >= 8 && (t.async = !!s), e & K && (t.id = 4 & e && this.type !== k.name ? null : this.parseIdent(), !t.id || e & Q || this.checkLVal(t.id, this.strict || t.generator || t.async ? this.treatFunctionsAsVar ? 1 : 2 : 3));\n    var r = this.yieldPos,\n        n = this.awaitPos,\n        a = this.awaitIdentPos;\n    return this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(D(t.async, t.generator)), e & K || (t.id = this.type === k.name ? this.parseIdent() : null), this.parseFunctionParams(t), this.parseFunctionBody(t, i, !1), this.yieldPos = r, this.awaitPos = n, this.awaitIdentPos = a, this.finishNode(t, e & K ? \"FunctionDeclaration\" : \"FunctionExpression\");\n  }, W.parseFunctionParams = function (t) {\n    this.expect(k.parenL), t.params = this.parseBindingList(k.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams();\n  }, W.parseClass = function (t, e) {\n    this.next();\n    var i = this.strict;\n    this.strict = !0, this.parseClassId(t, e), this.parseClassSuper(t);\n    var s = this.startNode(),\n        r = !1;\n\n    for (s.body = [], this.expect(k.braceL); this.type !== k.braceR;) {\n      var n = this.parseClassElement(null !== t.superClass);\n      n && (s.body.push(n), \"MethodDefinition\" === n.type && \"constructor\" === n.kind && (r && this.raise(n.start, \"Duplicate constructor in the same class\"), r = !0));\n    }\n\n    return this.strict = i, this.next(), t.body = this.finishNode(s, \"ClassBody\"), this.finishNode(t, e ? \"ClassDeclaration\" : \"ClassExpression\");\n  }, W.parseClassElement = function (t) {\n    var e = this;\n    if (this.eat(k.semi)) return null;\n\n    var i = this.startNode(),\n        s = function (t, s) {\n      void 0 === s && (s = !1);\n      var r = e.start,\n          n = e.startLoc;\n      return !!e.eatContextual(t) && (!(e.type === k.parenL || s && e.canInsertSemicolon()) || (i.key && e.unexpected(), i.computed = !1, i.key = e.startNodeAt(r, n), i.key.name = t, e.finishNode(i.key, \"Identifier\"), !1));\n    };\n\n    i.kind = \"method\", i.static = s(\"static\");\n    var r = this.eat(k.star),\n        n = !1;\n    r || (this.options.ecmaVersion >= 8 && s(\"async\", !0) ? (n = !0, r = this.options.ecmaVersion >= 9 && this.eat(k.star)) : s(\"get\") ? i.kind = \"get\" : s(\"set\") && (i.kind = \"set\")), i.key || this.parsePropertyName(i);\n    var a = i.key,\n        o = !1;\n    return i.computed || i.static || !(\"Identifier\" === a.type && \"constructor\" === a.name || \"Literal\" === a.type && \"constructor\" === a.value) ? i.static && \"Identifier\" === a.type && \"prototype\" === a.name && this.raise(a.start, \"Classes may not have a static property named prototype\") : (\"method\" !== i.kind && this.raise(a.start, \"Constructor can't have get/set modifier\"), r && this.raise(a.start, \"Constructor can't be a generator\"), n && this.raise(a.start, \"Constructor can't be an async method\"), i.kind = \"constructor\", o = t), this.parseClassMethod(i, r, n, o), \"get\" === i.kind && 0 !== i.value.params.length && this.raiseRecoverable(i.value.start, \"getter should have no params\"), \"set\" === i.kind && 1 !== i.value.params.length && this.raiseRecoverable(i.value.start, \"setter should have exactly one param\"), \"set\" === i.kind && \"RestElement\" === i.value.params[0].type && this.raiseRecoverable(i.value.params[0].start, \"Setter cannot use rest params\"), i;\n  }, W.parseClassMethod = function (t, e, i, s) {\n    return t.value = this.parseMethod(e, i, s), this.finishNode(t, \"MethodDefinition\");\n  }, W.parseClassId = function (t, e) {\n    this.type === k.name ? (t.id = this.parseIdent(), e && this.checkLVal(t.id, 2, !1)) : (!0 === e && this.unexpected(), t.id = null);\n  }, W.parseClassSuper = function (t) {\n    t.superClass = this.eat(k._extends) ? this.parseExprSubscripts() : null;\n  }, W.parseExport = function (t, e) {\n    if (this.next(), this.eat(k.star)) return this.options.ecmaVersion >= 11 && (this.eatContextual(\"as\") ? (t.exported = this.parseIdent(!0), this.checkExport(e, t.exported.name, this.lastTokStart)) : t.exported = null), this.expectContextual(\"from\"), this.type !== k.string && this.unexpected(), t.source = this.parseExprAtom(), this.semicolon(), this.finishNode(t, \"ExportAllDeclaration\");\n\n    if (this.eat(k._default)) {\n      var i;\n\n      if (this.checkExport(e, \"default\", this.lastTokStart), this.type === k._function || (i = this.isAsyncFunction())) {\n        var s = this.startNode();\n        this.next(), i && this.next(), t.declaration = this.parseFunction(s, 4 | K, !1, i);\n      } else if (this.type === k._class) {\n        var r = this.startNode();\n        t.declaration = this.parseClass(r, \"nullableID\");\n      } else t.declaration = this.parseMaybeAssign(), this.semicolon();\n\n      return this.finishNode(t, \"ExportDefaultDeclaration\");\n    }\n\n    if (this.shouldParseExportStatement()) t.declaration = this.parseStatement(null), \"VariableDeclaration\" === t.declaration.type ? this.checkVariableExport(e, t.declaration.declarations) : this.checkExport(e, t.declaration.id.name, t.declaration.id.start), t.specifiers = [], t.source = null;else {\n      if (t.declaration = null, t.specifiers = this.parseExportSpecifiers(e), this.eatContextual(\"from\")) this.type !== k.string && this.unexpected(), t.source = this.parseExprAtom();else {\n        for (var n = 0, a = t.specifiers; n < a.length; n += 1) {\n          var o = a[n];\n          this.checkUnreserved(o.local), this.checkLocalExport(o.local);\n        }\n\n        t.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(t, \"ExportNamedDeclaration\");\n  }, W.checkExport = function (t, e, i) {\n    t && (N(t, e) && this.raiseRecoverable(i, \"Duplicate export '\" + e + \"'\"), t[e] = !0);\n  }, W.checkPatternExport = function (t, e) {\n    var i = e.type;\n    if (\"Identifier\" === i) this.checkExport(t, e.name, e.start);else if (\"ObjectPattern\" === i) for (var s = 0, r = e.properties; s < r.length; s += 1) {\n      var n = r[s];\n      this.checkPatternExport(t, n);\n    } else if (\"ArrayPattern\" === i) for (var a = 0, o = e.elements; a < o.length; a += 1) {\n      var h = o[a];\n      h && this.checkPatternExport(t, h);\n    } else \"Property\" === i ? this.checkPatternExport(t, e.value) : \"AssignmentPattern\" === i ? this.checkPatternExport(t, e.left) : \"RestElement\" === i ? this.checkPatternExport(t, e.argument) : \"ParenthesizedExpression\" === i && this.checkPatternExport(t, e.expression);\n  }, W.checkVariableExport = function (t, e) {\n    if (t) for (var i = 0, s = e; i < s.length; i += 1) {\n      var r = s[i];\n      this.checkPatternExport(t, r.id);\n    }\n  }, W.shouldParseExportStatement = function () {\n    return \"var\" === this.type.keyword || \"const\" === this.type.keyword || \"class\" === this.type.keyword || \"function\" === this.type.keyword || this.isLet() || this.isAsyncFunction();\n  }, W.parseExportSpecifiers = function (t) {\n    var e = [],\n        i = !0;\n\n    for (this.expect(k.braceL); !this.eat(k.braceR);) {\n      if (i) i = !1;else if (this.expect(k.comma), this.afterTrailingComma(k.braceR)) break;\n      var s = this.startNode();\n      s.local = this.parseIdent(!0), s.exported = this.eatContextual(\"as\") ? this.parseIdent(!0) : s.local, this.checkExport(t, s.exported.name, s.exported.start), e.push(this.finishNode(s, \"ExportSpecifier\"));\n    }\n\n    return e;\n  }, W.parseImport = function (t) {\n    return this.next(), this.type === k.string ? (t.specifiers = J, t.source = this.parseExprAtom()) : (t.specifiers = this.parseImportSpecifiers(), this.expectContextual(\"from\"), t.source = this.type === k.string ? this.parseExprAtom() : this.unexpected()), this.semicolon(), this.finishNode(t, \"ImportDeclaration\");\n  }, W.parseImportSpecifiers = function () {\n    var t = [],\n        e = !0;\n\n    if (this.type === k.name) {\n      var i = this.startNode();\n      if (i.local = this.parseIdent(), this.checkLVal(i.local, 2), t.push(this.finishNode(i, \"ImportDefaultSpecifier\")), !this.eat(k.comma)) return t;\n    }\n\n    if (this.type === k.star) {\n      var s = this.startNode();\n      return this.next(), this.expectContextual(\"as\"), s.local = this.parseIdent(), this.checkLVal(s.local, 2), t.push(this.finishNode(s, \"ImportNamespaceSpecifier\")), t;\n    }\n\n    for (this.expect(k.braceL); !this.eat(k.braceR);) {\n      if (e) e = !1;else if (this.expect(k.comma), this.afterTrailingComma(k.braceR)) break;\n      var r = this.startNode();\n      r.imported = this.parseIdent(!0), this.eatContextual(\"as\") ? r.local = this.parseIdent() : (this.checkUnreserved(r.imported), r.local = r.imported), this.checkLVal(r.local, 2), t.push(this.finishNode(r, \"ImportSpecifier\"));\n    }\n\n    return t;\n  }, W.adaptDirectivePrologue = function (t) {\n    for (var e = 0; e < t.length && this.isDirectiveCandidate(t[e]); ++e) t[e].directive = t[e].expression.raw.slice(1, -1);\n  }, W.isDirectiveCandidate = function (t) {\n    return \"ExpressionStatement\" === t.type && \"Literal\" === t.expression.type && \"string\" == typeof t.expression.value && ('\"' === this.input[t.start] || \"'\" === this.input[t.start]);\n  };\n  var Z = U.prototype;\n  Z.toAssignable = function (t, e, i) {\n    if (this.options.ecmaVersion >= 6 && t) switch (t.type) {\n      case \"Identifier\":\n        this.inAsync && \"await\" === t.name && this.raise(t.start, \"Cannot use 'await' as identifier inside an async function\");\n        break;\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        t.type = \"ObjectPattern\", i && this.checkPatternErrors(i, !0);\n\n        for (var s = 0, r = t.properties; s < r.length; s += 1) {\n          var n = r[s];\n          this.toAssignable(n, e), \"RestElement\" !== n.type || \"ArrayPattern\" !== n.argument.type && \"ObjectPattern\" !== n.argument.type || this.raise(n.argument.start, \"Unexpected token\");\n        }\n\n        break;\n\n      case \"Property\":\n        \"init\" !== t.kind && this.raise(t.key.start, \"Object pattern can't contain getter or setter\"), this.toAssignable(t.value, e);\n        break;\n\n      case \"ArrayExpression\":\n        t.type = \"ArrayPattern\", i && this.checkPatternErrors(i, !0), this.toAssignableList(t.elements, e);\n        break;\n\n      case \"SpreadElement\":\n        t.type = \"RestElement\", this.toAssignable(t.argument, e), \"AssignmentPattern\" === t.argument.type && this.raise(t.argument.start, \"Rest elements cannot have a default value\");\n        break;\n\n      case \"AssignmentExpression\":\n        \"=\" !== t.operator && this.raise(t.left.end, \"Only '=' operator can be used for specifying default value.\"), t.type = \"AssignmentPattern\", delete t.operator, this.toAssignable(t.left, e);\n\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(t.expression, e, i);\n        break;\n\n      case \"MemberExpression\":\n        if (!e) break;\n\n      default:\n        this.raise(t.start, \"Assigning to rvalue\");\n    } else i && this.checkPatternErrors(i, !0);\n    return t;\n  }, Z.toAssignableList = function (t, e) {\n    for (var i = t.length, s = 0; s < i; s++) {\n      var r = t[s];\n      r && this.toAssignable(r, e);\n    }\n\n    if (i) {\n      var n = t[i - 1];\n      6 === this.options.ecmaVersion && e && n && \"RestElement\" === n.type && \"Identifier\" !== n.argument.type && this.unexpected(n.argument.start);\n    }\n\n    return t;\n  }, Z.parseSpread = function (t) {\n    var e = this.startNode();\n    return this.next(), e.argument = this.parseMaybeAssign(!1, t), this.finishNode(e, \"SpreadElement\");\n  }, Z.parseRestBinding = function () {\n    var t = this.startNode();\n    return this.next(), 6 === this.options.ecmaVersion && this.type !== k.name && this.unexpected(), t.argument = this.parseBindingAtom(), this.finishNode(t, \"RestElement\");\n  }, Z.parseBindingAtom = function () {\n    if (this.options.ecmaVersion >= 6) switch (this.type) {\n      case k.bracketL:\n        var t = this.startNode();\n        return this.next(), t.elements = this.parseBindingList(k.bracketR, !0, !0), this.finishNode(t, \"ArrayPattern\");\n\n      case k.braceL:\n        return this.parseObj(!0);\n    }\n    return this.parseIdent();\n  }, Z.parseBindingList = function (t, e, i) {\n    for (var s = [], r = !0; !this.eat(t);) if (r ? r = !1 : this.expect(k.comma), e && this.type === k.comma) s.push(null);else {\n      if (i && this.afterTrailingComma(t)) break;\n\n      if (this.type === k.ellipsis) {\n        var n = this.parseRestBinding();\n        this.parseBindingListItem(n), s.push(n), this.type === k.comma && this.raise(this.start, \"Comma is not permitted after the rest element\"), this.expect(t);\n        break;\n      }\n\n      var a = this.parseMaybeDefault(this.start, this.startLoc);\n      this.parseBindingListItem(a), s.push(a);\n    }\n\n    return s;\n  }, Z.parseBindingListItem = function (t) {\n    return t;\n  }, Z.parseMaybeDefault = function (t, e, i) {\n    if (i = i || this.parseBindingAtom(), this.options.ecmaVersion < 6 || !this.eat(k.eq)) return i;\n    var s = this.startNodeAt(t, e);\n    return s.left = i, s.right = this.parseMaybeAssign(), this.finishNode(s, \"AssignmentPattern\");\n  }, Z.checkLVal = function (t, e, i) {\n    switch (void 0 === e && (e = 0), t.type) {\n      case \"Identifier\":\n        2 === e && \"let\" === t.name && this.raiseRecoverable(t.start, \"let is disallowed as a lexically bound name\"), this.strict && this.reservedWordsStrictBind.test(t.name) && this.raiseRecoverable(t.start, (e ? \"Binding \" : \"Assigning to \") + t.name + \" in strict mode\"), i && (N(i, t.name) && this.raiseRecoverable(t.start, \"Argument name clash\"), i[t.name] = !0), 0 !== e && 5 !== e && this.declareName(t.name, e, t.start);\n        break;\n\n      case \"MemberExpression\":\n        e && this.raiseRecoverable(t.start, \"Binding member expression\");\n        break;\n\n      case \"ObjectPattern\":\n        for (var s = 0, r = t.properties; s < r.length; s += 1) {\n          var n = r[s];\n          this.checkLVal(n, e, i);\n        }\n\n        break;\n\n      case \"Property\":\n        this.checkLVal(t.value, e, i);\n        break;\n\n      case \"ArrayPattern\":\n        for (var a = 0, o = t.elements; a < o.length; a += 1) {\n          var h = o[a];\n          h && this.checkLVal(h, e, i);\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(t.left, e, i);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(t.argument, e, i);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(t.expression, e, i);\n        break;\n\n      default:\n        this.raise(t.start, (e ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n  var Y = U.prototype;\n  Y.checkPropClash = function (t, e, i) {\n    if (!(this.options.ecmaVersion >= 9 && \"SpreadElement\" === t.type || this.options.ecmaVersion >= 6 && (t.computed || t.method || t.shorthand))) {\n      var s,\n          r = t.key;\n\n      switch (r.type) {\n        case \"Identifier\":\n          s = r.name;\n          break;\n\n        case \"Literal\":\n          s = String(r.value);\n          break;\n\n        default:\n          return;\n      }\n\n      var n = t.kind;\n      if (this.options.ecmaVersion >= 6) \"__proto__\" === s && \"init\" === n && (e.proto && (i ? i.doubleProto < 0 && (i.doubleProto = r.start) : this.raiseRecoverable(r.start, \"Redefinition of __proto__ property\")), e.proto = !0);else {\n        var a = e[s = \"$\" + s];\n        if (a) (\"init\" === n ? this.strict && a.init || a.get || a.set : a.init || a[n]) && this.raiseRecoverable(r.start, \"Redefinition of property\");else a = e[s] = {\n          init: !1,\n          get: !1,\n          set: !1\n        };\n        a[n] = !0;\n      }\n    }\n  }, Y.parseExpression = function (t, e) {\n    var i = this.start,\n        s = this.startLoc,\n        r = this.parseMaybeAssign(t, e);\n\n    if (this.type === k.comma) {\n      var n = this.startNodeAt(i, s);\n\n      for (n.expressions = [r]; this.eat(k.comma);) n.expressions.push(this.parseMaybeAssign(t, e));\n\n      return this.finishNode(n, \"SequenceExpression\");\n    }\n\n    return r;\n  }, Y.parseMaybeAssign = function (t, e, i) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) return this.parseYield(t);\n      this.exprAllowed = !1;\n    }\n\n    var s = !1,\n        r = -1,\n        n = -1;\n    e ? (r = e.parenthesizedAssign, n = e.trailingComma, e.parenthesizedAssign = e.trailingComma = -1) : (e = new q(), s = !0);\n    var a = this.start,\n        o = this.startLoc;\n    this.type !== k.parenL && this.type !== k.name || (this.potentialArrowAt = this.start);\n    var h = this.parseMaybeConditional(t, e);\n\n    if (i && (h = i.call(this, h, a, o)), this.type.isAssign) {\n      var p = this.startNodeAt(a, o);\n      return p.operator = this.value, p.left = this.type === k.eq ? this.toAssignable(h, !1, e) : h, s || (e.parenthesizedAssign = e.trailingComma = e.doubleProto = -1), e.shorthandAssign >= p.left.start && (e.shorthandAssign = -1), this.checkLVal(h), this.next(), p.right = this.parseMaybeAssign(t), this.finishNode(p, \"AssignmentExpression\");\n    }\n\n    return s && this.checkExpressionErrors(e, !0), r > -1 && (e.parenthesizedAssign = r), n > -1 && (e.trailingComma = n), h;\n  }, Y.parseMaybeConditional = function (t, e) {\n    var i = this.start,\n        s = this.startLoc,\n        r = this.parseExprOps(t, e);\n    if (this.checkExpressionErrors(e)) return r;\n\n    if (this.eat(k.question)) {\n      var n = this.startNodeAt(i, s);\n      return n.test = r, n.consequent = this.parseMaybeAssign(), this.expect(k.colon), n.alternate = this.parseMaybeAssign(t), this.finishNode(n, \"ConditionalExpression\");\n    }\n\n    return r;\n  }, Y.parseExprOps = function (t, e) {\n    var i = this.start,\n        s = this.startLoc,\n        r = this.parseMaybeUnary(e, !1);\n    return this.checkExpressionErrors(e) || r.start === i && \"ArrowFunctionExpression\" === r.type ? r : this.parseExprOp(r, i, s, -1, t);\n  }, Y.parseExprOp = function (t, e, i, s, r) {\n    var n = this.type.binop;\n\n    if (null != n && (!r || this.type !== k._in) && n > s) {\n      var a = this.type === k.logicalOR || this.type === k.logicalAND,\n          o = this.type === k.coalesce;\n      o && (n = k.logicalAND.binop);\n      var h = this.value;\n      this.next();\n      var p = this.start,\n          c = this.startLoc,\n          u = this.parseExprOp(this.parseMaybeUnary(null, !1), p, c, n, r),\n          l = this.buildBinary(e, i, t, u, h, a || o);\n      return (a && this.type === k.coalesce || o && (this.type === k.logicalOR || this.type === k.logicalAND)) && this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\"), this.parseExprOp(l, e, i, s, r);\n    }\n\n    return t;\n  }, Y.buildBinary = function (t, e, i, s, r, n) {\n    var a = this.startNodeAt(t, e);\n    return a.left = i, a.operator = r, a.right = s, this.finishNode(a, n ? \"LogicalExpression\" : \"BinaryExpression\");\n  }, Y.parseMaybeUnary = function (t, e) {\n    var i,\n        s = this.start,\n        r = this.startLoc;\n    if (this.isContextual(\"await\") && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction)) i = this.parseAwait(), e = !0;else if (this.type.prefix) {\n      var n = this.startNode(),\n          a = this.type === k.incDec;\n      n.operator = this.value, n.prefix = !0, this.next(), n.argument = this.parseMaybeUnary(null, !0), this.checkExpressionErrors(t, !0), a ? this.checkLVal(n.argument) : this.strict && \"delete\" === n.operator && \"Identifier\" === n.argument.type ? this.raiseRecoverable(n.start, \"Deleting local variable in strict mode\") : e = !0, i = this.finishNode(n, a ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else {\n      if (i = this.parseExprSubscripts(t), this.checkExpressionErrors(t)) return i;\n\n      for (; this.type.postfix && !this.canInsertSemicolon();) {\n        var o = this.startNodeAt(s, r);\n        o.operator = this.value, o.prefix = !1, o.argument = i, this.checkLVal(i), this.next(), i = this.finishNode(o, \"UpdateExpression\");\n      }\n    }\n    return !e && this.eat(k.starstar) ? this.buildBinary(s, r, i, this.parseMaybeUnary(null, !1), \"**\", !1) : i;\n  }, Y.parseExprSubscripts = function (t) {\n    var e = this.start,\n        i = this.startLoc,\n        s = this.parseExprAtom(t);\n    if (\"ArrowFunctionExpression\" === s.type && \")\" !== this.input.slice(this.lastTokStart, this.lastTokEnd)) return s;\n    var r = this.parseSubscripts(s, e, i);\n    return t && \"MemberExpression\" === r.type && (t.parenthesizedAssign >= r.start && (t.parenthesizedAssign = -1), t.parenthesizedBind >= r.start && (t.parenthesizedBind = -1)), r;\n  }, Y.parseSubscripts = function (t, e, i, s) {\n    for (var r = this.options.ecmaVersion >= 8 && \"Identifier\" === t.type && \"async\" === t.name && this.lastTokEnd === t.end && !this.canInsertSemicolon() && t.end - t.start == 5 && this.potentialArrowAt === t.start;;) {\n      var n = this.parseSubscript(t, e, i, s, r);\n      if (n === t || \"ArrowFunctionExpression\" === n.type) return n;\n      t = n;\n    }\n  }, Y.parseSubscript = function (t, e, i, s, r) {\n    var n = this.eat(k.bracketL);\n\n    if (n || this.eat(k.dot)) {\n      var a = this.startNodeAt(e, i);\n      a.object = t, a.property = n ? this.parseExpression() : this.parseIdent(\"never\" !== this.options.allowReserved), a.computed = !!n, n && this.expect(k.bracketR), t = this.finishNode(a, \"MemberExpression\");\n    } else if (!s && this.eat(k.parenL)) {\n      var o = new q(),\n          h = this.yieldPos,\n          p = this.awaitPos,\n          c = this.awaitIdentPos;\n      this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0;\n      var u = this.parseExprList(k.parenR, this.options.ecmaVersion >= 8, !1, o);\n      if (r && !this.canInsertSemicolon() && this.eat(k.arrow)) return this.checkPatternErrors(o, !1), this.checkYieldAwaitInDefaultParams(), this.awaitIdentPos > 0 && this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"), this.yieldPos = h, this.awaitPos = p, this.awaitIdentPos = c, this.parseArrowExpression(this.startNodeAt(e, i), u, !0);\n      this.checkExpressionErrors(o, !0), this.yieldPos = h || this.yieldPos, this.awaitPos = p || this.awaitPos, this.awaitIdentPos = c || this.awaitIdentPos;\n      var l = this.startNodeAt(e, i);\n      l.callee = t, l.arguments = u, t = this.finishNode(l, \"CallExpression\");\n    } else if (this.type === k.backQuote) {\n      var d = this.startNodeAt(e, i);\n      d.tag = t, d.quasi = this.parseTemplate({\n        isTagged: !0\n      }), t = this.finishNode(d, \"TaggedTemplateExpression\");\n    }\n\n    return t;\n  }, Y.parseExprAtom = function (t) {\n    this.type === k.slash && this.readRegexp();\n    var e,\n        i = this.potentialArrowAt === this.start;\n\n    switch (this.type) {\n      case k._super:\n        return this.allowSuper || this.raise(this.start, \"'super' keyword outside a method\"), e = this.startNode(), this.next(), this.type !== k.parenL || this.allowDirectSuper || this.raise(e.start, \"super() call outside constructor of a subclass\"), this.type !== k.dot && this.type !== k.bracketL && this.type !== k.parenL && this.unexpected(), this.finishNode(e, \"Super\");\n\n      case k._this:\n        return e = this.startNode(), this.next(), this.finishNode(e, \"ThisExpression\");\n\n      case k.name:\n        var s = this.start,\n            r = this.startLoc,\n            n = this.containsEsc,\n            a = this.parseIdent(!1);\n        if (this.options.ecmaVersion >= 8 && !n && \"async\" === a.name && !this.canInsertSemicolon() && this.eat(k._function)) return this.parseFunction(this.startNodeAt(s, r), 0, !1, !0);\n\n        if (i && !this.canInsertSemicolon()) {\n          if (this.eat(k.arrow)) return this.parseArrowExpression(this.startNodeAt(s, r), [a], !1);\n          if (this.options.ecmaVersion >= 8 && \"async\" === a.name && this.type === k.name && !n) return a = this.parseIdent(!1), !this.canInsertSemicolon() && this.eat(k.arrow) || this.unexpected(), this.parseArrowExpression(this.startNodeAt(s, r), [a], !0);\n        }\n\n        return a;\n\n      case k.regexp:\n        var o = this.value;\n        return (e = this.parseLiteral(o.value)).regex = {\n          pattern: o.pattern,\n          flags: o.flags\n        }, e;\n\n      case k.num:\n      case k.string:\n        return this.parseLiteral(this.value);\n\n      case k._null:\n      case k._true:\n      case k._false:\n        return (e = this.startNode()).value = this.type === k._null ? null : this.type === k._true, e.raw = this.type.keyword, this.next(), this.finishNode(e, \"Literal\");\n\n      case k.parenL:\n        var h = this.start,\n            p = this.parseParenAndDistinguishExpression(i);\n        return t && (t.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(p) && (t.parenthesizedAssign = h), t.parenthesizedBind < 0 && (t.parenthesizedBind = h)), p;\n\n      case k.bracketL:\n        return e = this.startNode(), this.next(), e.elements = this.parseExprList(k.bracketR, !0, !0, t), this.finishNode(e, \"ArrayExpression\");\n\n      case k.braceL:\n        return this.parseObj(!1, t);\n\n      case k._function:\n        return e = this.startNode(), this.next(), this.parseFunction(e, 0);\n\n      case k._class:\n        return this.parseClass(this.startNode(), !1);\n\n      case k._new:\n        return this.parseNew();\n\n      case k.backQuote:\n        return this.parseTemplate();\n\n      case k._import:\n        return this.options.ecmaVersion >= 11 ? this.parseExprImport() : this.unexpected();\n\n      default:\n        this.unexpected();\n    }\n  }, Y.parseExprImport = function () {\n    var t = this.startNode();\n    this.containsEsc && this.raiseRecoverable(this.start, \"Escape sequence in keyword import\");\n    var e = this.parseIdent(!0);\n\n    switch (this.type) {\n      case k.parenL:\n        return this.parseDynamicImport(t);\n\n      case k.dot:\n        return t.meta = e, this.parseImportMeta(t);\n\n      default:\n        this.unexpected();\n    }\n  }, Y.parseDynamicImport = function (t) {\n    if (this.next(), t.source = this.parseMaybeAssign(), !this.eat(k.parenR)) {\n      var e = this.start;\n      this.eat(k.comma) && this.eat(k.parenR) ? this.raiseRecoverable(e, \"Trailing comma is not allowed in import()\") : this.unexpected(e);\n    }\n\n    return this.finishNode(t, \"ImportExpression\");\n  }, Y.parseImportMeta = function (t) {\n    this.next();\n    var e = this.containsEsc;\n    return t.property = this.parseIdent(!0), \"meta\" !== t.property.name && this.raiseRecoverable(t.property.start, \"The only valid meta property for import is 'import.meta'\"), e && this.raiseRecoverable(t.start, \"'import.meta' must not contain escaped characters\"), \"module\" !== this.options.sourceType && this.raiseRecoverable(t.start, \"Cannot use 'import.meta' outside a module\"), this.finishNode(t, \"MetaProperty\");\n  }, Y.parseLiteral = function (t) {\n    var e = this.startNode();\n    return e.value = t, e.raw = this.input.slice(this.start, this.end), 110 === e.raw.charCodeAt(e.raw.length - 1) && (e.bigint = e.raw.slice(0, -1)), this.next(), this.finishNode(e, \"Literal\");\n  }, Y.parseParenExpression = function () {\n    this.expect(k.parenL);\n    var t = this.parseExpression();\n    return this.expect(k.parenR), t;\n  }, Y.parseParenAndDistinguishExpression = function (t) {\n    var e,\n        i = this.start,\n        s = this.startLoc,\n        r = this.options.ecmaVersion >= 8;\n\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n      var n,\n          a = this.start,\n          o = this.startLoc,\n          h = [],\n          p = !0,\n          c = !1,\n          u = new q(),\n          l = this.yieldPos,\n          d = this.awaitPos;\n\n      for (this.yieldPos = 0, this.awaitPos = 0; this.type !== k.parenR;) {\n        if (p ? p = !1 : this.expect(k.comma), r && this.afterTrailingComma(k.parenR, !0)) {\n          c = !0;\n          break;\n        }\n\n        if (this.type === k.ellipsis) {\n          n = this.start, h.push(this.parseParenItem(this.parseRestBinding())), this.type === k.comma && this.raise(this.start, \"Comma is not permitted after the rest element\");\n          break;\n        }\n\n        h.push(this.parseMaybeAssign(!1, u, this.parseParenItem));\n      }\n\n      var f = this.start,\n          m = this.startLoc;\n      if (this.expect(k.parenR), t && !this.canInsertSemicolon() && this.eat(k.arrow)) return this.checkPatternErrors(u, !1), this.checkYieldAwaitInDefaultParams(), this.yieldPos = l, this.awaitPos = d, this.parseParenArrowList(i, s, h);\n      h.length && !c || this.unexpected(this.lastTokStart), n && this.unexpected(n), this.checkExpressionErrors(u, !0), this.yieldPos = l || this.yieldPos, this.awaitPos = d || this.awaitPos, h.length > 1 ? ((e = this.startNodeAt(a, o)).expressions = h, this.finishNodeAt(e, \"SequenceExpression\", f, m)) : e = h[0];\n    } else e = this.parseParenExpression();\n\n    if (this.options.preserveParens) {\n      var x = this.startNodeAt(i, s);\n      return x.expression = e, this.finishNode(x, \"ParenthesizedExpression\");\n    }\n\n    return e;\n  }, Y.parseParenItem = function (t) {\n    return t;\n  }, Y.parseParenArrowList = function (t, e, i) {\n    return this.parseArrowExpression(this.startNodeAt(t, e), i);\n  };\n  var $ = [];\n  Y.parseNew = function () {\n    this.containsEsc && this.raiseRecoverable(this.start, \"Escape sequence in keyword new\");\n    var t = this.startNode(),\n        e = this.parseIdent(!0);\n\n    if (this.options.ecmaVersion >= 6 && this.eat(k.dot)) {\n      t.meta = e;\n      var i = this.containsEsc;\n      return t.property = this.parseIdent(!0), \"target\" !== t.property.name && this.raiseRecoverable(t.property.start, \"The only valid meta property for new is 'new.target'\"), i && this.raiseRecoverable(t.start, \"'new.target' must not contain escaped characters\"), this.inNonArrowFunction() || this.raiseRecoverable(t.start, \"'new.target' can only be used in functions\"), this.finishNode(t, \"MetaProperty\");\n    }\n\n    var s = this.start,\n        r = this.startLoc,\n        n = this.type === k._import;\n    return t.callee = this.parseSubscripts(this.parseExprAtom(), s, r, !0), n && \"ImportExpression\" === t.callee.type && this.raise(s, \"Cannot use new with import()\"), this.eat(k.parenL) ? t.arguments = this.parseExprList(k.parenR, this.options.ecmaVersion >= 8, !1) : t.arguments = $, this.finishNode(t, \"NewExpression\");\n  }, Y.parseTemplateElement = function (t) {\n    var e = t.isTagged,\n        i = this.startNode();\n    return this.type === k.invalidTemplate ? (e || this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\"), i.value = {\n      raw: this.value,\n      cooked: null\n    }) : i.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    }, this.next(), i.tail = this.type === k.backQuote, this.finishNode(i, \"TemplateElement\");\n  }, Y.parseTemplate = function (t) {\n    void 0 === t && (t = {});\n    var e = t.isTagged;\n    void 0 === e && (e = !1);\n    var i = this.startNode();\n    this.next(), i.expressions = [];\n    var s = this.parseTemplateElement({\n      isTagged: e\n    });\n\n    for (i.quasis = [s]; !s.tail;) this.type === k.eof && this.raise(this.pos, \"Unterminated template literal\"), this.expect(k.dollarBraceL), i.expressions.push(this.parseExpression()), this.expect(k.braceR), i.quasis.push(s = this.parseTemplateElement({\n      isTagged: e\n    }));\n\n    return this.next(), this.finishNode(i, \"TemplateLiteral\");\n  }, Y.isAsyncProp = function (t) {\n    return !t.computed && \"Identifier\" === t.key.type && \"async\" === t.key.name && (this.type === k.name || this.type === k.num || this.type === k.string || this.type === k.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === k.star) && !E.test(this.input.slice(this.lastTokEnd, this.start));\n  }, Y.parseObj = function (t, e) {\n    var i = this.startNode(),\n        s = !0,\n        r = {};\n\n    for (i.properties = [], this.next(); !this.eat(k.braceR);) {\n      if (s) s = !1;else if (this.expect(k.comma), this.options.ecmaVersion >= 5 && this.afterTrailingComma(k.braceR)) break;\n      var n = this.parseProperty(t, e);\n      t || this.checkPropClash(n, r, e), i.properties.push(n);\n    }\n\n    return this.finishNode(i, t ? \"ObjectPattern\" : \"ObjectExpression\");\n  }, Y.parseProperty = function (t, e) {\n    var i,\n        s,\n        r,\n        n,\n        a = this.startNode();\n    if (this.options.ecmaVersion >= 9 && this.eat(k.ellipsis)) return t ? (a.argument = this.parseIdent(!1), this.type === k.comma && this.raise(this.start, \"Comma is not permitted after the rest element\"), this.finishNode(a, \"RestElement\")) : (this.type === k.parenL && e && (e.parenthesizedAssign < 0 && (e.parenthesizedAssign = this.start), e.parenthesizedBind < 0 && (e.parenthesizedBind = this.start)), a.argument = this.parseMaybeAssign(!1, e), this.type === k.comma && e && e.trailingComma < 0 && (e.trailingComma = this.start), this.finishNode(a, \"SpreadElement\"));\n    this.options.ecmaVersion >= 6 && (a.method = !1, a.shorthand = !1, (t || e) && (r = this.start, n = this.startLoc), t || (i = this.eat(k.star)));\n    var o = this.containsEsc;\n    return this.parsePropertyName(a), !t && !o && this.options.ecmaVersion >= 8 && !i && this.isAsyncProp(a) ? (s = !0, i = this.options.ecmaVersion >= 9 && this.eat(k.star), this.parsePropertyName(a, e)) : s = !1, this.parsePropertyValue(a, t, i, s, r, n, e, o), this.finishNode(a, \"Property\");\n  }, Y.parsePropertyValue = function (t, e, i, s, r, n, a, o) {\n    if ((i || s) && this.type === k.colon && this.unexpected(), this.eat(k.colon)) t.value = e ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(!1, a), t.kind = \"init\";else if (this.options.ecmaVersion >= 6 && this.type === k.parenL) e && this.unexpected(), t.kind = \"init\", t.method = !0, t.value = this.parseMethod(i, s);else if (e || o || !(this.options.ecmaVersion >= 5) || t.computed || \"Identifier\" !== t.key.type || \"get\" !== t.key.name && \"set\" !== t.key.name || this.type === k.comma || this.type === k.braceR) this.options.ecmaVersion >= 6 && !t.computed && \"Identifier\" === t.key.type ? ((i || s) && this.unexpected(), this.checkUnreserved(t.key), \"await\" !== t.key.name || this.awaitIdentPos || (this.awaitIdentPos = r), t.kind = \"init\", e ? t.value = this.parseMaybeDefault(r, n, t.key) : this.type === k.eq && a ? (a.shorthandAssign < 0 && (a.shorthandAssign = this.start), t.value = this.parseMaybeDefault(r, n, t.key)) : t.value = t.key, t.shorthand = !0) : this.unexpected();else {\n      (i || s) && this.unexpected(), t.kind = t.key.name, this.parsePropertyName(t), t.value = this.parseMethod(!1);\n      var h = \"get\" === t.kind ? 0 : 1;\n\n      if (t.value.params.length !== h) {\n        var p = t.value.start;\n        \"get\" === t.kind ? this.raiseRecoverable(p, \"getter should have no params\") : this.raiseRecoverable(p, \"setter should have exactly one param\");\n      } else \"set\" === t.kind && \"RestElement\" === t.value.params[0].type && this.raiseRecoverable(t.value.params[0].start, \"Setter cannot use rest params\");\n    }\n  }, Y.parsePropertyName = function (t) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(k.bracketL)) return t.computed = !0, t.key = this.parseMaybeAssign(), this.expect(k.bracketR), t.key;\n      t.computed = !1;\n    }\n\n    return t.key = this.type === k.num || this.type === k.string ? this.parseExprAtom() : this.parseIdent(\"never\" !== this.options.allowReserved);\n  }, Y.initFunction = function (t) {\n    t.id = null, this.options.ecmaVersion >= 6 && (t.generator = t.expression = !1), this.options.ecmaVersion >= 8 && (t.async = !1);\n  }, Y.parseMethod = function (t, e, i) {\n    var s = this.startNode(),\n        r = this.yieldPos,\n        n = this.awaitPos,\n        a = this.awaitIdentPos;\n    return this.initFunction(s), this.options.ecmaVersion >= 6 && (s.generator = t), this.options.ecmaVersion >= 8 && (s.async = !!e), this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(64 | D(e, s.generator) | (i ? 128 : 0)), this.expect(k.parenL), s.params = this.parseBindingList(k.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams(), this.parseFunctionBody(s, !1, !0), this.yieldPos = r, this.awaitPos = n, this.awaitIdentPos = a, this.finishNode(s, \"FunctionExpression\");\n  }, Y.parseArrowExpression = function (t, e, i) {\n    var s = this.yieldPos,\n        r = this.awaitPos,\n        n = this.awaitIdentPos;\n    return this.enterScope(16 | D(i, !1)), this.initFunction(t), this.options.ecmaVersion >= 8 && (t.async = !!i), this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, t.params = this.toAssignableList(e, !0), this.parseFunctionBody(t, !0, !1), this.yieldPos = s, this.awaitPos = r, this.awaitIdentPos = n, this.finishNode(t, \"ArrowFunctionExpression\");\n  }, Y.parseFunctionBody = function (t, e, i) {\n    var s = e && this.type !== k.braceL,\n        r = this.strict,\n        n = !1;\n    if (s) t.body = this.parseMaybeAssign(), t.expression = !0, this.checkParams(t, !1);else {\n      var a = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(t.params);\n      r && !a || (n = this.strictDirective(this.end)) && a && this.raiseRecoverable(t.start, \"Illegal 'use strict' directive in function with non-simple parameter list\");\n      var o = this.labels;\n      this.labels = [], n && (this.strict = !0), this.checkParams(t, !r && !n && !e && !i && this.isSimpleParamList(t.params)), this.strict && t.id && this.checkLVal(t.id, 5), t.body = this.parseBlock(!1, void 0, n && !r), t.expression = !1, this.adaptDirectivePrologue(t.body.body), this.labels = o;\n    }\n    this.exitScope();\n  }, Y.isSimpleParamList = function (t) {\n    for (var e = 0, i = t; e < i.length; e += 1) {\n      if (\"Identifier\" !== i[e].type) return !1;\n    }\n\n    return !0;\n  }, Y.checkParams = function (t, e) {\n    for (var i = {}, s = 0, r = t.params; s < r.length; s += 1) {\n      var n = r[s];\n      this.checkLVal(n, 1, e ? null : i);\n    }\n  }, Y.parseExprList = function (t, e, i, s) {\n    for (var r = [], n = !0; !this.eat(t);) {\n      if (n) n = !1;else if (this.expect(k.comma), e && this.afterTrailingComma(t)) break;\n      var a = void 0;\n      i && this.type === k.comma ? a = null : this.type === k.ellipsis ? (a = this.parseSpread(s), s && this.type === k.comma && s.trailingComma < 0 && (s.trailingComma = this.start)) : a = this.parseMaybeAssign(!1, s), r.push(a);\n    }\n\n    return r;\n  }, Y.checkUnreserved = function (t) {\n    var e = t.start,\n        i = t.end,\n        s = t.name;\n    (this.inGenerator && \"yield\" === s && this.raiseRecoverable(e, \"Cannot use 'yield' as identifier inside a generator\"), this.inAsync && \"await\" === s && this.raiseRecoverable(e, \"Cannot use 'await' as identifier inside an async function\"), this.keywords.test(s) && this.raise(e, \"Unexpected keyword '\" + s + \"'\"), this.options.ecmaVersion < 6 && -1 !== this.input.slice(e, i).indexOf(\"\\\\\")) || (this.strict ? this.reservedWordsStrict : this.reservedWords).test(s) && (this.inAsync || \"await\" !== s || this.raiseRecoverable(e, \"Cannot use keyword 'await' outside an async function\"), this.raiseRecoverable(e, \"The keyword '\" + s + \"' is reserved\"));\n  }, Y.parseIdent = function (t, e) {\n    var i = this.startNode();\n    return this.type === k.name ? i.name = this.value : this.type.keyword ? (i.name = this.type.keyword, \"class\" !== i.name && \"function\" !== i.name || this.lastTokEnd === this.lastTokStart + 1 && 46 === this.input.charCodeAt(this.lastTokStart) || this.context.pop()) : this.unexpected(), this.next(!!t), this.finishNode(i, \"Identifier\"), t || (this.checkUnreserved(i), \"await\" !== i.name || this.awaitIdentPos || (this.awaitIdentPos = i.start)), i;\n  }, Y.parseYield = function (t) {\n    this.yieldPos || (this.yieldPos = this.start);\n    var e = this.startNode();\n    return this.next(), this.type === k.semi || this.canInsertSemicolon() || this.type !== k.star && !this.type.startsExpr ? (e.delegate = !1, e.argument = null) : (e.delegate = this.eat(k.star), e.argument = this.parseMaybeAssign(t)), this.finishNode(e, \"YieldExpression\");\n  }, Y.parseAwait = function () {\n    this.awaitPos || (this.awaitPos = this.start);\n    var t = this.startNode();\n    return this.next(), t.argument = this.parseMaybeUnary(null, !1), this.finishNode(t, \"AwaitExpression\");\n  };\n  var tt = U.prototype;\n  tt.raise = function (t, e) {\n    var i = R(this.input, t);\n    e += \" (\" + i.line + \":\" + i.column + \")\";\n    var s = new SyntaxError(e);\n    throw s.pos = t, s.loc = i, s.raisedAt = this.pos, s;\n  }, tt.raiseRecoverable = tt.raise, tt.curPosition = function () {\n    if (this.options.locations) return new V(this.curLine, this.pos - this.lineStart);\n  };\n\n  var et = U.prototype,\n      it = function (t) {\n    this.flags = t, this.var = [], this.lexical = [], this.functions = [];\n  };\n\n  et.enterScope = function (t) {\n    this.scopeStack.push(new it(t));\n  }, et.exitScope = function () {\n    this.scopeStack.pop();\n  }, et.treatFunctionsAsVarInScope = function (t) {\n    return 2 & t.flags || !this.inModule && 1 & t.flags;\n  }, et.declareName = function (t, e, i) {\n    var s = !1;\n\n    if (2 === e) {\n      var r = this.currentScope();\n      s = r.lexical.indexOf(t) > -1 || r.functions.indexOf(t) > -1 || r.var.indexOf(t) > -1, r.lexical.push(t), this.inModule && 1 & r.flags && delete this.undefinedExports[t];\n    } else if (4 === e) {\n      this.currentScope().lexical.push(t);\n    } else if (3 === e) {\n      var n = this.currentScope();\n      s = this.treatFunctionsAsVar ? n.lexical.indexOf(t) > -1 : n.lexical.indexOf(t) > -1 || n.var.indexOf(t) > -1, n.functions.push(t);\n    } else for (var a = this.scopeStack.length - 1; a >= 0; --a) {\n      var o = this.scopeStack[a];\n\n      if (o.lexical.indexOf(t) > -1 && !(32 & o.flags && o.lexical[0] === t) || !this.treatFunctionsAsVarInScope(o) && o.functions.indexOf(t) > -1) {\n        s = !0;\n        break;\n      }\n\n      if (o.var.push(t), this.inModule && 1 & o.flags && delete this.undefinedExports[t], 3 & o.flags) break;\n    }\n\n    s && this.raiseRecoverable(i, \"Identifier '\" + t + \"' has already been declared\");\n  }, et.checkLocalExport = function (t) {\n    -1 === this.scopeStack[0].lexical.indexOf(t.name) && -1 === this.scopeStack[0].var.indexOf(t.name) && (this.undefinedExports[t.name] = t);\n  }, et.currentScope = function () {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }, et.currentVarScope = function () {\n    for (var t = this.scopeStack.length - 1;; t--) {\n      var e = this.scopeStack[t];\n      if (3 & e.flags) return e;\n    }\n  }, et.currentThisScope = function () {\n    for (var t = this.scopeStack.length - 1;; t--) {\n      var e = this.scopeStack[t];\n      if (3 & e.flags && !(16 & e.flags)) return e;\n    }\n  };\n\n  var st = function (t, e, i) {\n    this.type = \"\", this.start = e, this.end = 0, t.options.locations && (this.loc = new j(t, i)), t.options.directSourceFile && (this.sourceFile = t.options.directSourceFile), t.options.ranges && (this.range = [e, 0]);\n  },\n      rt = U.prototype;\n\n  function nt(t, e, i, s) {\n    return t.type = e, t.end = i, this.options.locations && (t.loc.end = s), this.options.ranges && (t.range[1] = i), t;\n  }\n\n  rt.startNode = function () {\n    return new st(this, this.start, this.startLoc);\n  }, rt.startNodeAt = function (t, e) {\n    return new st(this, t, e);\n  }, rt.finishNode = function (t, e) {\n    return nt.call(this, t, e, this.lastTokEnd, this.lastTokEndLoc);\n  }, rt.finishNodeAt = function (t, e, i, s) {\n    return nt.call(this, t, e, i, s);\n  };\n\n  var at = function (t, e, i, s, r) {\n    this.token = t, this.isExpr = !!e, this.preserveSpace = !!i, this.override = s, this.generator = !!r;\n  },\n      ot = {\n    b_stat: new at(\"{\", !1),\n    b_expr: new at(\"{\", !0),\n    b_tmpl: new at(\"${\", !1),\n    p_stat: new at(\"(\", !1),\n    p_expr: new at(\"(\", !0),\n    q_tmpl: new at(\"`\", !0, !0, function (t) {\n      return t.tryReadTemplateToken();\n    }),\n    f_stat: new at(\"function\", !1),\n    f_expr: new at(\"function\", !0),\n    f_expr_gen: new at(\"function\", !0, !1, null, !0),\n    f_gen: new at(\"function\", !1, !1, null, !0)\n  },\n      ht = U.prototype;\n\n  ht.initialContext = function () {\n    return [ot.b_stat];\n  }, ht.braceIsBlock = function (t) {\n    var e = this.curContext();\n    return e === ot.f_expr || e === ot.f_stat || (t !== k.colon || e !== ot.b_stat && e !== ot.b_expr ? t === k._return || t === k.name && this.exprAllowed ? E.test(this.input.slice(this.lastTokEnd, this.start)) : t === k._else || t === k.semi || t === k.eof || t === k.parenR || t === k.arrow || (t === k.braceL ? e === ot.b_stat : t !== k._var && t !== k._const && t !== k.name && !this.exprAllowed) : !e.isExpr);\n  }, ht.inGeneratorContext = function () {\n    for (var t = this.context.length - 1; t >= 1; t--) {\n      var e = this.context[t];\n      if (\"function\" === e.token) return e.generator;\n    }\n\n    return !1;\n  }, ht.updateContext = function (t) {\n    var e,\n        i = this.type;\n    i.keyword && t === k.dot ? this.exprAllowed = !1 : (e = i.updateContext) ? e.call(this, t) : this.exprAllowed = i.beforeExpr;\n  }, k.parenR.updateContext = k.braceR.updateContext = function () {\n    if (1 !== this.context.length) {\n      var t = this.context.pop();\n      t === ot.b_stat && \"function\" === this.curContext().token && (t = this.context.pop()), this.exprAllowed = !t.isExpr;\n    } else this.exprAllowed = !0;\n  }, k.braceL.updateContext = function (t) {\n    this.context.push(this.braceIsBlock(t) ? ot.b_stat : ot.b_expr), this.exprAllowed = !0;\n  }, k.dollarBraceL.updateContext = function () {\n    this.context.push(ot.b_tmpl), this.exprAllowed = !0;\n  }, k.parenL.updateContext = function (t) {\n    var e = t === k._if || t === k._for || t === k._with || t === k._while;\n    this.context.push(e ? ot.p_stat : ot.p_expr), this.exprAllowed = !0;\n  }, k.incDec.updateContext = function () {}, k._function.updateContext = k._class.updateContext = function (t) {\n    !t.beforeExpr || t === k.semi || t === k._else || t === k._return && E.test(this.input.slice(this.lastTokEnd, this.start)) || (t === k.colon || t === k.braceL) && this.curContext() === ot.b_stat ? this.context.push(ot.f_stat) : this.context.push(ot.f_expr), this.exprAllowed = !1;\n  }, k.backQuote.updateContext = function () {\n    this.curContext() === ot.q_tmpl ? this.context.pop() : this.context.push(ot.q_tmpl), this.exprAllowed = !1;\n  }, k.star.updateContext = function (t) {\n    if (t === k._function) {\n      var e = this.context.length - 1;\n      this.context[e] === ot.f_expr ? this.context[e] = ot.f_expr_gen : this.context[e] = ot.f_gen;\n    }\n\n    this.exprAllowed = !0;\n  }, k.name.updateContext = function (t) {\n    var e = !1;\n    this.options.ecmaVersion >= 6 && t !== k.dot && (\"of\" === this.value && !this.exprAllowed || \"yield\" === this.value && this.inGeneratorContext()) && (e = !0), this.exprAllowed = e;\n  };\n  var pt = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\",\n      ct = pt + \" Extended_Pictographic\",\n      ut = {\n    9: pt,\n    10: ct,\n    11: \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS Extended_Pictographic\"\n  },\n      lt = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\",\n      dt = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\",\n      ft = dt + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\",\n      mt = {\n    9: dt,\n    10: ft,\n    11: \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\"\n  },\n      xt = {};\n\n  function gt(t) {\n    var e = xt[t] = {\n      binary: O(ut[t] + \" \" + lt),\n      nonBinary: {\n        General_Category: O(lt),\n        Script: O(mt[t])\n      }\n    };\n    e.nonBinary.Script_Extensions = e.nonBinary.Script, e.nonBinary.gc = e.nonBinary.General_Category, e.nonBinary.sc = e.nonBinary.Script, e.nonBinary.scx = e.nonBinary.Script_Extensions;\n  }\n\n  gt(9), gt(10), gt(11);\n\n  var yt = U.prototype,\n      vt = function (t) {\n    this.parser = t, this.validFlags = \"gim\" + (t.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (t.options.ecmaVersion >= 9 ? \"s\" : \"\"), this.unicodeProperties = xt[t.options.ecmaVersion >= 11 ? 11 : t.options.ecmaVersion], this.source = \"\", this.flags = \"\", this.start = 0, this.switchU = !1, this.switchN = !1, this.pos = 0, this.lastIntValue = 0, this.lastStringValue = \"\", this.lastAssertionIsQuantifiable = !1, this.numCapturingParens = 0, this.maxBackReference = 0, this.groupNames = [], this.backReferenceNames = [];\n  };\n\n  function bt(t) {\n    return t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode(55296 + (t >> 10), 56320 + (1023 & t)));\n  }\n\n  function _t(t) {\n    return 36 === t || t >= 40 && t <= 43 || 46 === t || 63 === t || t >= 91 && t <= 94 || t >= 123 && t <= 125;\n  }\n\n  function kt(t) {\n    return t >= 65 && t <= 90 || t >= 97 && t <= 122;\n  }\n\n  function Et(t) {\n    return kt(t) || 95 === t;\n  }\n\n  function St(t) {\n    return Et(t) || Ct(t);\n  }\n\n  function Ct(t) {\n    return t >= 48 && t <= 57;\n  }\n\n  function wt(t) {\n    return t >= 48 && t <= 57 || t >= 65 && t <= 70 || t >= 97 && t <= 102;\n  }\n\n  function At(t) {\n    return t >= 65 && t <= 70 ? t - 65 + 10 : t >= 97 && t <= 102 ? t - 97 + 10 : t - 48;\n  }\n\n  function It(t) {\n    return t >= 48 && t <= 55;\n  }\n\n  vt.prototype.reset = function (t, e, i) {\n    var s = -1 !== i.indexOf(\"u\");\n    this.start = 0 | t, this.source = e + \"\", this.flags = i, this.switchU = s && this.parser.options.ecmaVersion >= 6, this.switchN = s && this.parser.options.ecmaVersion >= 9;\n  }, vt.prototype.raise = function (t) {\n    this.parser.raiseRecoverable(this.start, \"Invalid regular expression: /\" + this.source + \"/: \" + t);\n  }, vt.prototype.at = function (t, e) {\n    void 0 === e && (e = !1);\n    var i = this.source,\n        s = i.length;\n    if (t >= s) return -1;\n    var r = i.charCodeAt(t);\n    if (!e && !this.switchU || r <= 55295 || r >= 57344 || t + 1 >= s) return r;\n    var n = i.charCodeAt(t + 1);\n    return n >= 56320 && n <= 57343 ? (r << 10) + n - 56613888 : r;\n  }, vt.prototype.nextIndex = function (t, e) {\n    void 0 === e && (e = !1);\n    var i = this.source,\n        s = i.length;\n    if (t >= s) return s;\n    var r,\n        n = i.charCodeAt(t);\n    return !e && !this.switchU || n <= 55295 || n >= 57344 || t + 1 >= s || (r = i.charCodeAt(t + 1)) < 56320 || r > 57343 ? t + 1 : t + 2;\n  }, vt.prototype.current = function (t) {\n    return void 0 === t && (t = !1), this.at(this.pos, t);\n  }, vt.prototype.lookahead = function (t) {\n    return void 0 === t && (t = !1), this.at(this.nextIndex(this.pos, t), t);\n  }, vt.prototype.advance = function (t) {\n    void 0 === t && (t = !1), this.pos = this.nextIndex(this.pos, t);\n  }, vt.prototype.eat = function (t, e) {\n    return void 0 === e && (e = !1), this.current(e) === t && (this.advance(e), !0);\n  }, yt.validateRegExpFlags = function (t) {\n    for (var e = t.validFlags, i = t.flags, s = 0; s < i.length; s++) {\n      var r = i.charAt(s);\n      -1 === e.indexOf(r) && this.raise(t.start, \"Invalid regular expression flag\"), i.indexOf(r, s + 1) > -1 && this.raise(t.start, \"Duplicate regular expression flag\");\n    }\n  }, yt.validateRegExpPattern = function (t) {\n    this.regexp_pattern(t), !t.switchN && this.options.ecmaVersion >= 9 && t.groupNames.length > 0 && (t.switchN = !0, this.regexp_pattern(t));\n  }, yt.regexp_pattern = function (t) {\n    t.pos = 0, t.lastIntValue = 0, t.lastStringValue = \"\", t.lastAssertionIsQuantifiable = !1, t.numCapturingParens = 0, t.maxBackReference = 0, t.groupNames.length = 0, t.backReferenceNames.length = 0, this.regexp_disjunction(t), t.pos !== t.source.length && (t.eat(41) && t.raise(\"Unmatched ')'\"), (t.eat(93) || t.eat(125)) && t.raise(\"Lone quantifier brackets\")), t.maxBackReference > t.numCapturingParens && t.raise(\"Invalid escape\");\n\n    for (var e = 0, i = t.backReferenceNames; e < i.length; e += 1) {\n      var s = i[e];\n      -1 === t.groupNames.indexOf(s) && t.raise(\"Invalid named capture referenced\");\n    }\n  }, yt.regexp_disjunction = function (t) {\n    for (this.regexp_alternative(t); t.eat(124);) this.regexp_alternative(t);\n\n    this.regexp_eatQuantifier(t, !0) && t.raise(\"Nothing to repeat\"), t.eat(123) && t.raise(\"Lone quantifier brackets\");\n  }, yt.regexp_alternative = function (t) {\n    for (; t.pos < t.source.length && this.regexp_eatTerm(t););\n  }, yt.regexp_eatTerm = function (t) {\n    return this.regexp_eatAssertion(t) ? (t.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(t) && t.switchU && t.raise(\"Invalid quantifier\"), !0) : !!(t.switchU ? this.regexp_eatAtom(t) : this.regexp_eatExtendedAtom(t)) && (this.regexp_eatQuantifier(t), !0);\n  }, yt.regexp_eatAssertion = function (t) {\n    var e = t.pos;\n    if (t.lastAssertionIsQuantifiable = !1, t.eat(94) || t.eat(36)) return !0;\n\n    if (t.eat(92)) {\n      if (t.eat(66) || t.eat(98)) return !0;\n      t.pos = e;\n    }\n\n    if (t.eat(40) && t.eat(63)) {\n      var i = !1;\n      if (this.options.ecmaVersion >= 9 && (i = t.eat(60)), t.eat(61) || t.eat(33)) return this.regexp_disjunction(t), t.eat(41) || t.raise(\"Unterminated group\"), t.lastAssertionIsQuantifiable = !i, !0;\n    }\n\n    return t.pos = e, !1;\n  }, yt.regexp_eatQuantifier = function (t, e) {\n    return void 0 === e && (e = !1), !!this.regexp_eatQuantifierPrefix(t, e) && (t.eat(63), !0);\n  }, yt.regexp_eatQuantifierPrefix = function (t, e) {\n    return t.eat(42) || t.eat(43) || t.eat(63) || this.regexp_eatBracedQuantifier(t, e);\n  }, yt.regexp_eatBracedQuantifier = function (t, e) {\n    var i = t.pos;\n\n    if (t.eat(123)) {\n      var s = 0,\n          r = -1;\n      if (this.regexp_eatDecimalDigits(t) && (s = t.lastIntValue, t.eat(44) && this.regexp_eatDecimalDigits(t) && (r = t.lastIntValue), t.eat(125))) return -1 !== r && r < s && !e && t.raise(\"numbers out of order in {} quantifier\"), !0;\n      t.switchU && !e && t.raise(\"Incomplete quantifier\"), t.pos = i;\n    }\n\n    return !1;\n  }, yt.regexp_eatAtom = function (t) {\n    return this.regexp_eatPatternCharacters(t) || t.eat(46) || this.regexp_eatReverseSolidusAtomEscape(t) || this.regexp_eatCharacterClass(t) || this.regexp_eatUncapturingGroup(t) || this.regexp_eatCapturingGroup(t);\n  }, yt.regexp_eatReverseSolidusAtomEscape = function (t) {\n    var e = t.pos;\n\n    if (t.eat(92)) {\n      if (this.regexp_eatAtomEscape(t)) return !0;\n      t.pos = e;\n    }\n\n    return !1;\n  }, yt.regexp_eatUncapturingGroup = function (t) {\n    var e = t.pos;\n\n    if (t.eat(40)) {\n      if (t.eat(63) && t.eat(58)) {\n        if (this.regexp_disjunction(t), t.eat(41)) return !0;\n        t.raise(\"Unterminated group\");\n      }\n\n      t.pos = e;\n    }\n\n    return !1;\n  }, yt.regexp_eatCapturingGroup = function (t) {\n    if (t.eat(40)) {\n      if (this.options.ecmaVersion >= 9 ? this.regexp_groupSpecifier(t) : 63 === t.current() && t.raise(\"Invalid group\"), this.regexp_disjunction(t), t.eat(41)) return t.numCapturingParens += 1, !0;\n      t.raise(\"Unterminated group\");\n    }\n\n    return !1;\n  }, yt.regexp_eatExtendedAtom = function (t) {\n    return t.eat(46) || this.regexp_eatReverseSolidusAtomEscape(t) || this.regexp_eatCharacterClass(t) || this.regexp_eatUncapturingGroup(t) || this.regexp_eatCapturingGroup(t) || this.regexp_eatInvalidBracedQuantifier(t) || this.regexp_eatExtendedPatternCharacter(t);\n  }, yt.regexp_eatInvalidBracedQuantifier = function (t) {\n    return this.regexp_eatBracedQuantifier(t, !0) && t.raise(\"Nothing to repeat\"), !1;\n  }, yt.regexp_eatSyntaxCharacter = function (t) {\n    var e = t.current();\n    return !!_t(e) && (t.lastIntValue = e, t.advance(), !0);\n  }, yt.regexp_eatPatternCharacters = function (t) {\n    for (var e = t.pos, i = 0; -1 !== (i = t.current()) && !_t(i);) t.advance();\n\n    return t.pos !== e;\n  }, yt.regexp_eatExtendedPatternCharacter = function (t) {\n    var e = t.current();\n    return !(-1 === e || 36 === e || e >= 40 && e <= 43 || 46 === e || 63 === e || 91 === e || 94 === e || 124 === e) && (t.advance(), !0);\n  }, yt.regexp_groupSpecifier = function (t) {\n    if (t.eat(63)) {\n      if (this.regexp_eatGroupName(t)) return -1 !== t.groupNames.indexOf(t.lastStringValue) && t.raise(\"Duplicate capture group name\"), void t.groupNames.push(t.lastStringValue);\n      t.raise(\"Invalid group\");\n    }\n  }, yt.regexp_eatGroupName = function (t) {\n    if (t.lastStringValue = \"\", t.eat(60)) {\n      if (this.regexp_eatRegExpIdentifierName(t) && t.eat(62)) return !0;\n      t.raise(\"Invalid capture group name\");\n    }\n\n    return !1;\n  }, yt.regexp_eatRegExpIdentifierName = function (t) {\n    if (t.lastStringValue = \"\", this.regexp_eatRegExpIdentifierStart(t)) {\n      for (t.lastStringValue += bt(t.lastIntValue); this.regexp_eatRegExpIdentifierPart(t);) t.lastStringValue += bt(t.lastIntValue);\n\n      return !0;\n    }\n\n    return !1;\n  }, yt.regexp_eatRegExpIdentifierStart = function (t) {\n    var e = t.pos,\n        i = this.options.ecmaVersion >= 11,\n        s = t.current(i);\n    return t.advance(i), 92 === s && this.regexp_eatRegExpUnicodeEscapeSequence(t, i) && (s = t.lastIntValue), function (t) {\n      return f(t, !0) || 36 === t || 95 === t;\n    }(s) ? (t.lastIntValue = s, !0) : (t.pos = e, !1);\n  }, yt.regexp_eatRegExpIdentifierPart = function (t) {\n    var e = t.pos,\n        i = this.options.ecmaVersion >= 11,\n        s = t.current(i);\n    return t.advance(i), 92 === s && this.regexp_eatRegExpUnicodeEscapeSequence(t, i) && (s = t.lastIntValue), function (t) {\n      return m(t, !0) || 36 === t || 95 === t || 8204 === t || 8205 === t;\n    }(s) ? (t.lastIntValue = s, !0) : (t.pos = e, !1);\n  }, yt.regexp_eatAtomEscape = function (t) {\n    return !!(this.regexp_eatBackReference(t) || this.regexp_eatCharacterClassEscape(t) || this.regexp_eatCharacterEscape(t) || t.switchN && this.regexp_eatKGroupName(t)) || (t.switchU && (99 === t.current() && t.raise(\"Invalid unicode escape\"), t.raise(\"Invalid escape\")), !1);\n  }, yt.regexp_eatBackReference = function (t) {\n    var e = t.pos;\n\n    if (this.regexp_eatDecimalEscape(t)) {\n      var i = t.lastIntValue;\n      if (t.switchU) return i > t.maxBackReference && (t.maxBackReference = i), !0;\n      if (i <= t.numCapturingParens) return !0;\n      t.pos = e;\n    }\n\n    return !1;\n  }, yt.regexp_eatKGroupName = function (t) {\n    if (t.eat(107)) {\n      if (this.regexp_eatGroupName(t)) return t.backReferenceNames.push(t.lastStringValue), !0;\n      t.raise(\"Invalid named reference\");\n    }\n\n    return !1;\n  }, yt.regexp_eatCharacterEscape = function (t) {\n    return this.regexp_eatControlEscape(t) || this.regexp_eatCControlLetter(t) || this.regexp_eatZero(t) || this.regexp_eatHexEscapeSequence(t) || this.regexp_eatRegExpUnicodeEscapeSequence(t, !1) || !t.switchU && this.regexp_eatLegacyOctalEscapeSequence(t) || this.regexp_eatIdentityEscape(t);\n  }, yt.regexp_eatCControlLetter = function (t) {\n    var e = t.pos;\n\n    if (t.eat(99)) {\n      if (this.regexp_eatControlLetter(t)) return !0;\n      t.pos = e;\n    }\n\n    return !1;\n  }, yt.regexp_eatZero = function (t) {\n    return 48 === t.current() && !Ct(t.lookahead()) && (t.lastIntValue = 0, t.advance(), !0);\n  }, yt.regexp_eatControlEscape = function (t) {\n    var e = t.current();\n    return 116 === e ? (t.lastIntValue = 9, t.advance(), !0) : 110 === e ? (t.lastIntValue = 10, t.advance(), !0) : 118 === e ? (t.lastIntValue = 11, t.advance(), !0) : 102 === e ? (t.lastIntValue = 12, t.advance(), !0) : 114 === e && (t.lastIntValue = 13, t.advance(), !0);\n  }, yt.regexp_eatControlLetter = function (t) {\n    var e = t.current();\n    return !!kt(e) && (t.lastIntValue = e % 32, t.advance(), !0);\n  }, yt.regexp_eatRegExpUnicodeEscapeSequence = function (t, e) {\n    void 0 === e && (e = !1);\n    var i,\n        s = t.pos,\n        r = e || t.switchU;\n\n    if (t.eat(117)) {\n      if (this.regexp_eatFixedHexDigits(t, 4)) {\n        var n = t.lastIntValue;\n\n        if (r && n >= 55296 && n <= 56319) {\n          var a = t.pos;\n\n          if (t.eat(92) && t.eat(117) && this.regexp_eatFixedHexDigits(t, 4)) {\n            var o = t.lastIntValue;\n            if (o >= 56320 && o <= 57343) return t.lastIntValue = 1024 * (n - 55296) + (o - 56320) + 65536, !0;\n          }\n\n          t.pos = a, t.lastIntValue = n;\n        }\n\n        return !0;\n      }\n\n      if (r && t.eat(123) && this.regexp_eatHexDigits(t) && t.eat(125) && (i = t.lastIntValue) >= 0 && i <= 1114111) return !0;\n      r && t.raise(\"Invalid unicode escape\"), t.pos = s;\n    }\n\n    return !1;\n  }, yt.regexp_eatIdentityEscape = function (t) {\n    if (t.switchU) return !!this.regexp_eatSyntaxCharacter(t) || !!t.eat(47) && (t.lastIntValue = 47, !0);\n    var e = t.current();\n    return !(99 === e || t.switchN && 107 === e) && (t.lastIntValue = e, t.advance(), !0);\n  }, yt.regexp_eatDecimalEscape = function (t) {\n    t.lastIntValue = 0;\n    var e = t.current();\n\n    if (e >= 49 && e <= 57) {\n      do {\n        t.lastIntValue = 10 * t.lastIntValue + (e - 48), t.advance();\n      } while ((e = t.current()) >= 48 && e <= 57);\n\n      return !0;\n    }\n\n    return !1;\n  }, yt.regexp_eatCharacterClassEscape = function (t) {\n    var e = t.current();\n    if (function (t) {\n      return 100 === t || 68 === t || 115 === t || 83 === t || 119 === t || 87 === t;\n    }(e)) return t.lastIntValue = -1, t.advance(), !0;\n\n    if (t.switchU && this.options.ecmaVersion >= 9 && (80 === e || 112 === e)) {\n      if (t.lastIntValue = -1, t.advance(), t.eat(123) && this.regexp_eatUnicodePropertyValueExpression(t) && t.eat(125)) return !0;\n      t.raise(\"Invalid property name\");\n    }\n\n    return !1;\n  }, yt.regexp_eatUnicodePropertyValueExpression = function (t) {\n    var e = t.pos;\n\n    if (this.regexp_eatUnicodePropertyName(t) && t.eat(61)) {\n      var i = t.lastStringValue;\n\n      if (this.regexp_eatUnicodePropertyValue(t)) {\n        var s = t.lastStringValue;\n        return this.regexp_validateUnicodePropertyNameAndValue(t, i, s), !0;\n      }\n    }\n\n    if (t.pos = e, this.regexp_eatLoneUnicodePropertyNameOrValue(t)) {\n      var r = t.lastStringValue;\n      return this.regexp_validateUnicodePropertyNameOrValue(t, r), !0;\n    }\n\n    return !1;\n  }, yt.regexp_validateUnicodePropertyNameAndValue = function (t, e, i) {\n    N(t.unicodeProperties.nonBinary, e) || t.raise(\"Invalid property name\"), t.unicodeProperties.nonBinary[e].test(i) || t.raise(\"Invalid property value\");\n  }, yt.regexp_validateUnicodePropertyNameOrValue = function (t, e) {\n    t.unicodeProperties.binary.test(e) || t.raise(\"Invalid property name\");\n  }, yt.regexp_eatUnicodePropertyName = function (t) {\n    var e = 0;\n\n    for (t.lastStringValue = \"\"; Et(e = t.current());) t.lastStringValue += bt(e), t.advance();\n\n    return \"\" !== t.lastStringValue;\n  }, yt.regexp_eatUnicodePropertyValue = function (t) {\n    var e = 0;\n\n    for (t.lastStringValue = \"\"; St(e = t.current());) t.lastStringValue += bt(e), t.advance();\n\n    return \"\" !== t.lastStringValue;\n  }, yt.regexp_eatLoneUnicodePropertyNameOrValue = function (t) {\n    return this.regexp_eatUnicodePropertyValue(t);\n  }, yt.regexp_eatCharacterClass = function (t) {\n    if (t.eat(91)) {\n      if (t.eat(94), this.regexp_classRanges(t), t.eat(93)) return !0;\n      t.raise(\"Unterminated character class\");\n    }\n\n    return !1;\n  }, yt.regexp_classRanges = function (t) {\n    for (; this.regexp_eatClassAtom(t);) {\n      var e = t.lastIntValue;\n\n      if (t.eat(45) && this.regexp_eatClassAtom(t)) {\n        var i = t.lastIntValue;\n        !t.switchU || -1 !== e && -1 !== i || t.raise(\"Invalid character class\"), -1 !== e && -1 !== i && e > i && t.raise(\"Range out of order in character class\");\n      }\n    }\n  }, yt.regexp_eatClassAtom = function (t) {\n    var e = t.pos;\n\n    if (t.eat(92)) {\n      if (this.regexp_eatClassEscape(t)) return !0;\n\n      if (t.switchU) {\n        var i = t.current();\n        (99 === i || It(i)) && t.raise(\"Invalid class escape\"), t.raise(\"Invalid escape\");\n      }\n\n      t.pos = e;\n    }\n\n    var s = t.current();\n    return 93 !== s && (t.lastIntValue = s, t.advance(), !0);\n  }, yt.regexp_eatClassEscape = function (t) {\n    var e = t.pos;\n    if (t.eat(98)) return t.lastIntValue = 8, !0;\n    if (t.switchU && t.eat(45)) return t.lastIntValue = 45, !0;\n\n    if (!t.switchU && t.eat(99)) {\n      if (this.regexp_eatClassControlLetter(t)) return !0;\n      t.pos = e;\n    }\n\n    return this.regexp_eatCharacterClassEscape(t) || this.regexp_eatCharacterEscape(t);\n  }, yt.regexp_eatClassControlLetter = function (t) {\n    var e = t.current();\n    return !(!Ct(e) && 95 !== e) && (t.lastIntValue = e % 32, t.advance(), !0);\n  }, yt.regexp_eatHexEscapeSequence = function (t) {\n    var e = t.pos;\n\n    if (t.eat(120)) {\n      if (this.regexp_eatFixedHexDigits(t, 2)) return !0;\n      t.switchU && t.raise(\"Invalid escape\"), t.pos = e;\n    }\n\n    return !1;\n  }, yt.regexp_eatDecimalDigits = function (t) {\n    var e = t.pos,\n        i = 0;\n\n    for (t.lastIntValue = 0; Ct(i = t.current());) t.lastIntValue = 10 * t.lastIntValue + (i - 48), t.advance();\n\n    return t.pos !== e;\n  }, yt.regexp_eatHexDigits = function (t) {\n    var e = t.pos,\n        i = 0;\n\n    for (t.lastIntValue = 0; wt(i = t.current());) t.lastIntValue = 16 * t.lastIntValue + At(i), t.advance();\n\n    return t.pos !== e;\n  }, yt.regexp_eatLegacyOctalEscapeSequence = function (t) {\n    if (this.regexp_eatOctalDigit(t)) {\n      var e = t.lastIntValue;\n\n      if (this.regexp_eatOctalDigit(t)) {\n        var i = t.lastIntValue;\n        e <= 3 && this.regexp_eatOctalDigit(t) ? t.lastIntValue = 64 * e + 8 * i + t.lastIntValue : t.lastIntValue = 8 * e + i;\n      } else t.lastIntValue = e;\n\n      return !0;\n    }\n\n    return !1;\n  }, yt.regexp_eatOctalDigit = function (t) {\n    var e = t.current();\n    return It(e) ? (t.lastIntValue = e - 48, t.advance(), !0) : (t.lastIntValue = 0, !1);\n  }, yt.regexp_eatFixedHexDigits = function (t, e) {\n    var i = t.pos;\n    t.lastIntValue = 0;\n\n    for (var s = 0; s < e; ++s) {\n      var r = t.current();\n      if (!wt(r)) return t.pos = i, !1;\n      t.lastIntValue = 16 * t.lastIntValue + At(r), t.advance();\n    }\n\n    return !0;\n  };\n\n  var Pt = function (t) {\n    this.type = t.type, this.value = t.value, this.start = t.start, this.end = t.end, t.options.locations && (this.loc = new j(t, t.startLoc, t.endLoc)), t.options.ranges && (this.range = [t.start, t.end]);\n  },\n      Tt = U.prototype;\n\n  function Nt(t) {\n    return t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode(55296 + (t >> 10), 56320 + (1023 & t)));\n  }\n\n  Tt.next = function (t) {\n    !t && this.type.keyword && this.containsEsc && this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword), this.options.onToken && this.options.onToken(new Pt(this)), this.lastTokEnd = this.end, this.lastTokStart = this.start, this.lastTokEndLoc = this.endLoc, this.lastTokStartLoc = this.startLoc, this.nextToken();\n  }, Tt.getToken = function () {\n    return this.next(), new Pt(this);\n  }, \"undefined\" != typeof Symbol && (Tt[Symbol.iterator] = function () {\n    var t = this;\n    return {\n      next: function () {\n        var e = t.getToken();\n        return {\n          done: e.type === k.eof,\n          value: e\n        };\n      }\n    };\n  }), Tt.curContext = function () {\n    return this.context[this.context.length - 1];\n  }, Tt.nextToken = function () {\n    var t = this.curContext();\n    return t && t.preserveSpace || this.skipSpace(), this.start = this.pos, this.options.locations && (this.startLoc = this.curPosition()), this.pos >= this.input.length ? this.finishToken(k.eof) : t.override ? t.override(this) : void this.readToken(this.fullCharCodeAtPos());\n  }, Tt.readToken = function (t) {\n    return f(t, this.options.ecmaVersion >= 6) || 92 === t ? this.readWord() : this.getTokenFromCode(t);\n  }, Tt.fullCharCodeAtPos = function () {\n    var t = this.input.charCodeAt(this.pos);\n    return t <= 55295 || t >= 57344 ? t : (t << 10) + this.input.charCodeAt(this.pos + 1) - 56613888;\n  }, Tt.skipBlockComment = function () {\n    var t,\n        e = this.options.onComment && this.curPosition(),\n        i = this.pos,\n        s = this.input.indexOf(\"*/\", this.pos += 2);\n    if (-1 === s && this.raise(this.pos - 2, \"Unterminated comment\"), this.pos = s + 2, this.options.locations) for (S.lastIndex = i; (t = S.exec(this.input)) && t.index < this.pos;) ++this.curLine, this.lineStart = t.index + t[0].length;\n    this.options.onComment && this.options.onComment(!0, this.input.slice(i + 2, s), i, this.pos, e, this.curPosition());\n  }, Tt.skipLineComment = function (t) {\n    for (var e = this.pos, i = this.options.onComment && this.curPosition(), s = this.input.charCodeAt(this.pos += t); this.pos < this.input.length && !C(s);) s = this.input.charCodeAt(++this.pos);\n\n    this.options.onComment && this.options.onComment(!1, this.input.slice(e + t, this.pos), e, this.pos, i, this.curPosition());\n  }, Tt.skipSpace = function () {\n    t: for (; this.pos < this.input.length;) {\n      var t = this.input.charCodeAt(this.pos);\n\n      switch (t) {\n        case 32:\n        case 160:\n          ++this.pos;\n          break;\n\n        case 13:\n          10 === this.input.charCodeAt(this.pos + 1) && ++this.pos;\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.pos, this.options.locations && (++this.curLine, this.lineStart = this.pos);\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break t;\n          }\n\n          break;\n\n        default:\n          if (!(t > 8 && t < 14 || t >= 5760 && w.test(String.fromCharCode(t)))) break t;\n          ++this.pos;\n      }\n    }\n  }, Tt.finishToken = function (t, e) {\n    this.end = this.pos, this.options.locations && (this.endLoc = this.curPosition());\n    var i = this.type;\n    this.type = t, this.value = e, this.updateContext(i);\n  }, Tt.readToken_dot = function () {\n    var t = this.input.charCodeAt(this.pos + 1);\n    if (t >= 48 && t <= 57) return this.readNumber(!0);\n    var e = this.input.charCodeAt(this.pos + 2);\n    return this.options.ecmaVersion >= 6 && 46 === t && 46 === e ? (this.pos += 3, this.finishToken(k.ellipsis)) : (++this.pos, this.finishToken(k.dot));\n  }, Tt.readToken_slash = function () {\n    var t = this.input.charCodeAt(this.pos + 1);\n    return this.exprAllowed ? (++this.pos, this.readRegexp()) : 61 === t ? this.finishOp(k.assign, 2) : this.finishOp(k.slash, 1);\n  }, Tt.readToken_mult_modulo_exp = function (t) {\n    var e = this.input.charCodeAt(this.pos + 1),\n        i = 1,\n        s = 42 === t ? k.star : k.modulo;\n    return this.options.ecmaVersion >= 7 && 42 === t && 42 === e && (++i, s = k.starstar, e = this.input.charCodeAt(this.pos + 2)), 61 === e ? this.finishOp(k.assign, i + 1) : this.finishOp(s, i);\n  }, Tt.readToken_pipe_amp = function (t) {\n    var e = this.input.charCodeAt(this.pos + 1);\n    return e === t ? this.finishOp(124 === t ? k.logicalOR : k.logicalAND, 2) : 61 === e ? this.finishOp(k.assign, 2) : this.finishOp(124 === t ? k.bitwiseOR : k.bitwiseAND, 1);\n  }, Tt.readToken_caret = function () {\n    return 61 === this.input.charCodeAt(this.pos + 1) ? this.finishOp(k.assign, 2) : this.finishOp(k.bitwiseXOR, 1);\n  }, Tt.readToken_plus_min = function (t) {\n    var e = this.input.charCodeAt(this.pos + 1);\n    return e === t ? 45 !== e || this.inModule || 62 !== this.input.charCodeAt(this.pos + 2) || 0 !== this.lastTokEnd && !E.test(this.input.slice(this.lastTokEnd, this.pos)) ? this.finishOp(k.incDec, 2) : (this.skipLineComment(3), this.skipSpace(), this.nextToken()) : 61 === e ? this.finishOp(k.assign, 2) : this.finishOp(k.plusMin, 1);\n  }, Tt.readToken_lt_gt = function (t) {\n    var e = this.input.charCodeAt(this.pos + 1),\n        i = 1;\n    return e === t ? (i = 62 === t && 62 === this.input.charCodeAt(this.pos + 2) ? 3 : 2, 61 === this.input.charCodeAt(this.pos + i) ? this.finishOp(k.assign, i + 1) : this.finishOp(k.bitShift, i)) : 33 !== e || 60 !== t || this.inModule || 45 !== this.input.charCodeAt(this.pos + 2) || 45 !== this.input.charCodeAt(this.pos + 3) ? (61 === e && (i = 2), this.finishOp(k.relational, i)) : (this.skipLineComment(4), this.skipSpace(), this.nextToken());\n  }, Tt.readToken_eq_excl = function (t) {\n    var e = this.input.charCodeAt(this.pos + 1);\n    return 61 === e ? this.finishOp(k.equality, 61 === this.input.charCodeAt(this.pos + 2) ? 3 : 2) : 61 === t && 62 === e && this.options.ecmaVersion >= 6 ? (this.pos += 2, this.finishToken(k.arrow)) : this.finishOp(61 === t ? k.eq : k.prefix, 1);\n  }, Tt.readToken_question = function () {\n    if (this.options.ecmaVersion >= 11 && 63 === this.input.charCodeAt(this.pos + 1)) return this.finishOp(k.coalesce, 2);\n    return this.finishOp(k.question, 1);\n  }, Tt.getTokenFromCode = function (t) {\n    switch (t) {\n      case 46:\n        return this.readToken_dot();\n\n      case 40:\n        return ++this.pos, this.finishToken(k.parenL);\n\n      case 41:\n        return ++this.pos, this.finishToken(k.parenR);\n\n      case 59:\n        return ++this.pos, this.finishToken(k.semi);\n\n      case 44:\n        return ++this.pos, this.finishToken(k.comma);\n\n      case 91:\n        return ++this.pos, this.finishToken(k.bracketL);\n\n      case 93:\n        return ++this.pos, this.finishToken(k.bracketR);\n\n      case 123:\n        return ++this.pos, this.finishToken(k.braceL);\n\n      case 125:\n        return ++this.pos, this.finishToken(k.braceR);\n\n      case 58:\n        return ++this.pos, this.finishToken(k.colon);\n\n      case 96:\n        if (this.options.ecmaVersion < 6) break;\n        return ++this.pos, this.finishToken(k.backQuote);\n\n      case 48:\n        var e = this.input.charCodeAt(this.pos + 1);\n        if (120 === e || 88 === e) return this.readRadixNumber(16);\n\n        if (this.options.ecmaVersion >= 6) {\n          if (111 === e || 79 === e) return this.readRadixNumber(8);\n          if (98 === e || 66 === e) return this.readRadixNumber(2);\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        return this.readNumber(!1);\n\n      case 34:\n      case 39:\n        return this.readString(t);\n\n      case 47:\n        return this.readToken_slash();\n\n      case 37:\n      case 42:\n        return this.readToken_mult_modulo_exp(t);\n\n      case 124:\n      case 38:\n        return this.readToken_pipe_amp(t);\n\n      case 94:\n        return this.readToken_caret();\n\n      case 43:\n      case 45:\n        return this.readToken_plus_min(t);\n\n      case 60:\n      case 62:\n        return this.readToken_lt_gt(t);\n\n      case 61:\n      case 33:\n        return this.readToken_eq_excl(t);\n\n      case 63:\n        return this.readToken_question();\n\n      case 126:\n        return this.finishOp(k.prefix, 1);\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + Nt(t) + \"'\");\n  }, Tt.finishOp = function (t, e) {\n    var i = this.input.slice(this.pos, this.pos + e);\n    return this.pos += e, this.finishToken(t, i);\n  }, Tt.readRegexp = function () {\n    for (var t, e, i = this.pos;;) {\n      this.pos >= this.input.length && this.raise(i, \"Unterminated regular expression\");\n      var s = this.input.charAt(this.pos);\n      if (E.test(s) && this.raise(i, \"Unterminated regular expression\"), t) t = !1;else {\n        if (\"[\" === s) e = !0;else if (\"]\" === s && e) e = !1;else if (\"/\" === s && !e) break;\n        t = \"\\\\\" === s;\n      }\n      ++this.pos;\n    }\n\n    var r = this.input.slice(i, this.pos);\n    ++this.pos;\n    var n = this.pos,\n        a = this.readWord1();\n    this.containsEsc && this.unexpected(n);\n    var o = this.regexpState || (this.regexpState = new vt(this));\n    o.reset(i, r, a), this.validateRegExpFlags(o), this.validateRegExpPattern(o);\n    var h = null;\n\n    try {\n      h = new RegExp(r, a);\n    } catch (t) {}\n\n    return this.finishToken(k.regexp, {\n      pattern: r,\n      flags: a,\n      value: h\n    });\n  }, Tt.readInt = function (t, e) {\n    for (var i = this.pos, s = 0, r = 0, n = null == e ? 1 / 0 : e; r < n; ++r) {\n      var a = this.input.charCodeAt(this.pos),\n          o = void 0;\n      if ((o = a >= 97 ? a - 97 + 10 : a >= 65 ? a - 65 + 10 : a >= 48 && a <= 57 ? a - 48 : 1 / 0) >= t) break;\n      ++this.pos, s = s * t + o;\n    }\n\n    return this.pos === i || null != e && this.pos - i !== e ? null : s;\n  }, Tt.readRadixNumber = function (t) {\n    var e = this.pos;\n    this.pos += 2;\n    var i = this.readInt(t);\n    return null == i && this.raise(this.start + 2, \"Expected number in radix \" + t), this.options.ecmaVersion >= 11 && 110 === this.input.charCodeAt(this.pos) ? (i = \"undefined\" != typeof BigInt ? BigInt(this.input.slice(e, this.pos)) : null, ++this.pos) : f(this.fullCharCodeAtPos()) && this.raise(this.pos, \"Identifier directly after number\"), this.finishToken(k.num, i);\n  }, Tt.readNumber = function (t) {\n    var e = this.pos;\n    t || null !== this.readInt(10) || this.raise(e, \"Invalid number\");\n    var i = this.pos - e >= 2 && 48 === this.input.charCodeAt(e);\n    i && this.strict && this.raise(e, \"Invalid number\");\n    var s = this.input.charCodeAt(this.pos);\n\n    if (!i && !t && this.options.ecmaVersion >= 11 && 110 === s) {\n      var r = this.input.slice(e, this.pos),\n          n = \"undefined\" != typeof BigInt ? BigInt(r) : null;\n      return ++this.pos, f(this.fullCharCodeAtPos()) && this.raise(this.pos, \"Identifier directly after number\"), this.finishToken(k.num, n);\n    }\n\n    i && /[89]/.test(this.input.slice(e, this.pos)) && (i = !1), 46 !== s || i || (++this.pos, this.readInt(10), s = this.input.charCodeAt(this.pos)), 69 !== s && 101 !== s || i || (43 !== (s = this.input.charCodeAt(++this.pos)) && 45 !== s || ++this.pos, null === this.readInt(10) && this.raise(e, \"Invalid number\")), f(this.fullCharCodeAtPos()) && this.raise(this.pos, \"Identifier directly after number\");\n    var a = this.input.slice(e, this.pos),\n        o = i ? parseInt(a, 8) : parseFloat(a);\n    return this.finishToken(k.num, o);\n  }, Tt.readCodePoint = function () {\n    var t;\n\n    if (123 === this.input.charCodeAt(this.pos)) {\n      this.options.ecmaVersion < 6 && this.unexpected();\n      var e = ++this.pos;\n      t = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos), ++this.pos, t > 1114111 && this.invalidStringToken(e, \"Code point out of bounds\");\n    } else t = this.readHexChar(4);\n\n    return t;\n  }, Tt.readString = function (t) {\n    for (var e = \"\", i = ++this.pos;;) {\n      this.pos >= this.input.length && this.raise(this.start, \"Unterminated string constant\");\n      var s = this.input.charCodeAt(this.pos);\n      if (s === t) break;\n      92 === s ? (e += this.input.slice(i, this.pos), e += this.readEscapedChar(!1), i = this.pos) : (C(s, this.options.ecmaVersion >= 10) && this.raise(this.start, \"Unterminated string constant\"), ++this.pos);\n    }\n\n    return e += this.input.slice(i, this.pos++), this.finishToken(k.string, e);\n  };\n  var Lt = {};\n  Tt.tryReadTemplateToken = function () {\n    this.inTemplateElement = !0;\n\n    try {\n      this.readTmplToken();\n    } catch (t) {\n      if (t !== Lt) throw t;\n      this.readInvalidTemplateToken();\n    }\n\n    this.inTemplateElement = !1;\n  }, Tt.invalidStringToken = function (t, e) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) throw Lt;\n    this.raise(t, e);\n  }, Tt.readTmplToken = function () {\n    for (var t = \"\", e = this.pos;;) {\n      this.pos >= this.input.length && this.raise(this.start, \"Unterminated template\");\n      var i = this.input.charCodeAt(this.pos);\n      if (96 === i || 36 === i && 123 === this.input.charCodeAt(this.pos + 1)) return this.pos !== this.start || this.type !== k.template && this.type !== k.invalidTemplate ? (t += this.input.slice(e, this.pos), this.finishToken(k.template, t)) : 36 === i ? (this.pos += 2, this.finishToken(k.dollarBraceL)) : (++this.pos, this.finishToken(k.backQuote));\n      if (92 === i) t += this.input.slice(e, this.pos), t += this.readEscapedChar(!0), e = this.pos;else if (C(i)) {\n        switch (t += this.input.slice(e, this.pos), ++this.pos, i) {\n          case 13:\n            10 === this.input.charCodeAt(this.pos) && ++this.pos;\n\n          case 10:\n            t += \"\\n\";\n            break;\n\n          default:\n            t += String.fromCharCode(i);\n        }\n\n        this.options.locations && (++this.curLine, this.lineStart = this.pos), e = this.pos;\n      } else ++this.pos;\n    }\n  }, Tt.readInvalidTemplateToken = function () {\n    for (; this.pos < this.input.length; this.pos++) switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break;\n\n      case \"$\":\n        if (\"{\" !== this.input[this.pos + 1]) break;\n\n      case \"`\":\n        return this.finishToken(k.invalidTemplate, this.input.slice(this.start, this.pos));\n    }\n\n    this.raise(this.start, \"Unterminated template\");\n  }, Tt.readEscapedChar = function (t) {\n    var e = this.input.charCodeAt(++this.pos);\n\n    switch (++this.pos, e) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        return String.fromCharCode(this.readHexChar(2));\n\n      case 117:\n        return Nt(this.readCodePoint());\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\v\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        10 === this.input.charCodeAt(this.pos) && ++this.pos;\n\n      case 10:\n        return this.options.locations && (this.lineStart = this.pos, ++this.curLine), \"\";\n\n      case 56:\n      case 57:\n        if (t) {\n          var i = this.pos - 1;\n          return this.invalidStringToken(i, \"Invalid escape sequence in template string\"), null;\n        }\n\n      default:\n        if (e >= 48 && e <= 55) {\n          var s = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0],\n              r = parseInt(s, 8);\n          return r > 255 && (s = s.slice(0, -1), r = parseInt(s, 8)), this.pos += s.length - 1, e = this.input.charCodeAt(this.pos), \"0\" === s && 56 !== e && 57 !== e || !this.strict && !t || this.invalidStringToken(this.pos - 1 - s.length, t ? \"Octal literal in template string\" : \"Octal literal in strict mode\"), String.fromCharCode(r);\n        }\n\n        return C(e) ? \"\" : String.fromCharCode(e);\n    }\n  }, Tt.readHexChar = function (t) {\n    var e = this.pos,\n        i = this.readInt(16, t);\n    return null === i && this.invalidStringToken(e, \"Bad character escape sequence\"), i;\n  }, Tt.readWord1 = function () {\n    this.containsEsc = !1;\n\n    for (var t = \"\", e = !0, i = this.pos, s = this.options.ecmaVersion >= 6; this.pos < this.input.length;) {\n      var r = this.fullCharCodeAtPos();\n      if (m(r, s)) this.pos += r <= 65535 ? 1 : 2;else {\n        if (92 !== r) break;\n        this.containsEsc = !0, t += this.input.slice(i, this.pos);\n        var n = this.pos;\n        117 !== this.input.charCodeAt(++this.pos) && this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"), ++this.pos;\n        var a = this.readCodePoint();\n        (e ? f : m)(a, s) || this.invalidStringToken(n, \"Invalid Unicode escape\"), t += Nt(a), i = this.pos;\n      }\n      e = !1;\n    }\n\n    return t + this.input.slice(i, this.pos);\n  }, Tt.readWord = function () {\n    var t = this.readWord1(),\n        e = k.name;\n    return this.keywords.test(t) && (e = b[t]), this.finishToken(e, t);\n  };\n  var Ot = \"7.1.0\";\n\n  function Vt(t, e) {\n    return U.parse(t, e);\n  }\n\n  function jt(t, e, i) {\n    return U.parseExpressionAt(t, e, i);\n  }\n\n  function Rt(t, e) {\n    return U.tokenizer(t, e);\n  }\n\n  U.acorn = {\n    Parser: U,\n    version: Ot,\n    defaultOptions: M,\n    Position: V,\n    SourceLocation: j,\n    getLineInfo: R,\n    Node: st,\n    TokenType: x,\n    tokTypes: k,\n    keywordTypes: b,\n    TokContext: at,\n    tokContexts: ot,\n    isIdentifierChar: m,\n    isIdentifierStart: f,\n    Token: Pt,\n    isNewLine: C,\n    lineBreak: E,\n    lineBreakG: S,\n    nonASCIIwhitespace: w\n  };\n}, function (t, e, i) {\n  \"use strict\";\n\n  const s = i(3),\n        r = /^[\\da-fA-F]+$/,\n        n = /^\\d+$/,\n        a = new WeakMap();\n\n  function o(t) {\n    t = t.Parser.acorn || t;\n    let e = a.get(t);\n\n    if (!e) {\n      const i = t.tokTypes,\n            s = t.TokContext,\n            r = t.TokenType,\n            n = new s(\"<tag\", !1),\n            o = new s(\"</tag\", !1),\n            h = new s(\"<tag>...</tag>\", !0, !0),\n            p = {\n        tc_oTag: n,\n        tc_cTag: o,\n        tc_expr: h\n      },\n            c = {\n        jsxName: new r(\"jsxName\"),\n        jsxText: new r(\"jsxText\", {\n          beforeExpr: !0\n        }),\n        jsxTagStart: new r(\"jsxTagStart\"),\n        jsxTagEnd: new r(\"jsxTagEnd\")\n      };\n      c.jsxTagStart.updateContext = function () {\n        this.context.push(h), this.context.push(n), this.exprAllowed = !1;\n      }, c.jsxTagEnd.updateContext = function (t) {\n        let e = this.context.pop();\n        e === n && t === i.slash || e === o ? (this.context.pop(), this.exprAllowed = this.curContext() === h) : this.exprAllowed = !0;\n      }, e = {\n        tokContexts: p,\n        tokTypes: c\n      }, a.set(t, e);\n    }\n\n    return e;\n  }\n\n  function h(t) {\n    return t ? \"JSXIdentifier\" === t.type ? t.name : \"JSXNamespacedName\" === t.type ? t.namespace.name + \":\" + t.name.name : \"JSXMemberExpression\" === t.type ? h(t.object) + \".\" + h(t.property) : void 0 : t;\n  }\n\n  t.exports = function (t) {\n    return t = t || {}, function (e) {\n      return function (t, e) {\n        const a = e.acorn || i(1),\n              p = o(a),\n              c = a.tokTypes,\n              u = p.tokTypes,\n              l = a.tokContexts,\n              d = p.tokContexts.tc_oTag,\n              f = p.tokContexts.tc_cTag,\n              m = p.tokContexts.tc_expr,\n              x = a.isNewLine,\n              g = a.isIdentifierStart,\n              y = a.isIdentifierChar;\n        return class extends e {\n          static get acornJsx() {\n            return p;\n          }\n\n          jsx_readToken() {\n            let t = \"\",\n                e = this.pos;\n\n            for (;;) {\n              this.pos >= this.input.length && this.raise(this.start, \"Unterminated JSX contents\");\n              let i = this.input.charCodeAt(this.pos);\n\n              switch (i) {\n                case 60:\n                case 123:\n                  return this.pos === this.start ? 60 === i && this.exprAllowed ? (++this.pos, this.finishToken(u.jsxTagStart)) : this.getTokenFromCode(i) : (t += this.input.slice(e, this.pos), this.finishToken(u.jsxText, t));\n\n                case 38:\n                  t += this.input.slice(e, this.pos), t += this.jsx_readEntity(), e = this.pos;\n                  break;\n\n                case 62:\n                case 125:\n                  this.raise(this.pos, \"Unexpected token `\" + this.input[this.pos] + \"`. Did you mean `\" + (62 === i ? \"&gt;\" : \"&rbrace;\") + '` or `{\"' + this.input[this.pos] + '\"}`?');\n\n                default:\n                  x(i) ? (t += this.input.slice(e, this.pos), t += this.jsx_readNewLine(!0), e = this.pos) : ++this.pos;\n              }\n            }\n          }\n\n          jsx_readNewLine(t) {\n            let e,\n                i = this.input.charCodeAt(this.pos);\n            return ++this.pos, 13 === i && 10 === this.input.charCodeAt(this.pos) ? (++this.pos, e = t ? \"\\n\" : \"\\r\\n\") : e = String.fromCharCode(i), this.options.locations && (++this.curLine, this.lineStart = this.pos), e;\n          }\n\n          jsx_readString(t) {\n            let e = \"\",\n                i = ++this.pos;\n\n            for (;;) {\n              this.pos >= this.input.length && this.raise(this.start, \"Unterminated string constant\");\n              let s = this.input.charCodeAt(this.pos);\n              if (s === t) break;\n              38 === s ? (e += this.input.slice(i, this.pos), e += this.jsx_readEntity(), i = this.pos) : x(s) ? (e += this.input.slice(i, this.pos), e += this.jsx_readNewLine(!1), i = this.pos) : ++this.pos;\n            }\n\n            return e += this.input.slice(i, this.pos++), this.finishToken(c.string, e);\n          }\n\n          jsx_readEntity() {\n            let t,\n                e = \"\",\n                i = 0,\n                a = this.input[this.pos];\n            \"&\" !== a && this.raise(this.pos, \"Entity must start with an ampersand\");\n            let o = ++this.pos;\n\n            for (; this.pos < this.input.length && i++ < 10;) {\n              if (a = this.input[this.pos++], \";\" === a) {\n                \"#\" === e[0] ? \"x\" === e[1] ? (e = e.substr(2), r.test(e) && (t = String.fromCharCode(parseInt(e, 16)))) : (e = e.substr(1), n.test(e) && (t = String.fromCharCode(parseInt(e, 10)))) : t = s[e];\n                break;\n              }\n\n              e += a;\n            }\n\n            return t || (this.pos = o, \"&\");\n          }\n\n          jsx_readWord() {\n            let t,\n                e = this.pos;\n\n            do {\n              t = this.input.charCodeAt(++this.pos);\n            } while (y(t) || 45 === t);\n\n            return this.finishToken(u.jsxName, this.input.slice(e, this.pos));\n          }\n\n          jsx_parseIdentifier() {\n            let t = this.startNode();\n            return this.type === u.jsxName ? t.name = this.value : this.type.keyword ? t.name = this.type.keyword : this.unexpected(), this.next(), this.finishNode(t, \"JSXIdentifier\");\n          }\n\n          jsx_parseNamespacedName() {\n            let e = this.start,\n                i = this.startLoc,\n                s = this.jsx_parseIdentifier();\n            if (!t.allowNamespaces || !this.eat(c.colon)) return s;\n            var r = this.startNodeAt(e, i);\n            return r.namespace = s, r.name = this.jsx_parseIdentifier(), this.finishNode(r, \"JSXNamespacedName\");\n          }\n\n          jsx_parseElementName() {\n            if (this.type === u.jsxTagEnd) return \"\";\n            let e = this.start,\n                i = this.startLoc,\n                s = this.jsx_parseNamespacedName();\n\n            for (this.type !== c.dot || \"JSXNamespacedName\" !== s.type || t.allowNamespacedObjects || this.unexpected(); this.eat(c.dot);) {\n              let t = this.startNodeAt(e, i);\n              t.object = s, t.property = this.jsx_parseIdentifier(), s = this.finishNode(t, \"JSXMemberExpression\");\n            }\n\n            return s;\n          }\n\n          jsx_parseAttributeValue() {\n            switch (this.type) {\n              case c.braceL:\n                let t = this.jsx_parseExpressionContainer();\n                return \"JSXEmptyExpression\" === t.expression.type && this.raise(t.start, \"JSX attributes must only be assigned a non-empty expression\"), t;\n\n              case u.jsxTagStart:\n              case c.string:\n                return this.parseExprAtom();\n\n              default:\n                this.raise(this.start, \"JSX value should be either an expression or a quoted JSX text\");\n            }\n          }\n\n          jsx_parseEmptyExpression() {\n            let t = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);\n            return this.finishNodeAt(t, \"JSXEmptyExpression\", this.start, this.startLoc);\n          }\n\n          jsx_parseExpressionContainer() {\n            let t = this.startNode();\n            return this.next(), t.expression = this.type === c.braceR ? this.jsx_parseEmptyExpression() : this.parseExpression(), this.expect(c.braceR), this.finishNode(t, \"JSXExpressionContainer\");\n          }\n\n          jsx_parseAttribute() {\n            let t = this.startNode();\n            return this.eat(c.braceL) ? (this.expect(c.ellipsis), t.argument = this.parseMaybeAssign(), this.expect(c.braceR), this.finishNode(t, \"JSXSpreadAttribute\")) : (t.name = this.jsx_parseNamespacedName(), t.value = this.eat(c.eq) ? this.jsx_parseAttributeValue() : null, this.finishNode(t, \"JSXAttribute\"));\n          }\n\n          jsx_parseOpeningElementAt(t, e) {\n            let i = this.startNodeAt(t, e);\n            i.attributes = [];\n            let s = this.jsx_parseElementName();\n\n            for (s && (i.name = s); this.type !== c.slash && this.type !== u.jsxTagEnd;) i.attributes.push(this.jsx_parseAttribute());\n\n            return i.selfClosing = this.eat(c.slash), this.expect(u.jsxTagEnd), this.finishNode(i, s ? \"JSXOpeningElement\" : \"JSXOpeningFragment\");\n          }\n\n          jsx_parseClosingElementAt(t, e) {\n            let i = this.startNodeAt(t, e),\n                s = this.jsx_parseElementName();\n            return s && (i.name = s), this.expect(u.jsxTagEnd), this.finishNode(i, s ? \"JSXClosingElement\" : \"JSXClosingFragment\");\n          }\n\n          jsx_parseElementAt(t, e) {\n            let i = this.startNodeAt(t, e),\n                s = [],\n                r = this.jsx_parseOpeningElementAt(t, e),\n                n = null;\n\n            if (!r.selfClosing) {\n              t: for (;;) switch (this.type) {\n                case u.jsxTagStart:\n                  if (t = this.start, e = this.startLoc, this.next(), this.eat(c.slash)) {\n                    n = this.jsx_parseClosingElementAt(t, e);\n                    break t;\n                  }\n\n                  s.push(this.jsx_parseElementAt(t, e));\n                  break;\n\n                case u.jsxText:\n                  s.push(this.parseExprAtom());\n                  break;\n\n                case c.braceL:\n                  s.push(this.jsx_parseExpressionContainer());\n                  break;\n\n                default:\n                  this.unexpected();\n              }\n\n              h(n.name) !== h(r.name) && this.raise(n.start, \"Expected corresponding JSX closing tag for <\" + h(r.name) + \">\");\n            }\n\n            let a = r.name ? \"Element\" : \"Fragment\";\n            return i[\"opening\" + a] = r, i[\"closing\" + a] = n, i.children = s, this.type === c.relational && \"<\" === this.value && this.raise(this.start, \"Adjacent JSX elements must be wrapped in an enclosing tag\"), this.finishNode(i, \"JSX\" + a);\n          }\n\n          jsx_parseText() {\n            let t = this.parseLiteral(this.value);\n            return t.type = \"JSXText\", t;\n          }\n\n          jsx_parseElement() {\n            let t = this.start,\n                e = this.startLoc;\n            return this.next(), this.jsx_parseElementAt(t, e);\n          }\n\n          parseExprAtom(t) {\n            return this.type === u.jsxText ? this.jsx_parseText() : this.type === u.jsxTagStart ? this.jsx_parseElement() : super.parseExprAtom(t);\n          }\n\n          readToken(t) {\n            let e = this.curContext();\n            if (e === m) return this.jsx_readToken();\n\n            if (e === d || e === f) {\n              if (g(t)) return this.jsx_readWord();\n              if (62 == t) return ++this.pos, this.finishToken(u.jsxTagEnd);\n              if ((34 === t || 39 === t) && e == d) return this.jsx_readString(t);\n            }\n\n            return 60 === t && this.exprAllowed && 33 !== this.input.charCodeAt(this.pos + 1) ? (++this.pos, this.finishToken(u.jsxTagStart)) : super.readToken(t);\n          }\n\n          updateContext(t) {\n            if (this.type == c.braceL) {\n              var e = this.curContext();\n              e == d ? this.context.push(l.b_expr) : e == m ? this.context.push(l.b_tmpl) : super.updateContext(t), this.exprAllowed = !0;\n            } else {\n              if (this.type !== c.slash || t !== u.jsxTagStart) return super.updateContext(t);\n              this.context.length -= 2, this.context.push(f), this.exprAllowed = !1;\n            }\n          }\n\n        };\n      }({\n        allowNamespaces: !1 !== t.allowNamespaces,\n        allowNamespacedObjects: !!t.allowNamespacedObjects\n      }, e);\n    };\n  }, Object.defineProperty(t.exports, \"tokTypes\", {\n    get: function () {\n      return o(i(1)).tokTypes;\n    },\n    configurable: !0,\n    enumerable: !0\n  });\n}, function (t, e) {\n  t.exports = {\n    quot: '\"',\n    amp: \"&\",\n    apos: \"'\",\n    lt: \"<\",\n    gt: \">\",\n    nbsp: \" \",\n    iexcl: \"¡\",\n    cent: \"¢\",\n    pound: \"£\",\n    curren: \"¤\",\n    yen: \"¥\",\n    brvbar: \"¦\",\n    sect: \"§\",\n    uml: \"¨\",\n    copy: \"©\",\n    ordf: \"ª\",\n    laquo: \"«\",\n    not: \"¬\",\n    shy: \"­\",\n    reg: \"®\",\n    macr: \"¯\",\n    deg: \"°\",\n    plusmn: \"±\",\n    sup2: \"²\",\n    sup3: \"³\",\n    acute: \"´\",\n    micro: \"µ\",\n    para: \"¶\",\n    middot: \"·\",\n    cedil: \"¸\",\n    sup1: \"¹\",\n    ordm: \"º\",\n    raquo: \"»\",\n    frac14: \"¼\",\n    frac12: \"½\",\n    frac34: \"¾\",\n    iquest: \"¿\",\n    Agrave: \"À\",\n    Aacute: \"Á\",\n    Acirc: \"Â\",\n    Atilde: \"Ã\",\n    Auml: \"Ä\",\n    Aring: \"Å\",\n    AElig: \"Æ\",\n    Ccedil: \"Ç\",\n    Egrave: \"È\",\n    Eacute: \"É\",\n    Ecirc: \"Ê\",\n    Euml: \"Ë\",\n    Igrave: \"Ì\",\n    Iacute: \"Í\",\n    Icirc: \"Î\",\n    Iuml: \"Ï\",\n    ETH: \"Ð\",\n    Ntilde: \"Ñ\",\n    Ograve: \"Ò\",\n    Oacute: \"Ó\",\n    Ocirc: \"Ô\",\n    Otilde: \"Õ\",\n    Ouml: \"Ö\",\n    times: \"×\",\n    Oslash: \"Ø\",\n    Ugrave: \"Ù\",\n    Uacute: \"Ú\",\n    Ucirc: \"Û\",\n    Uuml: \"Ü\",\n    Yacute: \"Ý\",\n    THORN: \"Þ\",\n    szlig: \"ß\",\n    agrave: \"à\",\n    aacute: \"á\",\n    acirc: \"â\",\n    atilde: \"ã\",\n    auml: \"ä\",\n    aring: \"å\",\n    aelig: \"æ\",\n    ccedil: \"ç\",\n    egrave: \"è\",\n    eacute: \"é\",\n    ecirc: \"ê\",\n    euml: \"ë\",\n    igrave: \"ì\",\n    iacute: \"í\",\n    icirc: \"î\",\n    iuml: \"ï\",\n    eth: \"ð\",\n    ntilde: \"ñ\",\n    ograve: \"ò\",\n    oacute: \"ó\",\n    ocirc: \"ô\",\n    otilde: \"õ\",\n    ouml: \"ö\",\n    divide: \"÷\",\n    oslash: \"ø\",\n    ugrave: \"ù\",\n    uacute: \"ú\",\n    ucirc: \"û\",\n    uuml: \"ü\",\n    yacute: \"ý\",\n    thorn: \"þ\",\n    yuml: \"ÿ\",\n    OElig: \"Œ\",\n    oelig: \"œ\",\n    Scaron: \"Š\",\n    scaron: \"š\",\n    Yuml: \"Ÿ\",\n    fnof: \"ƒ\",\n    circ: \"ˆ\",\n    tilde: \"˜\",\n    Alpha: \"Α\",\n    Beta: \"Β\",\n    Gamma: \"Γ\",\n    Delta: \"Δ\",\n    Epsilon: \"Ε\",\n    Zeta: \"Ζ\",\n    Eta: \"Η\",\n    Theta: \"Θ\",\n    Iota: \"Ι\",\n    Kappa: \"Κ\",\n    Lambda: \"Λ\",\n    Mu: \"Μ\",\n    Nu: \"Ν\",\n    Xi: \"Ξ\",\n    Omicron: \"Ο\",\n    Pi: \"Π\",\n    Rho: \"Ρ\",\n    Sigma: \"Σ\",\n    Tau: \"Τ\",\n    Upsilon: \"Υ\",\n    Phi: \"Φ\",\n    Chi: \"Χ\",\n    Psi: \"Ψ\",\n    Omega: \"Ω\",\n    alpha: \"α\",\n    beta: \"β\",\n    gamma: \"γ\",\n    delta: \"δ\",\n    epsilon: \"ε\",\n    zeta: \"ζ\",\n    eta: \"η\",\n    theta: \"θ\",\n    iota: \"ι\",\n    kappa: \"κ\",\n    lambda: \"λ\",\n    mu: \"μ\",\n    nu: \"ν\",\n    xi: \"ξ\",\n    omicron: \"ο\",\n    pi: \"π\",\n    rho: \"ρ\",\n    sigmaf: \"ς\",\n    sigma: \"σ\",\n    tau: \"τ\",\n    upsilon: \"υ\",\n    phi: \"φ\",\n    chi: \"χ\",\n    psi: \"ψ\",\n    omega: \"ω\",\n    thetasym: \"ϑ\",\n    upsih: \"ϒ\",\n    piv: \"ϖ\",\n    ensp: \" \",\n    emsp: \" \",\n    thinsp: \" \",\n    zwnj: \"‌\",\n    zwj: \"‍\",\n    lrm: \"‎\",\n    rlm: \"‏\",\n    ndash: \"–\",\n    mdash: \"—\",\n    lsquo: \"‘\",\n    rsquo: \"’\",\n    sbquo: \"‚\",\n    ldquo: \"“\",\n    rdquo: \"”\",\n    bdquo: \"„\",\n    dagger: \"†\",\n    Dagger: \"‡\",\n    bull: \"•\",\n    hellip: \"…\",\n    permil: \"‰\",\n    prime: \"′\",\n    Prime: \"″\",\n    lsaquo: \"‹\",\n    rsaquo: \"›\",\n    oline: \"‾\",\n    frasl: \"⁄\",\n    euro: \"€\",\n    image: \"ℑ\",\n    weierp: \"℘\",\n    real: \"ℜ\",\n    trade: \"™\",\n    alefsym: \"ℵ\",\n    larr: \"←\",\n    uarr: \"↑\",\n    rarr: \"→\",\n    darr: \"↓\",\n    harr: \"↔\",\n    crarr: \"↵\",\n    lArr: \"⇐\",\n    uArr: \"⇑\",\n    rArr: \"⇒\",\n    dArr: \"⇓\",\n    hArr: \"⇔\",\n    forall: \"∀\",\n    part: \"∂\",\n    exist: \"∃\",\n    empty: \"∅\",\n    nabla: \"∇\",\n    isin: \"∈\",\n    notin: \"∉\",\n    ni: \"∋\",\n    prod: \"∏\",\n    sum: \"∑\",\n    minus: \"−\",\n    lowast: \"∗\",\n    radic: \"√\",\n    prop: \"∝\",\n    infin: \"∞\",\n    ang: \"∠\",\n    and: \"∧\",\n    or: \"∨\",\n    cap: \"∩\",\n    cup: \"∪\",\n    int: \"∫\",\n    there4: \"∴\",\n    sim: \"∼\",\n    cong: \"≅\",\n    asymp: \"≈\",\n    ne: \"≠\",\n    equiv: \"≡\",\n    le: \"≤\",\n    ge: \"≥\",\n    sub: \"⊂\",\n    sup: \"⊃\",\n    nsub: \"⊄\",\n    sube: \"⊆\",\n    supe: \"⊇\",\n    oplus: \"⊕\",\n    otimes: \"⊗\",\n    perp: \"⊥\",\n    sdot: \"⋅\",\n    lceil: \"⌈\",\n    rceil: \"⌉\",\n    lfloor: \"⌊\",\n    rfloor: \"⌋\",\n    lang: \"〈\",\n    rang: \"〉\",\n    loz: \"◊\",\n    spades: \"♠\",\n    clubs: \"♣\",\n    hearts: \"♥\",\n    diams: \"♦\"\n  };\n}, function (t, e, i) {\n  \"use strict\";\n\n  i.r(e), i.d(e, \"default\", function () {\n    return M;\n  });\n  var s = i(1),\n      r = i(2),\n      n = i.n(r),\n      a = i(0),\n      o = i.n(a),\n      h = {\n    class: \"className\",\n    for: \"htmlFor\",\n    maxlength: \"maxLength\",\n    colspan: \"colSpan\",\n    rowspan: \"rowSpan\"\n  },\n      p = [\"area\", \"base\", \"br\", \"col\", \"embed\", \"hr\", \"img\", \"input\", \"keygen\", \"link\", \"menuitem\", \"meta\", \"param\", \"source\", \"track\", \"wbr\"],\n      c = [\"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"];\n\n  function u(t) {\n    return -1 === p.indexOf(t.toLowerCase());\n  }\n\n  function l(t) {\n    return -1 !== c.indexOf(t.toLowerCase());\n  }\n\n  var d = function () {\n    return function () {\n      var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"\",\n          e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 16,\n          i = String(t),\n          s = 0;\n      return i.split(\"\").forEach(function (t) {\n        s = (s << 5) - s + t.charCodeAt(0), s &= s;\n      }), Math.abs(s).toString(e);\n    }(Math.random().toString());\n  };\n\n  function f(t, e) {\n    var i = Object.keys(t);\n\n    if (Object.getOwnPropertySymbols) {\n      var s = Object.getOwnPropertySymbols(t);\n      e && (s = s.filter(function (e) {\n        return Object.getOwnPropertyDescriptor(t, e).enumerable;\n      })), i.push.apply(i, s);\n    }\n\n    return i;\n  }\n\n  function m(t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var i = null != arguments[e] ? arguments[e] : {};\n      e % 2 ? f(Object(i), !0).forEach(function (e) {\n        x(t, e, i[e]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i)) : f(Object(i)).forEach(function (e) {\n        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e));\n      });\n    }\n\n    return t;\n  }\n\n  function x(t, e, i) {\n    return e in t ? Object.defineProperty(t, e, {\n      value: i,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : t[e] = i, t;\n  }\n\n  function g(t) {\n    return (g = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (t) {\n      return typeof t;\n    } : function (t) {\n      return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n    })(t);\n  }\n\n  var y = function (t) {\n    switch (g(t)) {\n      case \"string\":\n        return t.split(\";\").filter(function (t) {\n          return t;\n        }).reduce(function (t, e) {\n          var i = e.slice(0, e.indexOf(\":\")).trim(),\n              s = e.slice(e.indexOf(\":\") + 1).trim();\n          return m(m({}, t), {}, x({}, i.replace(/([A-Z])([A-Z])/g, \"$1 $2\").replace(/([a-z])([A-Z])/g, \"$1 $2\").replace(/[^a-zA-Z\\u00C0-\\u00ff]/g, \" \").toLowerCase().split(\" \").filter(function (t) {\n            return t;\n          }).map(function (t, e) {\n            return e > 0 ? t[0].toUpperCase() + t.slice(1) : t;\n          }).join(\"\"), s));\n        }, {});\n\n      case \"object\":\n        return t;\n\n      default:\n        return;\n    }\n  };\n\n  function v(t) {\n    return function (t) {\n      if (Array.isArray(t)) return t;\n    }(t) || function (t) {\n      if (\"undefined\" != typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t);\n    }(t) || function (t, e) {\n      if (!t) return;\n      if (\"string\" == typeof t) return b(t, e);\n      var i = Object.prototype.toString.call(t).slice(8, -1);\n      \"Object\" === i && t.constructor && (i = t.constructor.name);\n      if (\"Map\" === i || \"Set\" === i) return Array.from(t);\n      if (\"Arguments\" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) return b(t, e);\n    }(t) || function () {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }();\n  }\n\n  function b(t, e) {\n    (null == e || e > t.length) && (e = t.length);\n\n    for (var i = 0, s = new Array(e); i < e; i++) s[i] = t[i];\n\n    return s;\n  }\n\n  var _ = function (t, e) {\n    return function t(e, i) {\n      var s = v(i),\n          r = s[0],\n          n = s.slice(1);\n      if (null != e && null != r) return 0 === n.length ? e[r] : t(e[r], n);\n    }(t, function (t) {\n      return null == t || \"\" === t ? [] : t.split(\".\");\n    }(e));\n  };\n\n  function k(t) {\n    return (k = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (t) {\n      return typeof t;\n    } : function (t) {\n      return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n    })(t);\n  }\n\n  function E(t, e) {\n    var i = Object.keys(t);\n\n    if (Object.getOwnPropertySymbols) {\n      var s = Object.getOwnPropertySymbols(t);\n      e && (s = s.filter(function (e) {\n        return Object.getOwnPropertyDescriptor(t, e).enumerable;\n      })), i.push.apply(i, s);\n    }\n\n    return i;\n  }\n\n  function S(t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var i = null != arguments[e] ? arguments[e] : {};\n      e % 2 ? E(Object(i), !0).forEach(function (e) {\n        j(t, e, i[e]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i)) : E(Object(i)).forEach(function (e) {\n        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e));\n      });\n    }\n\n    return t;\n  }\n\n  function C(t, e) {\n    return function (t) {\n      if (Array.isArray(t)) return t;\n    }(t) || function (t, e) {\n      if (\"undefined\" == typeof Symbol || !(Symbol.iterator in Object(t))) return;\n      var i = [],\n          s = !0,\n          r = !1,\n          n = void 0;\n\n      try {\n        for (var a, o = t[Symbol.iterator](); !(s = (a = o.next()).done) && (i.push(a.value), !e || i.length !== e); s = !0);\n      } catch (t) {\n        r = !0, n = t;\n      } finally {\n        try {\n          s || null == o.return || o.return();\n        } finally {\n          if (r) throw n;\n        }\n      }\n\n      return i;\n    }(t, e) || A(t, e) || function () {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }();\n  }\n\n  function w(t) {\n    return function (t) {\n      if (Array.isArray(t)) return I(t);\n    }(t) || function (t) {\n      if (\"undefined\" != typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t);\n    }(t) || A(t) || function () {\n      throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }();\n  }\n\n  function A(t, e) {\n    if (t) {\n      if (\"string\" == typeof t) return I(t, e);\n      var i = Object.prototype.toString.call(t).slice(8, -1);\n      return \"Object\" === i && t.constructor && (i = t.constructor.name), \"Map\" === i || \"Set\" === i ? Array.from(t) : \"Arguments\" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? I(t, e) : void 0;\n    }\n  }\n\n  function I(t, e) {\n    (null == e || e > t.length) && (e = t.length);\n\n    for (var i = 0, s = new Array(e); i < e; i++) s[i] = t[i];\n\n    return s;\n  }\n\n  function P(t, e) {\n    if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  function T(t, e) {\n    return (T = Object.setPrototypeOf || function (t, e) {\n      return t.__proto__ = e, t;\n    })(t, e);\n  }\n\n  function N(t) {\n    var e = function () {\n      if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n      if (Reflect.construct.sham) return !1;\n      if (\"function\" == typeof Proxy) return !0;\n\n      try {\n        return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;\n      } catch (t) {\n        return !1;\n      }\n    }();\n\n    return function () {\n      var i,\n          s = V(t);\n\n      if (e) {\n        var r = V(this).constructor;\n        i = Reflect.construct(s, arguments, r);\n      } else i = s.apply(this, arguments);\n\n      return L(this, i);\n    };\n  }\n\n  function L(t, e) {\n    return !e || \"object\" !== k(e) && \"function\" != typeof e ? O(t) : e;\n  }\n\n  function O(t) {\n    if (void 0 === t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return t;\n  }\n\n  function V(t) {\n    return (V = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {\n      return t.__proto__ || Object.getPrototypeOf(t);\n    })(t);\n  }\n\n  function j(t, e, i) {\n    return e in t ? Object.defineProperty(t, e, {\n      value: i,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : t[e] = i, t;\n  }\n\n  var R = s.Parser.extend(n()()),\n      M = function (t) {\n    !function (t, e) {\n      if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n      t.prototype = Object.create(e && e.prototype, {\n        constructor: {\n          value: t,\n          writable: !0,\n          configurable: !0\n        }\n      }), e && T(t, e);\n    }(i, t);\n    var e = N(i);\n\n    function i() {\n      var t;\n      P(this, i);\n\n      for (var s = arguments.length, r = new Array(s), n = 0; n < s; n++) r[n] = arguments[n];\n\n      return j(O(t = e.call.apply(e, [this].concat(r))), \"ParsedChildren\", null), j(O(t), \"parseJSX\", function (e) {\n        var i = \"<root>\".concat(e, \"</root>\"),\n            s = [];\n\n        try {\n          s = (s = R.parse(i)).body[0].expression.children || [];\n        } catch (e) {\n          return t.props.showWarnings && console.warn(e), t.props.onError && t.props.onError(e), t.props.renderError ? t.props.renderError({\n            error: String(e)\n          }) : [];\n        }\n\n        return s.map(t.parseExpression).filter(Boolean);\n      }), j(O(t), \"parseExpression\", function (e) {\n        switch (e.type) {\n          case \"JSXAttribute\":\n            return null === e.value || t.parseExpression(e.value);\n\n          case \"JSXElement\":\n            return t.parseElement(e);\n\n          case \"JSXExpressionContainer\":\n            return t.parseExpression(e.expression);\n\n          case \"JSXText\":\n            var i = t.props.disableKeyGeneration ? void 0 : d();\n            return t.props.disableFragments ? e.value : o.a.createElement(a.Fragment, {\n              key: i\n            }, e.value);\n\n          case \"ArrayExpression\":\n            return e.elements.map(t.parseExpression);\n\n          case \"BinaryExpression\":\n            switch (e.operator) {\n              case \"-\":\n                return t.parseExpression(e.left) - t.parseExpression(e.right);\n\n              case \"!=\":\n                return t.parseExpression(e.left) != t.parseExpression(e.right);\n\n              case \"!==\":\n                return t.parseExpression(e.left) !== t.parseExpression(e.right);\n\n              case \"*\":\n                return t.parseExpression(e.left) * t.parseExpression(e.right);\n\n              case \"**\":\n                return Math.pow(t.parseExpression(e.left), t.parseExpression(e.right));\n\n              case \"/\":\n                return t.parseExpression(e.left) / t.parseExpression(e.right);\n\n              case \"%\":\n                return t.parseExpression(e.left) % t.parseExpression(e.right);\n\n              case \"+\":\n                return t.parseExpression(e.left) + t.parseExpression(e.right);\n\n              case \"<\":\n                return t.parseExpression(e.left) < t.parseExpression(e.right);\n\n              case \"<=\":\n                return t.parseExpression(e.left) <= t.parseExpression(e.right);\n\n              case \"==\":\n                return t.parseExpression(e.left) == t.parseExpression(e.right);\n\n              case \"===\":\n                return t.parseExpression(e.left) === t.parseExpression(e.right);\n\n              case \">\":\n                return t.parseExpression(e.left) > t.parseExpression(e.right);\n\n              case \">=\":\n                return t.parseExpression(e.left) >= t.parseExpression(e.right);\n            }\n\n            return;\n\n          case \"CallExpression\":\n            var s = t.parseExpression(e.callee);\n            return void 0 === s ? void t.props.onError(new Error(\"The expression '\".concat(e.callee, \"' could not be resolved, resulting in an undefined return value.\"))) : s.apply(void 0, w(e.arguments.map(t.parseExpression)));\n\n          case \"ConditionalExpression\":\n            return t.parseExpression(e.test) ? t.parseExpression(e.consequent) : t.parseExpression(e.alternate);\n\n          case \"ExpressionStatement\":\n            return t.parseExpression(e.expression);\n\n          case \"Identifier\":\n            return (t.props.bindings || {})[e.name];\n\n          case \"Literal\":\n            return e.value;\n\n          case \"LogicalExpression\":\n            var r = t.parseExpression(e.left);\n            return \"||\" === e.operator && r ? r : !!(\"&&\" === e.operator && r || \"||\" === e.operator && !r) && t.parseExpression(e.right);\n\n          case \"MemberExpression\":\n            return t.parseMemberExpression(e);\n\n          case \"ObjectExpression\":\n            var n = {};\n            return e.properties.forEach(function (e) {\n              n[e.key.name || e.key.value] = t.parseExpression(e.value);\n            }), n;\n\n          case \"TemplateElement\":\n            return e.value.cooked;\n\n          case \"TemplateLiteral\":\n            return [].concat(w(e.expressions), w(e.quasis)).sort(function (t, e) {\n              return t.start < e.start ? -1 : 1;\n            }).map(t.parseExpression).join(\"\");\n\n          case \"UnaryExpression\":\n            switch (e.operator) {\n              case \"+\":\n                return e.argument.value;\n\n              case \"-\":\n                return -e.argument.value;\n\n              case \"!\":\n                return !e.argument.value;\n            }\n\n            return;\n        }\n      }), j(O(t), \"parseMemberExpression\", function (e) {\n        var i,\n            s,\n            r,\n            n,\n            a = e.object,\n            o = [null !== (i = null === (s = e.property) || void 0 === s ? void 0 : s.name) && void 0 !== i ? i : JSON.parse(null !== (r = null === (n = e.property) || void 0 === n ? void 0 : n.raw) && void 0 !== r ? r : '\"\"')];\n        if (\"Literal\" !== e.object.type) for (; a && [\"MemberExpression\", \"Literal\"].includes(null === (h = a) || void 0 === h ? void 0 : h.type);) {\n          var h,\n              p,\n              c,\n              u = a.property;\n          if (a.computed) o.unshift(t.parseExpression(u));else o.unshift(null !== (p = null == u ? void 0 : u.name) && void 0 !== p ? p : JSON.parse(null !== (c = null == u ? void 0 : u.raw) && void 0 !== c ? c : '\"\"'));\n          a = a.object;\n        }\n        var l = t.parseExpression(a);\n\n        try {\n          var d = l,\n              f = o.reduce(function (t, e) {\n            return d = t, t[e];\n          }, l);\n          return \"function\" == typeof f ? f.bind(d) : f;\n        } catch (e) {\n          var m,\n              x = (null === (m = a) || void 0 === m ? void 0 : m.name) || \"unknown\";\n          t.props.onError(new Error(\"Unable to parse \".concat(x, '[\"').concat(o.join('\"][\"'), '\"]}')));\n        }\n      }), j(O(t), \"parseName\", function (e) {\n        switch (e.type) {\n          case \"JSXIdentifier\":\n            return e.name;\n\n          case \"JSXMemberExpression\":\n            return \"\".concat(t.parseName(e.object), \".\").concat(t.parseName(e.property));\n        }\n      }), j(O(t), \"parseElement\", function (e) {\n        var i = t.props,\n            s = i.allowUnknownElements,\n            r = i.components,\n            n = void 0 === r ? {} : r,\n            a = i.componentsOnly,\n            p = i.onError,\n            c = e.children,\n            f = void 0 === c ? [] : c,\n            m = e.openingElement,\n            x = m.attributes,\n            g = void 0 === x ? [] : x,\n            v = t.parseName(m.name),\n            b = (t.props.blacklistedAttrs || []).map(function (t) {\n          return t instanceof RegExp ? t : new RegExp(t, \"i\");\n        }),\n            E = (t.props.blacklistedTags || []).map(function (t) {\n          return t.trim().toLowerCase();\n        }).filter(Boolean);\n        if (/^(html|head|body)$/i.test(v)) return f.map(function (e) {\n          return t.parseElement(e);\n        });\n        var w = v.trim().toLowerCase();\n\n        if (-1 === E.indexOf(w)) {\n          if (!_(n, v)) {\n            if (a) return p(new Error(\"The component <\".concat(v, \"> is unrecognized, and will not be rendered.\"))), t.props.renderUnrecognized(v);\n            if (!s && document.createElement(v) instanceof HTMLUnknownElement) return p(new Error(\"The tag <\".concat(v, \"> is unrecognized in this browser, and will not be rendered.\"))), t.props.renderUnrecognized(v);\n          }\n\n          var A,\n              I = _(n, v);\n\n          if (I || u(v)) if (A = f.map(t.parseExpression), I || l(v) || (A = A.filter(function (t) {\n            return \"string\" != typeof t || !/^\\s*$/.test(t);\n          })), 0 === A.length) A = void 0;else if (1 === A.length) {\n            A = C(A, 1)[0];\n          } else A.length > 1 && (A = A.map(function (t, e) {\n            return t && t.type ? S(S({}, t), {}, {\n              key: e\n            }) : t;\n          }));\n          var P = {\n            key: t.props.disableKeyGeneration ? void 0 : d()\n          };\n          return g.forEach(function (e) {\n            if (\"JSXAttribute\" === e.type) {\n              var i = e.name.name,\n                  s = h[i] || i,\n                  r = t.parseExpression(e);\n              0 === b.filter(function (t) {\n                return t.test(s);\n              }).length && (P[s] = r);\n            } else if (\"JSXSpreadAttribute\" === e.type && \"Identifier\" === e.argument.type || \"MemberExpression\" === e.argument.type) {\n              var n = t.parseExpression(e.argument);\n              \"object\" === k(n) && Object.keys(n).forEach(function (t) {\n                var e = h[t] || t;\n                0 === b.filter(function (t) {\n                  return t.test(e);\n                }).length && (P[e] = n[t]);\n              });\n            }\n          }), \"string\" == typeof P.style && (P.style = y(P.style)), o.a.createElement(I || v.toLowerCase(), P, A);\n        }\n\n        p(new Error(\"The tag <\".concat(v, \"> is blacklisted, and will not be rendered.\")));\n      }), j(O(t), \"render\", function () {\n        var e = (t.props.jsx || \"\").trim().replace(/<!DOCTYPE([^>]*)>/g, \"\");\n        t.ParsedChildren = t.parseJSX(e);\n        var i = w(new Set([\"jsx-parser\"].concat(w(String(t.props.className).split(\" \"))))).filter(Boolean).join(\" \");\n        return t.props.renderInWrapper ? o.a.createElement(\"div\", {\n          className: i\n        }, t.ParsedChildren) : o.a.createElement(o.a.Fragment, null, t.ParsedChildren);\n      }), t;\n    }\n\n    return i;\n  }(a.Component);\n\n  j(M, \"displayName\", \"JsxParser\"), j(M, \"defaultProps\", {\n    allowUnknownElements: !0,\n    bindings: {},\n    blacklistedAttrs: [/^on.+/i],\n    blacklistedTags: [\"script\"],\n    className: \"\",\n    components: [],\n    componentsOnly: !1,\n    disableFragments: !1,\n    disableKeyGeneration: !1,\n    jsx: \"\",\n    onError: function () {},\n    showWarnings: !1,\n    renderError: void 0,\n    renderInWrapper: !0,\n    renderUnrecognized: function () {\n      return null;\n    }\n  });\n}]);","map":{"version":3,"sources":["webpack://react-jsx-parser/webpack/bootstrap","webpack:/react-jsx-parser/external \"react\"","webpack://react-jsx-parser/node_modules/acorn/dist/acorn.mjs","webpack://react-jsx-parser/node_modules/acorn-jsx/index.js","webpack://react-jsx-parser/node_modules/acorn-jsx/xhtml.js","webpack://react-jsx-parser/source/constants/attributeNames.ts","webpack://react-jsx-parser/source/constants/specialTags.ts","webpack://react-jsx-parser/source/helpers/hash.ts","webpack://react-jsx-parser/source/helpers/parseStyle.ts","webpack://react-jsx-parser/source/helpers/camelCase.ts","webpack://react-jsx-parser/source/helpers/resolvePath.ts","webpack://react-jsx-parser/source/components/JsxParser.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","reservedWords","3","5","6","strict","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","set","pos","length","isIdentifierStart","astral","test","String","fromCharCode","isIdentifierChar","TokenType","label","conf","this","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","prec","keywords$1","kw","options","types","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","assign","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","coalesce","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","ecma2019String","nonASCIIwhitespace","skipWhiteSpace","ref","toString","has","obj","propName","isArray","Array","wordsRegexp","words","replace","Position","line","col","column","offset","SourceLocation","start","end","sourceFile","getLineInfo","input","cur","lastIndex","match","exec","index","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","getOptions","opts","opt","tokens","token","push","pushComment","array","block","text","startLoc","endLoc","comment","type","loc","range","SCOPE_TOP","functionFlags","async","generator","Parser","startPos","reserved","v","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","lineStart","lastIndexOf","curLine","slice","split","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","yieldPos","awaitPos","awaitIdentPos","labels","undefinedExports","skipLineComment","scopeStack","enterScope","regexpState","prototypeAccessors","inFunction","configurable","inGenerator","inAsync","allowSuper","allowDirectSuper","treatFunctionsAsVar","parse","node","startNode","nextToken","parseTopLevel","currentVarScope","flags","currentThisScope","treatFunctionsAsVarInScope","currentScope","inNonArrowFunction","extend","plugins","len","arguments","cls","parseExpressionAt","parser","parseExpression","tokenizer","defineProperties","pp","literal","spaceAfter","next","charAt","eat","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","body","stmt","parseStatement","list","keys","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseExpressionStatement","parseImport","parseExport","maybeName","parseLabeledStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","parseFor","init$1","parseVar","declarations","await","parseForIn","init","toAssignable","checkLVal","isAsync","declarationPosition","parseFunction","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitScope","empty","handler","clause","param","parseBindingAtom","simple","finalizer","i$1","label$1","statementStart","indexOf","createNewLexicalScope","exitStrict","update","isForIn","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","statement","allowExpressionBody","initFunction","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","parseFunctionParams","parseFunctionBody","params","parseBindingList","isStatement","oldStrict","parseClassId","parseClassSuper","classBody","hadConstructor","element","parseClassElement","superClass","constructorAllowsSuper","this$1","method","tryContextual","k","noLineBreak","computed","startNodeAt","static","isGenerator","parsePropertyName","allowsDirectSuper","parseClassMethod","parseMethod","parseExprSubscripts","exported","checkExport","parseExprAtom","fNode","declaration","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkLocalExport","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","nodes","first","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","pp$2","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","declareName","pp$3","checkPropClash","propHash","shorthand","proto","other","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","result","parseSubscripts","base","noCalls","maybeAsyncArrow","parseSubscript","parseExprList","parseArrowExpression","callee","tag","quasi","parseTemplate","isTagged","readRegexp","canBeArrow","parseLiteral","regex","pattern","parseParenAndDistinguishExpression","parseNew","parseExprImport","meta","parseDynamicImport","parseImportMeta","errorPos","bigint","val","innerStartPos","innerStartLoc","lastIsComma","spreadStart","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","isImport","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isMethod","isExpression","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","undefined","allowDuplicates","nameHash","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","Scope","var","lexical","functions","scope","redeclared","scope$2","scope$3","Node","pp$6","TokContext","isExpr","preserveSpace","override","types$1","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","parent","curContext","inGeneratorContext","out","statementParens","allowed","ecma9BinaryProperties","ecma10BinaryProperties","unicodeBinaryProperties","9","10","11","unicodeGeneralCategoryValues","ecma9ScriptValues","ecma10ScriptValues","unicodeScriptValues","data","buildUnicodeData","binary","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","pp$8","RegExpValidationState","validFlags","unicodeProperties","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","reset","unicode","at","forceU","nextIndex","current","lookahead","advance","ch","codePointToString","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","max","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","isSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","isRegExpIdentifierStart","isRegExpIdentifierPart","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","isDecimalDigit","isControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","isCharacterClassEscape","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","isOctalDigit","regexp_eatClassControlLetter","isHexDigit","hexToInt","regexp_eatOctalDigit","n1","n2","Token","pp$9","ignoreEscapeSequenceInKeyword","getToken","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","finishOp","readToken_mult_modulo_exp","size","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readToken_question","readRadixNumber","readString","codePointToString$1","str","escaped","inClass","flagsStart","readWord1","e","readInt","radix","total","Infinity","BigInt","startsWithDot","octal","str$1","val$1","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","substr","word","escStart","esc","version","acorn","tokTypes","keywordTypes","tokContexts","XHTMLEntities","hexNumber","decimalNumber","acornJsxMap","WeakMap","getJsxTokens","acornJsx","tt","tc_oTag","tc_cTag","tc_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","getQualifiedJSXName","namespace","plugin","allowNamespaces","allowNamespacedObjects","tok","jsx_readEntity","jsx_readNewLine","normalizeCRLF","count","entity","jsx_parseIdentifier","jsx_parseNamespacedName","newNode","jsx_parseExpressionContainer","jsx_parseEmptyExpression","jsx_parseAttributeValue","attributes","nodeName","jsx_parseElementName","jsx_parseAttribute","selfClosing","children","openingElement","jsx_parseOpeningElementAt","closingElement","contents","jsx_parseClosingElementAt","jsx_parseElementAt","fragmentOrElement","refShortHandDefaultPos","jsx_parseText","jsx_parseElement","super","jsx_readToken","jsx_readWord","jsx_readString","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","class","for","maxlength","colspan","rowspan","VOID_ELEMENTS","NO_WHITESPACE","canHaveChildren","tagName","toLowerCase","canHaveWhitespace","h","forEach","char","Math","abs","randomHash","hash","random","parseStyle","style","filter","reduce","map","rule","trim","toUpperCase","join","path","resolveArrayPath","subPath","resolvePath","pathToArrayPath","Acorn","JsxParser","Component","allowUnknownElements","bindings","blacklistedAttrs","blacklistedTags","className","components","componentsOnly","disableFragments","disableKeyGeneration","jsx","onError","showWarnings","renderError","renderInWrapper","renderUnrecognized","wrappedJsx","parsed","error","props","console","warn","Boolean","parseElement","parsedCallee","Error","parseMemberExpression","sort","a","b","JSON","includes","unshift","target","member","parseName","childNodes","attr","document","createElement","HTMLUnknownElement","component","child","rawName","attributeName","ATTRIBUTES","re","React","ParsedChildren","parseJSX","Set"],"mappings":"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","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = require(\"react\");","// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  \"5module\": ecma5AndLessKeywords + \" export import\",\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords$1 = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options)\n}\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n  coalesce: binop(\"??\", 1),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\", startsExpr),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code, ecma2019String) {\n  return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\nfunction wordsRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (2015), 7 (2016), 8 (2017), 9 (2018), or 10\n  // (2019). This influences support for strict mode, the set of\n  // reserved words, and support for new syntax features. The default\n  // is 10.\n  ecmaVersion: 10,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // the position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion >= 2015)\n    { options.ecmaVersion -= 2009; }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Each scope gets a bitset that may contain these flags\nvar\n    SCOPE_TOP = 1,\n    SCOPE_FUNCTION = 2,\n    SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,\n    SCOPE_ASYNC = 4,\n    SCOPE_GENERATOR = 8,\n    SCOPE_ARROW = 16,\n    SCOPE_SIMPLE_CATCH = 32,\n    SCOPE_SUPER = 64,\n    SCOPE_DIRECT_SUPER = 128;\n\nfunction functionFlags(async, generator) {\n  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n}\n\n// Used in checkLVal and declareName to determine the type of a binding\nvar\n    BIND_NONE = 0, // Not a binding\n    BIND_VAR = 1, // Var-style binding\n    BIND_LEXICAL = 2, // Let- or const-style binding\n    BIND_FUNCTION = 3, // Function declaration\n    BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n    BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n  var reserved = \"\";\n  if (options.allowReserved !== true) {\n    for (var v = options.ecmaVersion;; v--)\n      { if (reserved = reservedWords[v]) { break } }\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = wordsRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = wordsRegexp(reservedStrict);\n  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n  // Labels in scope.\n  this.labels = [];\n  // Thus-far undefined exports.\n  this.undefinedExports = {};\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterScope(SCOPE_TOP);\n\n  // For RegExp validation\n  this.regexpState = null;\n};\n\nvar prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true } };\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nprototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\nprototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\nprototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\nprototypeAccessors.allowSuper.get = function () { return (this.currentThisScope().flags & SCOPE_SUPER) > 0 };\nprototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\nprototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n// Switch to a getter for 7.0.0.\nParser.prototype.inNonArrowFunction = function inNonArrowFunction () { return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0 };\n\nParser.extend = function extend () {\n    var plugins = [], len = arguments.length;\n    while ( len-- ) plugins[ len ] = arguments[ len ];\n\n  var cls = this;\n  for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n  return cls\n};\n\nParser.parse = function parse (input, options) {\n  return new this(options, input).parse()\n};\n\nParser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n  var parser = new this(options, input, pos);\n  parser.nextToken();\n  return parser.parseExpression()\n};\n\nParser.tokenizer = function tokenizer (input, options) {\n  return new this(options, input)\n};\n\nObject.defineProperties( Parser.prototype, prototypeAccessors );\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\")/;\npp.strictDirective = function(start) {\n  for (;;) {\n    // Try to find string literal.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    var match = literal.exec(this.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") {\n      skipWhiteSpace.lastIndex = start + match[0].length;\n      var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n      var next = this.input.charAt(end);\n      return next === \";\" || next === \"}\" ||\n        (lineBreak.test(spaceAfter[0]) &&\n         !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n    }\n    start += match[0].length;\n\n    // Skip semicolon, if any.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    if (this.input[start] === \";\")\n      { start++; }\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === types.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === types.eof ||\n    this.type === types.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n}\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n};\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var exports = {};\n  if (!node.body) { node.body = []; }\n  while (this.type !== types.eof) {\n    var stmt = this.parseStatement(null, true, exports);\n    node.body.push(stmt);\n  }\n  if (this.inModule)\n    { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n      {\n        var name = list[i];\n\n        this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n      } }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  node.sourceType = this.options.sourceType;\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\npp$1.isLet = function(context) {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  // For ambiguous cases, determine if a LexicalDeclaration (or only a\n  // Statement) is allowed here. If context is not empty then only a Statement\n  // is allowed. However, `let [` is an explicit negative lookahead for\n  // ExpressionStatement, so special-case it first.\n  if (nextCh === 91) { return true } // '['\n  if (context) { return false }\n\n  if (nextCh === 123) { return true } // '{'\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(context, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet(context)) {\n    starttype = types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types._debugger: return this.parseDebuggerStatement(node)\n  case types._do: return this.parseDoStatement(node)\n  case types._for: return this.parseForStatement(node)\n  case types._function:\n    // Function as sole body of either an if statement or a labeled statement\n    // works, but not when it is part of a labeled statement that is the sole\n    // body of an if statement.\n    if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false, !context)\n  case types._class:\n    if (context) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types._if: return this.parseIfStatement(node)\n  case types._return: return this.parseReturnStatement(node)\n  case types._switch: return this.parseSwitchStatement(node)\n  case types._throw: return this.parseThrowStatement(node)\n  case types._try: return this.parseTryStatement(node)\n  case types._const: case types._var:\n    kind = kind || this.value;\n    if (context && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types._while: return this.parseWhileStatement(node)\n  case types._with: return this.parseWithStatement(node)\n  case types.braceL: return this.parseBlock(true, node)\n  case types.semi: return this.parseEmptyStatement(node)\n  case types._export:\n  case types._import:\n    if (this.options.ecmaVersion > 10 && starttype === types._import) {\n      skipWhiteSpace.lastIndex = this.pos;\n      var skip = skipWhiteSpace.exec(this.input);\n      var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n      if (nextCh === 40 || nextCh === 46) // '(' or '.'\n        { return this.parseExpressionStatement(node, this.parseExpression()) }\n    }\n\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (context) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true, !context)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr, context) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$1.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"do\");\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterScope(0);\n  this.expect(types.parenL);\n  if (this.type === types.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLVal(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n  this.next();\n  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n};\n\npp$1.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(\"if\");\n  node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$1.parseSwitchStatement = function(node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterScope(0);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types.braceR;) {\n    if (this.type === types._case || this.type === types._default) {\n      var isCase = this.type === types._case;\n      if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(types.colon);\n    } else {\n      if (!cur) { this.unexpected(); }\n      cur.consequent.push(this.parseStatement(null));\n    }\n  }\n  this.exitScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$1.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types.parenL)) {\n      clause.param = this.parseBindingAtom();\n      var simple = clause.param.type === \"Identifier\";\n      this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n      this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n      this.expect(types.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterScope(0);\n    }\n    clause.body = this.parseBlock(false);\n    this.exitScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$1.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"while\");\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(\"with\");\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$1.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$1.parseLabeledStatement = function(node, maybeName, expr, context) {\n  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n  if ( node === void 0 ) node = this.startNode();\n\n  node.body = [];\n  this.expect(types.braceL);\n  if (createNewLexicalScope) { this.enterScope(0); }\n  while (this.type !== types.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  if (exitStrict) { this.strict = false; }\n  this.next();\n  if (createNewLexicalScope) { this.exitScope(); }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var isForIn = this.type === types._in;\n  this.next();\n\n  if (\n    init.type === \"VariableDeclaration\" &&\n    init.declarations[0].init != null &&\n    (\n      !isForIn ||\n      this.options.ecmaVersion < 8 ||\n      this.strict ||\n      init.kind !== \"var\" ||\n      init.declarations[0].id.type !== \"Identifier\"\n    )\n  ) {\n    this.raise(\n      init.start,\n      ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n    );\n  } else if (init.type === \"AssignmentPattern\") {\n    this.raise(init.start, \"Invalid left-hand side in for-loop\");\n  }\n  node.left = init;\n  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarId(decl, kind);\n    if (this.eat(types.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n      this.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types._in || this.isContextual(\"of\")))) {\n      this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(types.comma)) { break }\n  }\n  return node\n};\n\npp$1.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom();\n  this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n};\n\nvar FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n// Parse a function declaration or literal (depending on the\n// `statement & FUNC_STATEMENT`).\n\n// Remove `allowExpressionBody` for 7.0.0, as it is only called with false\npp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    if (this.type === types.star && (statement & FUNC_HANGING_STATEMENT))\n      { this.unexpected(); }\n    node.generator = this.eat(types.star);\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (statement & FUNC_STATEMENT) {\n    node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.name ? null : this.parseIdent();\n    if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n      // If it is a regular function declaration in sloppy mode, then it is\n      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n      // mode depends on properties of the current scope (see\n      // treatFunctionsAsVar).\n      { this.checkLVal(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n  }\n\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(node.async, node.generator));\n\n  if (!(statement & FUNC_STATEMENT))\n    { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  this.next();\n\n  // ecma-262 14.6 Class Definitions\n  // A class definition is always strict mode code.\n  var oldStrict = this.strict;\n  this.strict = true;\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n  while (this.type !== types.braceR) {\n    var element = this.parseClassElement(node.superClass !== null);\n    if (element) {\n      classBody.body.push(element);\n      if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n        if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n        hadConstructor = true;\n      }\n    }\n  }\n  this.strict = oldStrict;\n  this.next();\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$1.parseClassElement = function(constructorAllowsSuper) {\n  var this$1 = this;\n\n  if (this.eat(types.semi)) { return null }\n\n  var method = this.startNode();\n  var tryContextual = function (k, noLineBreak) {\n    if ( noLineBreak === void 0 ) noLineBreak = false;\n\n    var start = this$1.start, startLoc = this$1.startLoc;\n    if (!this$1.eatContextual(k)) { return false }\n    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n    if (method.key) { this$1.unexpected(); }\n    method.computed = false;\n    method.key = this$1.startNodeAt(start, startLoc);\n    method.key.name = k;\n    this$1.finishNode(method.key, \"Identifier\");\n    return false\n  };\n\n  method.kind = \"method\";\n  method.static = tryContextual(\"static\");\n  var isGenerator = this.eat(types.star);\n  var isAsync = false;\n  if (!isGenerator) {\n    if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    } else if (tryContextual(\"get\")) {\n      method.kind = \"get\";\n    } else if (tryContextual(\"set\")) {\n      method.kind = \"set\";\n    }\n  }\n  if (!method.key) { this.parsePropertyName(method); }\n  var key = method.key;\n  var allowsDirectSuper = false;\n  if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n      key.type === \"Literal\" && key.value === \"constructor\")) {\n    if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    method.kind = \"constructor\";\n    allowsDirectSuper = constructorAllowsSuper;\n  } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n  this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n  if (method.kind === \"get\" && method.value.params.length !== 0)\n    { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && method.value.params.length !== 1)\n    { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n  return method\n};\n\npp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n  method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n  return this.finishNode(method, \"MethodDefinition\")\n};\n\npp$1.parseClassId = function(node, isStatement) {\n  if (this.type === types.name) {\n    node.id = this.parseIdent();\n    if (isStatement)\n      { this.checkLVal(node.id, BIND_LEXICAL, false); }\n  } else {\n    if (isStatement === true)\n      { this.unexpected(); }\n    node.id = null;\n  }\n};\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  this.next();\n  // export * from '...'\n  if (this.eat(types.star)) {\n    if (this.options.ecmaVersion >= 11) {\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseIdent(true);\n        this.checkExport(exports, node.exported.name, this.lastTokStart);\n      } else {\n        node.exported = null;\n      }\n    }\n    this.expectContextual(\"from\");\n    if (this.type !== types.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(null);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        // check for keywords used as local names\n        var spec = list[i];\n\n        this.checkUnreserved(spec.local);\n        // check if export is defined\n        this.checkLocalExport(spec.local);\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (has(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function(exports, pat) {\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat.name, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$1.checkVariableExport = function(exports, decls) {\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this.expect(types.comma);\n      if (this.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node = this.startNode();\n    node.local = this.parseIdent(true);\n    node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n    this.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var nodes = [], first = true;\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types.comma)) { return nodes }\n  }\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this.expect(types.comma);\n      if (this.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this.startNode();\n    node$2.imported = this.parseIdent(true);\n    if (this.eatContextual(\"as\")) {\n      node$2.local = this.parseIdent();\n    } else {\n      this.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this.checkLVal(node$2.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$1.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$1.isDirectiveCandidate = function(statement) {\n  return (\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      // falls through to AssignmentPattern\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$2.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this.expect(types.comma); }\n    if (allowEmpty && this.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break\n    } else if (this.type === types.ellipsis) {\n      var rest = this.parseRestBinding();\n      this.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n      this.expect(close);\n      break\n    } else {\n      var elem = this.parseMaybeDefault(this.start, this.startLoc);\n      this.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$2.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n      { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n      checkClashes[expr.name] = true;\n    }\n    if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1)\n      {\n    var prop = list[i];\n\n    this.checkLVal(prop, bindingType, checkClashes);\n  }\n    break\n\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLVal(expr.value, bindingType, checkClashes);\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this.checkLVal(elem, bindingType, checkClashes); }\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes);\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes);\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n// A recursive descent parser operates by defining functions for all\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors) {\n          if (refDestructuringErrors.doubleProto < 0)\n            { refDestructuringErrors.doubleProto = key.start; }\n          // Backwards-compat kludge. Can be removed in version 6.0\n        } else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) { node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.isContextual(\"yield\")) {\n    if (this.inGenerator) { return this.parseYield(noIn) }\n    // The tokenizer will assume an expression is allowed after\n    // `yield`, but this isn't that kind of yield\n    else { this.exprAllowed = false; }\n  }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types.parenL || this.type === types.name)\n    { this.potentialArrowAt = this.start; }\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n    if (!ownDestructuringErrors) {\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n    }\n    if (refDestructuringErrors.shorthandAssign >= node.left.start)\n      { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var coalesce = this.type === types.coalesce;\n      if (coalesce) {\n        // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n        // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n        prec = types.logicalAND.binop;\n      }\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n      if ((logical && this.type === types.coalesce) || (coalesce && (this.type === types.logicalOR || this.type === types.logicalAND))) {\n        this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n      }\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n};\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLVal(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.operator = this.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this.checkLVal(expr);\n      this.next();\n      expr = this.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar))\n    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n  else\n    { return expr }\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n    { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n  }\n  return result\n};\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n      this.potentialArrowAt === base.start;\n  while (true) {\n    var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow);\n    if (element === base || element.type === \"ArrowFunctionExpression\") { return element }\n    base = element;\n  }\n};\n\npp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n  var computed = this.eat(types.bracketL);\n  if (computed || this.eat(types.dot)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== \"never\");\n    node.computed = !!computed;\n    if (computed) { this.expect(types.bracketR); }\n    base = this.finishNode(node, \"MemberExpression\");\n  } else if (!noCalls && this.eat(types.parenL)) {\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n    if (maybeAsyncArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (this.awaitIdentPos > 0)\n        { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos;\n      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true)\n    }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n    var node$1 = this.startNodeAt(startPos, startLoc);\n    node$1.callee = base;\n    node$1.arguments = exprList;\n    base = this.finishNode(node$1, \"CallExpression\");\n  } else if (this.type === types.backQuote) {\n    var node$2 = this.startNodeAt(startPos, startLoc);\n    node$2.tag = base;\n    node$2.quasi = this.parseTemplate({isTagged: true});\n    base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n  }\n  return base\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  // If a division operator appears in an expression position, the\n  // tokenizer got confused, and we force it to read a regexp instead.\n  if (this.type === types.slash) { this.readRegexp(); }\n\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types._super:\n    if (!this.allowSuper)\n      { this.raise(this.start, \"'super' keyword outside a method\"); }\n    node = this.startNode();\n    this.next();\n    if (this.type === types.parenL && !this.allowDirectSuper)\n      { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super ( Arguments )\n    if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(false);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n      { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true) }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n        id = this.parseIdent(false);\n        if (this.canInsertSemicolon() || !this.eat(types.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case types.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types.num: case types.string:\n    return this.parseLiteral(this.value)\n\n  case types._null: case types._true: case types._false:\n    node = this.startNode();\n    node.value = this.type === types._null ? null : this.type === types._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, 0)\n\n  case types._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types._new:\n    return this.parseNew()\n\n  case types.backQuote:\n    return this.parseTemplate()\n\n  case types._import:\n    if (this.options.ecmaVersion >= 11) {\n      return this.parseExprImport()\n    } else {\n      return this.unexpected()\n    }\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseExprImport = function() {\n  var node = this.startNode();\n\n  // Consume `import` as an identifier for `import.meta`.\n  // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n  var meta = this.parseIdent(true);\n\n  switch (this.type) {\n  case types.parenL:\n    return this.parseDynamicImport(node)\n  case types.dot:\n    node.meta = meta;\n    return this.parseImportMeta(node)\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseDynamicImport = function(node) {\n  this.next(); // skip `(`\n\n  // Parse node.source.\n  node.source = this.parseMaybeAssign();\n\n  // Verify ending.\n  if (!this.eat(types.parenR)) {\n    var errorPos = this.start;\n    if (this.eat(types.comma) && this.eat(types.parenR)) {\n      this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n    } else {\n      this.unexpected(errorPos);\n    }\n  }\n\n  return this.finishNode(node, \"ImportExpression\")\n};\n\npp$3.parseImportMeta = function(node) {\n  this.next(); // skip `.`\n\n  var containsEsc = this.containsEsc;\n  node.property = this.parseIdent(true);\n\n  if (node.property.name !== \"meta\")\n    { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n  if (containsEsc)\n    { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n  if (this.options.sourceType !== \"module\")\n    { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n  return this.finishNode(node, \"MetaProperty\")\n};\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1); }\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$3.parseParenExpression = function() {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val\n};\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    // Do not save awaitIdentPos to allow checking awaits nested in parameters\n    while (this.type !== types.parenR) {\n      first ? first = false : this.expect(types.comma);\n      if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this.type === types.ellipsis) {\n        spreadStart = this.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding()));\n        if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$3.parseParenItem = function(item) {\n  return item\n};\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = [];\n\npp$3.parseNew = function() {\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n    if (!this.inNonArrowFunction())\n      { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types._import;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (isImport && node.callee.type === \"ImportExpression\") {\n    this.raise(startPos, \"Cannot use new with import()\");\n  }\n  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty$1; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$3.parseTemplate = function(ref) {\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this.type === types.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n    this.expect(types.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(types.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$3.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this.expect(types.comma);\n      if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // To disallow parenthesized identifier via `this.toAssignable()`.\n    if (this.type === types.parenL && refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0) {\n        refDestructuringErrors.parenthesizedAssign = this.start;\n      }\n      if (refDestructuringErrors.parenthesizedBind < 0) {\n        refDestructuringErrors.parenthesizedBind = this.start;\n      }\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types.comma && this.type !== types.braceR)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.checkUnreserved(prop.key);\n    if (prop.key.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = startPos; }\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n  if (this.options.ecmaVersion >= 8) { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false, true);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }\n    node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitScope();\n};\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var nameHash = {};\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(types.comma);\n      if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this.type === types.comma)\n      { elt = null; }\n    else if (this.type === types.ellipsis) {\n      elt = this.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this.start; }\n    } else {\n      elt = this.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$3.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n  if (this.keywords.test(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next(!!liberal);\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) {\n    this.checkUnreserved(node);\n    if (node.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = node.start; }\n  }\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function(noIn) {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign(noIn);\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, false);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$5 = Parser.prototype;\n\nvar Scope = function Scope(flags) {\n  this.flags = flags;\n  // A list of var-declared names in the current lexical scope\n  this.var = [];\n  // A list of lexically-declared names in the current lexical scope\n  this.lexical = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  this.functions = [];\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterScope = function(flags) {\n  this.scopeStack.push(new Scope(flags));\n};\n\npp$5.exitScope = function() {\n  this.scopeStack.pop();\n};\n\n// The spec says:\n// > At the top level of a function, or script, function declarations are\n// > treated like var declarations rather than like lexical declarations.\npp$5.treatFunctionsAsVarInScope = function(scope) {\n  return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n};\n\npp$5.declareName = function(name, bindingType, pos) {\n  var redeclared = false;\n  if (bindingType === BIND_LEXICAL) {\n    var scope = this.currentScope();\n    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    scope.lexical.push(name);\n    if (this.inModule && (scope.flags & SCOPE_TOP))\n      { delete this.undefinedExports[name]; }\n  } else if (bindingType === BIND_SIMPLE_CATCH) {\n    var scope$1 = this.currentScope();\n    scope$1.lexical.push(name);\n  } else if (bindingType === BIND_FUNCTION) {\n    var scope$2 = this.currentScope();\n    if (this.treatFunctionsAsVar)\n      { redeclared = scope$2.lexical.indexOf(name) > -1; }\n    else\n      { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n    scope$2.functions.push(name);\n  } else {\n    for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n      var scope$3 = this.scopeStack[i];\n      if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n          !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n        redeclared = true;\n        break\n      }\n      scope$3.var.push(name);\n      if (this.inModule && (scope$3.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n      if (scope$3.flags & SCOPE_VAR) { break }\n    }\n  }\n  if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n};\n\npp$5.checkLocalExport = function(id) {\n  // scope.functions must be empty as Module code is always strict.\n  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1) {\n    this.undefinedExports[id.name] = id;\n  }\n};\n\npp$5.currentScope = function() {\n  return this.scopeStack[this.scopeStack.length - 1]\n};\n\npp$5.currentVarScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR) { return scope }\n  }\n};\n\n// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\npp$5.currentThisScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n  }\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function() {\n  return [types$1.b_stat]\n};\n\npp$7.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types$1.f_expr || parent === types$1.f_stat)\n    { return true }\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types._return || prevType === types.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n    { return true }\n  if (prevType === types.braceL)\n    { return parent === types$1.b_stat }\n  if (prevType === types._var || prevType === types._const || prevType === types.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$7.inGeneratorContext = function() {\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function() {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n      !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n    { this.context.push(types$1.f_expr); }\n  else\n    { this.context.push(types$1.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function() {\n  if (this.curContext() === types$1.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types$1.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function(prevType) {\n  if (prevType === types._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types$1.f_expr)\n      { this.context[index] = types$1.f_expr_gen; }\n    else\n      { this.context[index] = types$1.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\n// This file contains Unicode properties extracted from the ECMAScript\n// specification. The lists are extracted like so:\n// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n// #table-binary-unicode-properties\nvar ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\nvar ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\nvar ecma11BinaryProperties = ecma10BinaryProperties;\nvar unicodeBinaryProperties = {\n  9: ecma9BinaryProperties,\n  10: ecma10BinaryProperties,\n  11: ecma11BinaryProperties\n};\n\n// #table-unicode-general-category-values\nvar unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n// #table-unicode-script-values\nvar ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\nvar ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\nvar ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\nvar unicodeScriptValues = {\n  9: ecma9ScriptValues,\n  10: ecma10ScriptValues,\n  11: ecma11ScriptValues\n};\n\nvar data = {};\nfunction buildUnicodeData(ecmaVersion) {\n  var d = data[ecmaVersion] = {\n    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n    nonBinary: {\n      General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n    }\n  };\n  d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n  d.nonBinary.gc = d.nonBinary.General_Category;\n  d.nonBinary.sc = d.nonBinary.Script;\n  d.nonBinary.scx = d.nonBinary.Script_Extensions;\n}\nbuildUnicodeData(9);\nbuildUnicodeData(10);\nbuildUnicodeData(11);\n\nvar pp$8 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n  this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  var next = s.charCodeAt(i + 1);\n  return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i), next;\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n      (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.pos, forceU)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.nextIndex(this.pos, forceU), forceU)\n};\n\nRegExpValidationState.prototype.advance = function advance (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  this.pos = this.nextIndex(this.pos, forceU);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  if (this.current(forceU) === ch) {\n    this.advance(forceU);\n    return true\n  }\n  return false\n};\n\nfunction codePointToString(ch) {\n  if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n  ch -= 0x10000;\n  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n}\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$8.validateRegExpFlags = function(state) {\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$8.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$8.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$8.regexp_disjunction = function(state) {\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$8.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    { }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$8.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$8.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$8.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$8.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$8.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$8.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$8.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$8.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$8.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$8.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$8.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$8.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$8.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$8.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier ::\n//   [empty]\n//   `?` GroupName\npp$8.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName ::\n//   `<` RegExpIdentifierName `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$8.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName ::\n//   RegExpIdentifierStart\n//   RegExpIdentifierName RegExpIdentifierPart\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$8.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\npp$8.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\n//   <ZWNJ>\n//   <ZWJ>\npp$8.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$8.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$8.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$8.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$8.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$8.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$8.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$8.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$8.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$8.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n  if ( forceU === void 0 ) forceU = false;\n\n  var start = state.pos;\n  var switchU = forceU || state.switchU;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$8.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$8.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$8.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$8.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$8.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!has(state.unicodeProperties.nonBinary, name))\n    { state.raise(\"Invalid property name\"); }\n  if (!state.unicodeProperties.nonBinary[name].test(value))\n    { state.raise(\"Invalid property value\"); }\n};\npp$8.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (!state.unicodeProperties.binary.test(nameOrValue))\n    { state.raise(\"Invalid property name\"); }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$8.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$8.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$8.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$8.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* ] */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$8.regexp_classRanges = function(state) {\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$8.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* ] */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$8.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$8.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$8.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$8.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$8.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$8.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$8.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$8.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp$9 = Parser.prototype;\n\n// Move to the next token\n\npp$9.next = function(ignoreEscapeSequenceInKeyword) {\n  if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n    { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$9.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp$9[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$9.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$9.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp$9.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp$9.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00\n};\n\npp$9.skipBlockComment = function() {\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this.curLine;\n      this.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp$9.skipLineComment = function(startSkip) {\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this.input.charCodeAt(++this.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$9.skipSpace = function() {\n  loop: while (this.pos < this.input.length) {\n    var ch = this.input.charCodeAt(this.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this.pos;\n      break\n    case 13:\n      if (this.input.charCodeAt(this.pos + 1) === 10) {\n        ++this.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this.pos;\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this.input.charCodeAt(this.pos + 1)) {\n      case 42: // '*'\n        this.skipBlockComment();\n        break\n      case 47:\n        this.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$9.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$9.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot)\n  }\n};\n\npp$9.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.slash, 1)\n};\n\npp$9.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp$9.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n};\n\npp$9.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.bitwiseXOR, 1)\n};\n\npp$9.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.plusMin, 1)\n};\n\npp$9.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(types.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types.relational, size)\n};\n\npp$9.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow)\n  }\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n};\n\npp$9.readToken_question = function() { // '?'\n  if (this.options.ecmaVersion >= 11) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 63) { return this.finishOp(types.coalesce, 2) }\n  }\n  return this.finishOp(types.question, 1)\n};\n\npp$9.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types.parenL)\n  case 41: ++this.pos; return this.finishToken(types.parenR)\n  case 59: ++this.pos; return this.finishToken(types.semi)\n  case 44: ++this.pos; return this.finishToken(types.comma)\n  case 91: ++this.pos; return this.finishToken(types.bracketL)\n  case 93: ++this.pos; return this.finishToken(types.bracketR)\n  case 123: ++this.pos; return this.finishToken(types.braceL)\n  case 125: ++this.pos; return this.finishToken(types.braceR)\n  case 58: ++this.pos; return this.finishToken(types.colon)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 63: // '?'\n    return this.readToken_question()\n\n  case 126: // '~'\n    return this.finishOp(types.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString$1(code) + \"'\");\n};\n\npp$9.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp$9.readRegexp = function() {\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n    var ch = this.input.charAt(this.pos);\n    if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$9.readInt = function(radix, len) {\n  var start = this.pos, total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this.input.charCodeAt(this.pos), val = (void 0);\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    ++this.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\npp$9.readRadixNumber = function(radix) {\n  var start = this.pos;\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n    val = typeof BigInt !== \"undefined\" ? BigInt(this.input.slice(start, this.pos)) : null;\n    ++this.pos;\n  } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp$9.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  var next = this.input.charCodeAt(this.pos);\n  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n    var str$1 = this.input.slice(start, this.pos);\n    var val$1 = typeof BigInt !== \"undefined\" ? BigInt(str$1) : null;\n    ++this.pos;\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types.num, val$1)\n  }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var str = this.input.slice(start, this.pos);\n  var val = octal ? parseInt(str, 8) : parseFloat(str);\n  return this.finishToken(types.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp$9.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\nfunction codePointToString$1(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$9.readString = function(quote) {\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(false);\n      chunkStart = this.pos;\n    } else {\n      if (isNewLine(ch, this.options.ecmaVersion >= 10)) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$9.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$9.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$9.readTmplToken = function() {\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n      if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this.pos += 2;\n          return this.finishToken(types.dollarBraceL)\n        } else {\n          ++this.pos;\n          return this.finishToken(types.backQuote)\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos);\n      return this.finishToken(types.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(true);\n      chunkStart = this.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos);\n      ++this.pos;\n      switch (ch) {\n      case 13:\n        if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      chunkStart = this.pos;\n    } else {\n      ++this.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp$9.readInvalidTemplateToken = function() {\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this.input[this.pos]) {\n    case \"\\\\\":\n      ++this.pos;\n      break\n\n    case \"$\":\n      if (this.input[this.pos + 1] !== \"{\") {\n        break\n      }\n    // falls through\n\n    case \"`\":\n      return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp$9.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString$1(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  case 56:\n  case 57:\n    if (inTemplate) {\n      var codePos = this.pos - 1;\n\n      this.invalidStringToken(\n        codePos,\n        \"Invalid escape sequence in template string\"\n      );\n\n      return null\n    }\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    if (isNewLine(ch)) {\n      // Unicode new line characters after \\ get removed from output in both\n      // template literals and strings\n      return \"\"\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$9.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$9.readWord1 = function() {\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this.containsEsc = true;\n      word += this.input.slice(chunkStart, this.pos);\n      var escStart = this.pos;\n      if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n        { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this.pos;\n      var esc = this.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString$1(esc);\n      chunkStart = this.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$9.readWord = function() {\n  var word = this.readWord1();\n  var type = types.name;\n  if (this.keywords.test(word)) {\n    type = keywords$1[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n\nvar version = \"7.1.0\";\n\nParser.acorn = {\n  Parser: Parser,\n  version: version,\n  defaultOptions: defaultOptions,\n  Position: Position,\n  SourceLocation: SourceLocation,\n  getLineInfo: getLineInfo,\n  Node: Node,\n  TokenType: TokenType,\n  tokTypes: types,\n  keywordTypes: keywords$1,\n  TokContext: TokContext,\n  tokContexts: types$1,\n  isIdentifierChar: isIdentifierChar,\n  isIdentifierStart: isIdentifierStart,\n  Token: Token,\n  isNewLine: isNewLine,\n  lineBreak: lineBreak,\n  lineBreakG: lineBreakG,\n  nonASCIIwhitespace: nonASCIIwhitespace\n};\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return Parser.parse(input, options)\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  return Parser.parseExpressionAt(input, pos, options)\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return Parser.tokenizer(input, options)\n}\n\nexport { Node, Parser, Position, SourceLocation, TokContext, Token, TokenType, defaultOptions, getLineInfo, isIdentifierChar, isIdentifierStart, isNewLine, keywords$1 as keywordTypes, lineBreak, lineBreakG, nonASCIIwhitespace, parse, parseExpressionAt, types$1 as tokContexts, types as tokTypes, tokenizer, version };\n","'use strict';\n\nconst XHTMLEntities = require('./xhtml');\n\nconst hexNumber = /^[\\da-fA-F]+$/;\nconst decimalNumber = /^\\d+$/;\n\n// The map to `acorn-jsx` tokens from `acorn` namespace objects.\nconst acornJsxMap = new WeakMap();\n\n// Get the original tokens for the given `acorn` namespace object.\nfunction getJsxTokens(acorn) {\n  acorn = acorn.Parser.acorn || acorn;\n  let acornJsx = acornJsxMap.get(acorn);\n  if (!acornJsx) {\n    const tt = acorn.tokTypes;\n    const TokContext = acorn.TokContext;\n    const TokenType = acorn.TokenType;\n    const tc_oTag = new TokContext('<tag', false);\n    const tc_cTag = new TokContext('</tag', false);\n    const tc_expr = new TokContext('<tag>...</tag>', true, true);\n    const tokContexts = {\n      tc_oTag: tc_oTag,\n      tc_cTag: tc_cTag,\n      tc_expr: tc_expr\n    };\n    const tokTypes = {\n      jsxName: new TokenType('jsxName'),\n      jsxText: new TokenType('jsxText', {beforeExpr: true}),\n      jsxTagStart: new TokenType('jsxTagStart'),\n      jsxTagEnd: new TokenType('jsxTagEnd')\n    };\n\n    tokTypes.jsxTagStart.updateContext = function() {\n      this.context.push(tc_expr); // treat as beginning of JSX expression\n      this.context.push(tc_oTag); // start opening tag context\n      this.exprAllowed = false;\n    };\n    tokTypes.jsxTagEnd.updateContext = function(prevType) {\n      let out = this.context.pop();\n      if (out === tc_oTag && prevType === tt.slash || out === tc_cTag) {\n        this.context.pop();\n        this.exprAllowed = this.curContext() === tc_expr;\n      } else {\n        this.exprAllowed = true;\n      }\n    };\n\n    acornJsx = { tokContexts: tokContexts, tokTypes: tokTypes };\n    acornJsxMap.set(acorn, acornJsx);\n  }\n\n  return acornJsx;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(object) {\n  if (!object)\n    return object;\n\n  if (object.type === 'JSXIdentifier')\n    return object.name;\n\n  if (object.type === 'JSXNamespacedName')\n    return object.namespace.name + ':' + object.name.name;\n\n  if (object.type === 'JSXMemberExpression')\n    return getQualifiedJSXName(object.object) + '.' +\n    getQualifiedJSXName(object.property);\n}\n\nmodule.exports = function(options) {\n  options = options || {};\n  return function(Parser) {\n    return plugin({\n      allowNamespaces: options.allowNamespaces !== false,\n      allowNamespacedObjects: !!options.allowNamespacedObjects\n    }, Parser);\n  };\n};\n\n// This is `tokTypes` of the peer dep.\n// This can be different instances from the actual `tokTypes` this plugin uses.\nObject.defineProperty(module.exports, \"tokTypes\", {\n  get: function get_tokTypes() {\n    return getJsxTokens(require(\"acorn\")).tokTypes;\n  },\n  configurable: true,\n  enumerable: true\n});\n\nfunction plugin(options, Parser) {\n  const acorn = Parser.acorn || require(\"acorn\");\n  const acornJsx = getJsxTokens(acorn);\n  const tt = acorn.tokTypes;\n  const tok = acornJsx.tokTypes;\n  const tokContexts = acorn.tokContexts;\n  const tc_oTag = acornJsx.tokContexts.tc_oTag;\n  const tc_cTag = acornJsx.tokContexts.tc_cTag;\n  const tc_expr = acornJsx.tokContexts.tc_expr;\n  const isNewLine = acorn.isNewLine;\n  const isIdentifierStart = acorn.isIdentifierStart;\n  const isIdentifierChar = acorn.isIdentifierChar;\n\n  return class extends Parser {\n    // Expose actual `tokTypes` and `tokContexts` to other plugins.\n    static get acornJsx() {\n      return acornJsx;\n    }\n\n    // Reads inline JSX contents token.\n    jsx_readToken() {\n      let out = '', chunkStart = this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated JSX contents');\n        let ch = this.input.charCodeAt(this.pos);\n\n        switch (ch) {\n        case 60: // '<'\n        case 123: // '{'\n          if (this.pos === this.start) {\n            if (ch === 60 && this.exprAllowed) {\n              ++this.pos;\n              return this.finishToken(tok.jsxTagStart);\n            }\n            return this.getTokenFromCode(ch);\n          }\n          out += this.input.slice(chunkStart, this.pos);\n          return this.finishToken(tok.jsxText, out);\n\n        case 38: // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n          break;\n\n        case 62: // '>'\n        case 125: // '}'\n          this.raise(\n            this.pos,\n            \"Unexpected token `\" + this.input[this.pos] + \"`. Did you mean `\" +\n              (ch === 62 ? \"&gt;\" : \"&rbrace;\") + \"` or \" + \"`{\\\"\" + this.input[this.pos] + \"\\\"}\" + \"`?\"\n          );\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.pos);\n            out += this.jsx_readNewLine(true);\n            chunkStart = this.pos;\n          } else {\n            ++this.pos;\n          }\n        }\n      }\n    }\n\n    jsx_readNewLine(normalizeCRLF) {\n      let ch = this.input.charCodeAt(this.pos);\n      let out;\n      ++this.pos;\n      if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {\n        ++this.pos;\n        out = normalizeCRLF ? '\\n' : '\\r\\n';\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n\n      return out;\n    }\n\n    jsx_readString(quote) {\n      let out = '', chunkStart = ++this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated string constant');\n        let ch = this.input.charCodeAt(this.pos);\n        if (ch === quote) break;\n        if (ch === 38) { // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readNewLine(false);\n          chunkStart = this.pos;\n        } else {\n          ++this.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsx_readEntity() {\n      let str = '', count = 0, entity;\n      let ch = this.input[this.pos];\n      if (ch !== '&')\n        this.raise(this.pos, 'Entity must start with an ampersand');\n      let startPos = ++this.pos;\n      while (this.pos < this.input.length && count++ < 10) {\n        ch = this.input[this.pos++];\n        if (ch === ';') {\n          if (str[0] === '#') {\n            if (str[1] === 'x') {\n              str = str.substr(2);\n              if (hexNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 16));\n            } else {\n              str = str.substr(1);\n              if (decimalNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 10));\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.pos = startPos;\n        return '&';\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can't contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsx_readWord() {\n      let ch, start = this.pos;\n      do {\n        ch = this.input.charCodeAt(++this.pos);\n      } while (isIdentifierChar(ch) || ch === 45); // '-'\n      return this.finishToken(tok.jsxName, this.input.slice(start, this.pos));\n    }\n\n    // Parse next token as JSX identifier\n\n    jsx_parseIdentifier() {\n      let node = this.startNode();\n      if (this.type === tok.jsxName)\n        node.name = this.value;\n      else if (this.type.keyword)\n        node.name = this.type.keyword;\n      else\n        this.unexpected();\n      this.next();\n      return this.finishNode(node, 'JSXIdentifier');\n    }\n\n    // Parse namespaced identifier.\n\n    jsx_parseNamespacedName() {\n      let startPos = this.start, startLoc = this.startLoc;\n      let name = this.jsx_parseIdentifier();\n      if (!options.allowNamespaces || !this.eat(tt.colon)) return name;\n      var node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsx_parseIdentifier();\n      return this.finishNode(node, 'JSXNamespacedName');\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsx_parseElementName() {\n      if (this.type === tok.jsxTagEnd) return '';\n      let startPos = this.start, startLoc = this.startLoc;\n      let node = this.jsx_parseNamespacedName();\n      if (this.type === tt.dot && node.type === 'JSXNamespacedName' && !options.allowNamespacedObjects) {\n        this.unexpected();\n      }\n      while (this.eat(tt.dot)) {\n        let newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsx_parseIdentifier();\n        node = this.finishNode(newNode, 'JSXMemberExpression');\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsx_parseAttributeValue() {\n      switch (this.type) {\n      case tt.braceL:\n        let node = this.jsx_parseExpressionContainer();\n        if (node.expression.type === 'JSXEmptyExpression')\n          this.raise(node.start, 'JSX attributes must only be assigned a non-empty expression');\n        return node;\n\n      case tok.jsxTagStart:\n      case tt.string:\n        return this.parseExprAtom();\n\n      default:\n        this.raise(this.start, 'JSX value should be either an expression or a quoted JSX text');\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsx_parseEmptyExpression() {\n      let node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);\n      return this.finishNodeAt(node, 'JSXEmptyExpression', this.start, this.startLoc);\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsx_parseExpressionContainer() {\n      let node = this.startNode();\n      this.next();\n      node.expression = this.type === tt.braceR\n        ? this.jsx_parseEmptyExpression()\n        : this.parseExpression();\n      this.expect(tt.braceR);\n      return this.finishNode(node, 'JSXExpressionContainer');\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsx_parseAttribute() {\n      let node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssign();\n        this.expect(tt.braceR);\n        return this.finishNode(node, 'JSXSpreadAttribute');\n      }\n      node.name = this.jsx_parseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;\n      return this.finishNode(node, 'JSXAttribute');\n    }\n\n    // Parses JSX opening tag starting after '<'.\n\n    jsx_parseOpeningElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      node.attributes = [];\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      while (this.type !== tt.slash && this.type !== tok.jsxTagEnd)\n        node.attributes.push(this.jsx_parseAttribute());\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXOpeningElement' : 'JSXOpeningFragment');\n    }\n\n    // Parses JSX closing tag starting after '</'.\n\n    jsx_parseClosingElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXClosingElement' : 'JSXClosingFragment');\n    }\n\n    // Parses entire JSX element, including it's opening tag\n    // (starting after '<'), attributes, contents and closing tag.\n\n    jsx_parseElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let children = [];\n      let openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.type) {\n          case tok.jsxTagStart:\n            startPos = this.start; startLoc = this.startLoc;\n            this.next();\n            if (this.eat(tt.slash)) {\n              closingElement = this.jsx_parseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n            children.push(this.jsx_parseElementAt(startPos, startLoc));\n            break;\n\n          case tok.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case tt.braceL:\n            children.push(this.jsx_parseExpressionContainer());\n            break;\n\n          default:\n            this.unexpected();\n          }\n        }\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(\n            closingElement.start,\n            'Expected corresponding JSX closing tag for <' + getQualifiedJSXName(openingElement.name) + '>');\n        }\n      }\n      let fragmentOrElement = openingElement.name ? 'Element' : 'Fragment';\n\n      node['opening' + fragmentOrElement] = openingElement;\n      node['closing' + fragmentOrElement] = closingElement;\n      node.children = children;\n      if (this.type === tt.relational && this.value === \"<\") {\n        this.raise(this.start, \"Adjacent JSX elements must be wrapped in an enclosing tag\");\n      }\n      return this.finishNode(node, 'JSX' + fragmentOrElement);\n    }\n\n    // Parse JSX text\n\n    jsx_parseText() {\n      let node = this.parseLiteral(this.value);\n      node.type = \"JSXText\";\n      return node;\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsx_parseElement() {\n      let startPos = this.start, startLoc = this.startLoc;\n      this.next();\n      return this.jsx_parseElementAt(startPos, startLoc);\n    }\n\n    parseExprAtom(refShortHandDefaultPos) {\n      if (this.type === tok.jsxText)\n        return this.jsx_parseText();\n      else if (this.type === tok.jsxTagStart)\n        return this.jsx_parseElement();\n      else\n        return super.parseExprAtom(refShortHandDefaultPos);\n    }\n\n    readToken(code) {\n      let context = this.curContext();\n\n      if (context === tc_expr) return this.jsx_readToken();\n\n      if (context === tc_oTag || context === tc_cTag) {\n        if (isIdentifierStart(code)) return this.jsx_readWord();\n\n        if (code == 62) {\n          ++this.pos;\n          return this.finishToken(tok.jsxTagEnd);\n        }\n\n        if ((code === 34 || code === 39) && context == tc_oTag)\n          return this.jsx_readString(code);\n      }\n\n      if (code === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33) {\n        ++this.pos;\n        return this.finishToken(tok.jsxTagStart);\n      }\n      return super.readToken(code);\n    }\n\n    updateContext(prevType) {\n      if (this.type == tt.braceL) {\n        var curContext = this.curContext();\n        if (curContext == tc_oTag) this.context.push(tokContexts.b_expr);\n        else if (curContext == tc_expr) this.context.push(tokContexts.b_tmpl);\n        else super.updateContext(prevType);\n        this.exprAllowed = true;\n      } else if (this.type === tt.slash && prevType === tok.jsxTagStart) {\n        this.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.context.push(tc_cTag); // reconsider as closing tag context\n        this.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n}\n","module.exports = {\n  quot: '\\u0022',\n  amp: '&',\n  apos: '\\u0027',\n  lt: '<',\n  gt: '>',\n  nbsp: '\\u00A0',\n  iexcl: '\\u00A1',\n  cent: '\\u00A2',\n  pound: '\\u00A3',\n  curren: '\\u00A4',\n  yen: '\\u00A5',\n  brvbar: '\\u00A6',\n  sect: '\\u00A7',\n  uml: '\\u00A8',\n  copy: '\\u00A9',\n  ordf: '\\u00AA',\n  laquo: '\\u00AB',\n  not: '\\u00AC',\n  shy: '\\u00AD',\n  reg: '\\u00AE',\n  macr: '\\u00AF',\n  deg: '\\u00B0',\n  plusmn: '\\u00B1',\n  sup2: '\\u00B2',\n  sup3: '\\u00B3',\n  acute: '\\u00B4',\n  micro: '\\u00B5',\n  para: '\\u00B6',\n  middot: '\\u00B7',\n  cedil: '\\u00B8',\n  sup1: '\\u00B9',\n  ordm: '\\u00BA',\n  raquo: '\\u00BB',\n  frac14: '\\u00BC',\n  frac12: '\\u00BD',\n  frac34: '\\u00BE',\n  iquest: '\\u00BF',\n  Agrave: '\\u00C0',\n  Aacute: '\\u00C1',\n  Acirc: '\\u00C2',\n  Atilde: '\\u00C3',\n  Auml: '\\u00C4',\n  Aring: '\\u00C5',\n  AElig: '\\u00C6',\n  Ccedil: '\\u00C7',\n  Egrave: '\\u00C8',\n  Eacute: '\\u00C9',\n  Ecirc: '\\u00CA',\n  Euml: '\\u00CB',\n  Igrave: '\\u00CC',\n  Iacute: '\\u00CD',\n  Icirc: '\\u00CE',\n  Iuml: '\\u00CF',\n  ETH: '\\u00D0',\n  Ntilde: '\\u00D1',\n  Ograve: '\\u00D2',\n  Oacute: '\\u00D3',\n  Ocirc: '\\u00D4',\n  Otilde: '\\u00D5',\n  Ouml: '\\u00D6',\n  times: '\\u00D7',\n  Oslash: '\\u00D8',\n  Ugrave: '\\u00D9',\n  Uacute: '\\u00DA',\n  Ucirc: '\\u00DB',\n  Uuml: '\\u00DC',\n  Yacute: '\\u00DD',\n  THORN: '\\u00DE',\n  szlig: '\\u00DF',\n  agrave: '\\u00E0',\n  aacute: '\\u00E1',\n  acirc: '\\u00E2',\n  atilde: '\\u00E3',\n  auml: '\\u00E4',\n  aring: '\\u00E5',\n  aelig: '\\u00E6',\n  ccedil: '\\u00E7',\n  egrave: '\\u00E8',\n  eacute: '\\u00E9',\n  ecirc: '\\u00EA',\n  euml: '\\u00EB',\n  igrave: '\\u00EC',\n  iacute: '\\u00ED',\n  icirc: '\\u00EE',\n  iuml: '\\u00EF',\n  eth: '\\u00F0',\n  ntilde: '\\u00F1',\n  ograve: '\\u00F2',\n  oacute: '\\u00F3',\n  ocirc: '\\u00F4',\n  otilde: '\\u00F5',\n  ouml: '\\u00F6',\n  divide: '\\u00F7',\n  oslash: '\\u00F8',\n  ugrave: '\\u00F9',\n  uacute: '\\u00FA',\n  ucirc: '\\u00FB',\n  uuml: '\\u00FC',\n  yacute: '\\u00FD',\n  thorn: '\\u00FE',\n  yuml: '\\u00FF',\n  OElig: '\\u0152',\n  oelig: '\\u0153',\n  Scaron: '\\u0160',\n  scaron: '\\u0161',\n  Yuml: '\\u0178',\n  fnof: '\\u0192',\n  circ: '\\u02C6',\n  tilde: '\\u02DC',\n  Alpha: '\\u0391',\n  Beta: '\\u0392',\n  Gamma: '\\u0393',\n  Delta: '\\u0394',\n  Epsilon: '\\u0395',\n  Zeta: '\\u0396',\n  Eta: '\\u0397',\n  Theta: '\\u0398',\n  Iota: '\\u0399',\n  Kappa: '\\u039A',\n  Lambda: '\\u039B',\n  Mu: '\\u039C',\n  Nu: '\\u039D',\n  Xi: '\\u039E',\n  Omicron: '\\u039F',\n  Pi: '\\u03A0',\n  Rho: '\\u03A1',\n  Sigma: '\\u03A3',\n  Tau: '\\u03A4',\n  Upsilon: '\\u03A5',\n  Phi: '\\u03A6',\n  Chi: '\\u03A7',\n  Psi: '\\u03A8',\n  Omega: '\\u03A9',\n  alpha: '\\u03B1',\n  beta: '\\u03B2',\n  gamma: '\\u03B3',\n  delta: '\\u03B4',\n  epsilon: '\\u03B5',\n  zeta: '\\u03B6',\n  eta: '\\u03B7',\n  theta: '\\u03B8',\n  iota: '\\u03B9',\n  kappa: '\\u03BA',\n  lambda: '\\u03BB',\n  mu: '\\u03BC',\n  nu: '\\u03BD',\n  xi: '\\u03BE',\n  omicron: '\\u03BF',\n  pi: '\\u03C0',\n  rho: '\\u03C1',\n  sigmaf: '\\u03C2',\n  sigma: '\\u03C3',\n  tau: '\\u03C4',\n  upsilon: '\\u03C5',\n  phi: '\\u03C6',\n  chi: '\\u03C7',\n  psi: '\\u03C8',\n  omega: '\\u03C9',\n  thetasym: '\\u03D1',\n  upsih: '\\u03D2',\n  piv: '\\u03D6',\n  ensp: '\\u2002',\n  emsp: '\\u2003',\n  thinsp: '\\u2009',\n  zwnj: '\\u200C',\n  zwj: '\\u200D',\n  lrm: '\\u200E',\n  rlm: '\\u200F',\n  ndash: '\\u2013',\n  mdash: '\\u2014',\n  lsquo: '\\u2018',\n  rsquo: '\\u2019',\n  sbquo: '\\u201A',\n  ldquo: '\\u201C',\n  rdquo: '\\u201D',\n  bdquo: '\\u201E',\n  dagger: '\\u2020',\n  Dagger: '\\u2021',\n  bull: '\\u2022',\n  hellip: '\\u2026',\n  permil: '\\u2030',\n  prime: '\\u2032',\n  Prime: '\\u2033',\n  lsaquo: '\\u2039',\n  rsaquo: '\\u203A',\n  oline: '\\u203E',\n  frasl: '\\u2044',\n  euro: '\\u20AC',\n  image: '\\u2111',\n  weierp: '\\u2118',\n  real: '\\u211C',\n  trade: '\\u2122',\n  alefsym: '\\u2135',\n  larr: '\\u2190',\n  uarr: '\\u2191',\n  rarr: '\\u2192',\n  darr: '\\u2193',\n  harr: '\\u2194',\n  crarr: '\\u21B5',\n  lArr: '\\u21D0',\n  uArr: '\\u21D1',\n  rArr: '\\u21D2',\n  dArr: '\\u21D3',\n  hArr: '\\u21D4',\n  forall: '\\u2200',\n  part: '\\u2202',\n  exist: '\\u2203',\n  empty: '\\u2205',\n  nabla: '\\u2207',\n  isin: '\\u2208',\n  notin: '\\u2209',\n  ni: '\\u220B',\n  prod: '\\u220F',\n  sum: '\\u2211',\n  minus: '\\u2212',\n  lowast: '\\u2217',\n  radic: '\\u221A',\n  prop: '\\u221D',\n  infin: '\\u221E',\n  ang: '\\u2220',\n  and: '\\u2227',\n  or: '\\u2228',\n  cap: '\\u2229',\n  cup: '\\u222A',\n  'int': '\\u222B',\n  there4: '\\u2234',\n  sim: '\\u223C',\n  cong: '\\u2245',\n  asymp: '\\u2248',\n  ne: '\\u2260',\n  equiv: '\\u2261',\n  le: '\\u2264',\n  ge: '\\u2265',\n  sub: '\\u2282',\n  sup: '\\u2283',\n  nsub: '\\u2284',\n  sube: '\\u2286',\n  supe: '\\u2287',\n  oplus: '\\u2295',\n  otimes: '\\u2297',\n  perp: '\\u22A5',\n  sdot: '\\u22C5',\n  lceil: '\\u2308',\n  rceil: '\\u2309',\n  lfloor: '\\u230A',\n  rfloor: '\\u230B',\n  lang: '\\u2329',\n  rang: '\\u232A',\n  loz: '\\u25CA',\n  spades: '\\u2660',\n  clubs: '\\u2663',\n  hearts: '\\u2665',\n  diams: '\\u2666'\n};\n","export default {\n  class: 'className',\n  for: 'htmlFor',\n  maxlength: 'maxLength',\n\n  colspan: 'colSpan',\n  rowspan: 'rowSpan',\n}\n","const VOID_ELEMENTS = [\n  'area',\n  'base',\n  'br',\n  'col',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr',\n]\n\nconst NO_WHITESPACE = [\n  'table',\n  'tbody',\n  'tfoot',\n  'thead',\n  'tr',\n]\n\nexport default VOID_ELEMENTS\n\nexport function canHaveChildren(tagName: string): boolean {\n  return VOID_ELEMENTS.indexOf(tagName.toLowerCase()) === -1\n}\nexport function canHaveWhitespace(tagName: string): boolean {\n  return NO_WHITESPACE.indexOf(tagName.toLowerCase()) !== -1\n}\n","/**\n * Hashes a value\n * @param value the value to hash\n * @param radix the base-n to hash into (default 16)\n */\nexport const hash = (value: string = '', radix: number = 16): string => {\n  const string = String(value)\n  let h = 0\n  string.split('').forEach((char: string) => {\n    /* eslint-disable no-bitwise */\n    h = ((h << 5) - h) + char.charCodeAt(0)\n    h &= h // Convert to 32-bit integer\n    /* eslint-enable no-bitwise */\n  })\n  return Math.abs(h).toString(radix)\n}\n\n/**\n * Hashes a Math.random() value, returning it in base16\n */\nexport const randomHash = () => hash(Math.random().toString())\n","import { camelCase } from './camelCase'\n\ntype Style = string | Partial<CSSStyleDeclaration>\n\n/**\n * Converts a CSS Style string\n * @param {string | Partial<CSSStyleDeclaration>} style A string to convert, or object to return\n * @returns {Partial<CSSStyleDeclaration>} a partial CSSStyleDeclaration\n */\nexport const parseStyle = (style: Style): Partial<CSSStyleDeclaration> => {\n  switch (typeof style) {\n    case 'string':\n      return style.split(';').filter(r => r)\n        .reduce((map, rule) => {\n          const name = rule.slice(0, rule.indexOf(':')).trim()\n          const value = rule.slice(rule.indexOf(':') + 1).trim()\n\n          return {\n            ...map,\n            [camelCase(name)]: value,\n          }\n        }, {})\n    case 'object':\n      return style\n\n    default:\n      return undefined\n  }\n}\n","/**\n * Converts a string from other cases to camelCase\n * @param string the value to camelCase\n * @example\n * camelCase('foo-bar') // 'fooBar'\n */\nexport const camelCase = (string: string) => string\n  .replace(/([A-Z])([A-Z])/g, '$1 $2')\n  .replace(/([a-z])([A-Z])/g, '$1 $2')\n  .replace(/[^a-zA-Z\\u00C0-\\u00ff]/g, ' ')\n  .toLowerCase()\n  .split(' ')\n  .filter(value => value)\n  .map((s, i) => (i > 0 ? s[0].toUpperCase() + s.slice(1) : s))\n  .join('')\n","const pathToArrayPath = (path: string) => {\n  if (path == null || path === '') return []\n  return path.split('.')\n}\n\nconst resolveArrayPath = (object: any, path: string[]) => {\n  const [property, ...subPath] = path\n  if (object == null || property == null) {\n    return undefined\n  }\n  return subPath.length === 0\n    ? object[property]\n    : resolveArrayPath(object[property], subPath)\n}\n\n/**\n * Returns the result of a path query from an object\n * @param {any} object the object to search\n * @param {string} path the path, whose value will be retrieved\n * @returns {any} the value (undefined if the path doesn't exist)\n * @example\n * resolvePath({ foo: { bar: { baz: 3 } } }, 'foo.bar.baz') // 3\n */\nexport const resolvePath = (object: any, path: string): any => (\n  resolveArrayPath(object, pathToArrayPath(path))\n)\n","import * as Acorn from 'acorn'\nimport acornJsx from 'acorn-jsx'\nimport React, { Component, Fragment } from 'react'\nimport ATTRIBUTES from '../constants/attributeNames'\nimport { canHaveChildren, canHaveWhitespace } from '../constants/specialTags'\nimport { randomHash } from '../helpers/hash'\nimport { parseStyle } from '../helpers/parseStyle'\nimport { resolvePath } from '../helpers/resolvePath'\nimport type {\n  Expression,\n  JSXAttribute,\n  JSXAttributeExpression,\n  JSXElement,\n  JSXIdentifier,\n  JSXMemberExpression,\n  JSXSpreadAttribute,\n  MemberExpression,\n} from '../types/acorn-jsx'\n\nconst parser = Acorn.Parser.extend(acornJsx())\n\ntype BlacklistedAttr = string | RegExp\ntype Props = {\n  allowUnknownElements?: boolean,\n  bindings?: { [key: string]: any },\n  blacklistedAttrs?: BlacklistedAttr[],\n  blacklistedTags?: string[],\n  className?: string,\n  components?: React.JSXElementConstructor<any>[],\n  componentsOnly?: boolean,\n  disableFragments?: boolean,\n  disableKeyGeneration?: boolean,\n  jsx?: string,\n  onError?: (error: Error) => void,\n  showWarnings?: boolean,\n  renderError?: ({ error: string }) => JSX.Element,\n  renderInWrapper?: boolean,\n  renderUnrecognized?: (tagName: string) => JSX.Element,\n}\n\nexport type ParsedJSX = JSX.Element | boolean | string\nexport type ParsedTree = ParsedJSX | ParsedJSX[]\n\n/* eslint-disable consistent-return */\nexport default class JsxParser extends Component<Props> {\n  static displayName = 'JsxParser'\n\n  static defaultProps = {\n    allowUnknownElements: true,\n    bindings: {},\n    blacklistedAttrs: [/^on.+/i],\n    blacklistedTags: ['script'],\n    className: '',\n    components: [],\n    componentsOnly: false,\n    disableFragments: false,\n    disableKeyGeneration: false,\n    jsx: '',\n    onError: () => { },\n    showWarnings: false,\n    renderError: undefined,\n    renderInWrapper: true,\n    renderUnrecognized: () => null,\n  }\n\n  ParsedChildren: ParsedTree = null\n\n  parseJSX = (jsx: string): JSX.Element | JSX.Element[] => {\n    const wrappedJsx = `<root>${jsx}</root>`\n    let parsed: Expression[] = []\n    try {\n      // @ts-ignore - AcornJsx doesn't have typescript typings\n      parsed = parser.parse(wrappedJsx)\n      // @ts-ignore - AcornJsx doesn't have typescript typings\n      parsed = parsed.body[0].expression.children || []\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      if (this.props.showWarnings) console.warn(error)\n      if (this.props.onError) this.props.onError(error)\n      if (this.props.renderError) {\n        return this.props.renderError({ error: String(error) })\n      }\n      return []\n    }\n\n    return parsed.map(this.parseExpression).filter(Boolean)\n  }\n\n  parseExpression = (expression: Expression): any => {\n    switch (expression.type) {\n      case 'JSXAttribute':\n        if (expression.value === null) return true\n        return this.parseExpression(expression.value)\n      case 'JSXElement':\n        return this.parseElement(expression)\n      case 'JSXExpressionContainer':\n        return this.parseExpression(expression.expression)\n      case 'JSXText':\n        const key = this.props.disableKeyGeneration ? undefined : randomHash()\n        return this.props.disableFragments\n          ? expression.value\n          : <Fragment key={key}>{expression.value}</Fragment>\n      case 'ArrayExpression':\n        return expression.elements.map(this.parseExpression) as ParsedTree\n      case 'BinaryExpression':\n        /* eslint-disable eqeqeq,max-len */\n        switch (expression.operator) {\n          case '-': return this.parseExpression(expression.left) - this.parseExpression(expression.right)\n          case '!=': return this.parseExpression(expression.left) != this.parseExpression(expression.right)\n          case '!==': return this.parseExpression(expression.left) !== this.parseExpression(expression.right)\n          case '*': return this.parseExpression(expression.left) * this.parseExpression(expression.right)\n          case '**': return this.parseExpression(expression.left) ** this.parseExpression(expression.right)\n          case '/': return this.parseExpression(expression.left) / this.parseExpression(expression.right)\n          case '%': return this.parseExpression(expression.left) % this.parseExpression(expression.right)\n          case '+': return this.parseExpression(expression.left) + this.parseExpression(expression.right)\n          case '<': return this.parseExpression(expression.left) < this.parseExpression(expression.right)\n          case '<=': return this.parseExpression(expression.left) <= this.parseExpression(expression.right)\n          case '==': return this.parseExpression(expression.left) == this.parseExpression(expression.right)\n          case '===': return this.parseExpression(expression.left) === this.parseExpression(expression.right)\n          case '>': return this.parseExpression(expression.left) > this.parseExpression(expression.right)\n          case '>=': return this.parseExpression(expression.left) >= this.parseExpression(expression.right)\n        /* eslint-enable eqeqeq,max-len */\n        }\n        return undefined\n      case 'CallExpression':\n        const parsedCallee = this.parseExpression(expression.callee)\n        if (parsedCallee === undefined) {\n          this.props.onError(new Error(`The expression '${expression.callee}' could not be resolved, resulting in an undefined return value.`))\n          return undefined\n        }\n        return parsedCallee(...expression.arguments.map(this.parseExpression))\n      case 'ConditionalExpression':\n        return this.parseExpression(expression.test)\n          ? this.parseExpression(expression.consequent)\n          : this.parseExpression(expression.alternate)\n      case 'ExpressionStatement':\n        return this.parseExpression(expression.expression)\n      case 'Identifier':\n        return (this.props.bindings || {})[expression.name]\n      case 'Literal':\n        return expression.value\n      case 'LogicalExpression':\n        const left = this.parseExpression(expression.left)\n        if (expression.operator === '||' && left) return left\n        if ((expression.operator === '&&' && left) || (expression.operator === '||' && !left)) {\n          return this.parseExpression(expression.right)\n        }\n        return false\n      case 'MemberExpression':\n        return this.parseMemberExpression(expression)\n      case 'ObjectExpression':\n        const object = {}\n        expression.properties.forEach(prop => {\n          object[prop.key.name || prop.key.value] = this.parseExpression(prop.value)\n        })\n        return object\n      case 'TemplateElement':\n        return expression.value.cooked\n      case 'TemplateLiteral':\n        return [...expression.expressions, ...expression.quasis]\n          .sort((a, b) => {\n            if (a.start < b.start) return -1\n            return 1\n          })\n          .map(this.parseExpression)\n          .join('')\n      case 'UnaryExpression':\n        switch (expression.operator) {\n          case '+': return expression.argument.value\n          case '-': return -expression.argument.value\n          case '!': return !expression.argument.value\n        }\n        return undefined\n    }\n  }\n\n  parseMemberExpression = (expression: MemberExpression): any => {\n    // eslint-disable-next-line prefer-destructuring\n    let { object } = expression\n    const path = [expression.property?.name ?? JSON.parse(expression.property?.raw ?? '\"\"')]\n\n    if (expression.object.type !== 'Literal') {\n      while (object && ['MemberExpression', 'Literal'].includes(object?.type)) {\n        const { property } = (object as MemberExpression)\n        if ((object as MemberExpression).computed) {\n          path.unshift(this.parseExpression(property))\n        } else {\n          path.unshift(property?.name ?? JSON.parse(property?.raw ?? '\"\"'))\n        }\n\n        object = (object as MemberExpression).object\n      }\n    }\n\n    const target = this.parseExpression(object)\n    try {\n      let parent = target\n      const member = path.reduce((value, next) => {\n        parent = value\n        return value[next]\n      }, target)\n      if (typeof member === 'function') return member.bind(parent)\n\n      return member\n    } catch {\n      const name = (object as MemberExpression)?.name || 'unknown'\n      this.props.onError(new Error(`Unable to parse ${name}[\"${path.join('\"][\"')}\"]}`))\n    }\n  }\n\n  parseName = (element: JSXIdentifier | JSXMemberExpression): string => {\n    switch (element.type) {\n      case 'JSXIdentifier':\n        return element.name\n      case 'JSXMemberExpression':\n        return `${this.parseName(element.object)}.${this.parseName(element.property)}`\n    }\n  }\n\n  parseElement = (element: JSXElement): JSX.Element | JSX.Element[] => {\n    const { allowUnknownElements, components = {}, componentsOnly, onError } = this.props\n    const { children: childNodes = [], openingElement } = element\n    const { attributes = [] } = openingElement\n    const name = this.parseName(openingElement.name)\n\n    const blacklistedAttrs = (this.props.blacklistedAttrs || [])\n      .map(attr => (attr instanceof RegExp ? attr : new RegExp(attr, 'i')))\n    const blacklistedTags = (this.props.blacklistedTags || [])\n      .map(tag => tag.trim().toLowerCase()).filter(Boolean)\n\n    if (/^(html|head|body)$/i.test(name)) {\n      return childNodes.map(c => this.parseElement(c)) as JSX.Element[]\n    }\n    const tagName = name.trim().toLowerCase()\n    if (blacklistedTags.indexOf(tagName) !== -1) {\n      onError(new Error(`The tag <${name}> is blacklisted, and will not be rendered.`))\n      return undefined\n    }\n\n    if (!resolvePath(components, name)) {\n      if (componentsOnly) {\n        onError(new Error(`The component <${name}> is unrecognized, and will not be rendered.`))\n        return this.props.renderUnrecognized(name)\n      }\n\n      if (!allowUnknownElements && document.createElement(name) instanceof HTMLUnknownElement) {\n        onError(new Error(`The tag <${name}> is unrecognized in this browser, and will not be rendered.`))\n        return this.props.renderUnrecognized(name)\n      }\n    }\n\n    let children\n    const component = resolvePath(components, name)\n    if (component || canHaveChildren(name)) {\n      children = childNodes.map(this.parseExpression)\n      if (!component && !canHaveWhitespace(name)) {\n        children = children.filter(child => (\n          typeof child !== 'string' || !/^\\s*$/.test(child)\n        ))\n      }\n\n      if (children.length === 0) {\n        children = undefined\n      } else if (children.length === 1) {\n        [children] = children\n      } else if (children.length > 1) {\n        // Add `key` to any child that is a react element (by checking if it has `.type`)\n        children = children.map((child, key) => ((child && child.type) ? { ...child, key } : child))\n      }\n    }\n\n    const props: { [key: string]: any } = {\n      key: this.props.disableKeyGeneration ? undefined : randomHash(),\n    }\n    attributes.forEach((expr: JSXAttribute | JSXAttributeExpression | JSXSpreadAttribute) => {\n      if (expr.type === 'JSXAttribute') {\n        const rawName = expr.name.name\n        const attributeName = ATTRIBUTES[rawName] || rawName\n        // if the value is null, this is an implicitly \"true\" prop, such as readOnly\n        const value = this.parseExpression(expr)\n\n        const matches = blacklistedAttrs.filter(re => re.test(attributeName))\n        if (matches.length === 0) {\n          props[attributeName] = value\n        }\n      } else if (\n        (expr.type === 'JSXSpreadAttribute' && expr.argument.type === 'Identifier')\n        || expr.argument.type === 'MemberExpression'\n      ) {\n        const value = this.parseExpression(expr.argument)\n        if (typeof value === 'object') {\n          Object.keys(value).forEach(rawName => {\n            const attributeName = ATTRIBUTES[rawName] || rawName\n            const matches = blacklistedAttrs.filter(re => re.test(attributeName))\n            if (matches.length === 0) {\n              props[attributeName] = value[rawName]\n            }\n          })\n        }\n      }\n    })\n\n    if (typeof props.style === 'string') {\n      props.style = parseStyle(props.style)\n    }\n\n    return React.createElement(component || name.toLowerCase(), props, children)\n  }\n\n  render = (): JSX.Element => {\n    const jsx = (this.props.jsx || '').trim().replace(/<!DOCTYPE([^>]*)>/g, '')\n    this.ParsedChildren = this.parseJSX(jsx)\n    const className = [...new Set(['jsx-parser', ...String(this.props.className).split(' ')])]\n      .filter(Boolean)\n      .join(' ')\n\n    return (\n      this.props.renderInWrapper\n        ? <div className={className}>{this.ParsedChildren}</div>\n        : <>{this.ParsedChildren}</>\n    )\n  }\n}\n/* eslint-enable consistent-return */\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}