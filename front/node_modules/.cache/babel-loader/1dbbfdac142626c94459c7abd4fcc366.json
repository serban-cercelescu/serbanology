{"ast":null,"code":"var _jsxFileName = \"/Users/anai/Desktop/serbanology/front/src/ListArticles/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ListArticles = () => {\n  const [articleList, setArtList] = useState(0);\n  let content = [];\n  useEffect(() => {\n    if (articleList) return;\n    fetch('/api/list_articles').then(res => res.json()).then(data => {\n      let articles = [];\n\n      for (var key in data) {\n        let val = JSON.parse(data[key]);\n        articles.push({\n          key: key,\n          val: val\n        });\n      }\n\n      articles.sort((a, b) => {\n        if (a.val.published < b.val.published) return 1;\n        if (a.val.published === b.val.published) return 0;\n        if (a.val.published > b.val.published) return -1;\n      });\n      setArtList(articles);\n    });\n  });\n\n  if (articleList) {\n    content = articleList.map((art, idx) => /*#__PURE__*/React.createElement(\"li\", {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 49\n      }\n    }, moment(art.val.published).format(\"YYYY MMM DD\"), \" - \", /*#__PURE__*/React.createElement(Link, {\n      to: `/article/${art.key}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 115\n      }\n    }, art.key), \" \"));\n    console.log(articleList);\n    console.log(content);\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \" \", content, \" \");\n};\n\nexport default ListArticles;","map":{"version":3,"sources":["/Users/anai/Desktop/serbanology/front/src/ListArticles/index.js"],"names":["React","useState","useEffect","Link","moment","ListArticles","articleList","setArtList","content","fetch","then","res","json","data","articles","key","val","JSON","parse","push","sort","a","b","published","map","art","idx","format","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM,CAACC,WAAD,EAAcC,UAAd,IAA4BN,QAAQ,CAAC,CAAD,CAA1C;AACA,MAAIO,OAAO,GAAG,EAAd;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAII,WAAJ,EACI;AAEJG,IAAAA,KAAK,CAAC,oBAAD,CAAL,CAA4BC,IAA5B,CAAiCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAxC,EAAoDF,IAApD,CAAyDG,IAAI,IAAI;AAC7D,UAAIC,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAIC,GAAT,IAAgBF,IAAhB,EAAsB;AAClB,YAAIG,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACE,GAAD,CAAf,CAAV;AACAD,QAAAA,QAAQ,CAACK,IAAT,CAAc;AACVJ,UAAAA,GAAG,EAAEA,GADK;AAEVC,UAAAA,GAAG,EAAEA;AAFK,SAAd;AAIH;;AAEDF,MAAAA,QAAQ,CAACM,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpB,YAAID,CAAC,CAACL,GAAF,CAAMO,SAAN,GAAkBD,CAAC,CAACN,GAAF,CAAMO,SAA5B,EACI,OAAO,CAAP;AACJ,YAAIF,CAAC,CAACL,GAAF,CAAMO,SAAN,KAAoBD,CAAC,CAACN,GAAF,CAAMO,SAA9B,EACI,OAAO,CAAP;AACJ,YAAIF,CAAC,CAACL,GAAF,CAAMO,SAAN,GAAkBD,CAAC,CAACN,GAAF,CAAMO,SAA5B,EACI,OAAO,CAAC,CAAR;AACP,OAPD;AASAhB,MAAAA,UAAU,CAACO,QAAD,CAAV;AACH,KApBD;AAqBH,GAzBQ,CAAT;;AA2BA,MAAIR,WAAJ,EAAiB;AACbE,IAAAA,OAAO,GAAGF,WAAW,CAACkB,GAAZ,CAAgB,CAACC,GAAD,EAAMC,GAAN,kBAAc;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAetB,MAAM,CAACqB,GAAG,CAACT,GAAJ,CAAQO,SAAT,CAAN,CAA0BI,MAA1B,CAAiC,aAAjC,CAAf,sBAAkE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,YAAWF,GAAG,CAACV,GAAI,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCU,GAAG,CAACV,GAAtC,CAAlE,MAA9B,CAAV;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYvB,WAAZ;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,OAAZ;AACH;;AAED,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMA,OAAN,MAAR;AACH,CAtCD;;AAwCA,eAAeH,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport moment from 'moment';\n\nconst ListArticles = () => {\n    const [articleList, setArtList] = useState(0);\n    let content = [];\n\n    useEffect(() => {\n        if (articleList)\n            return;\n\n        fetch('/api/list_articles').then(res => res.json()).then(data => {\n            let articles = [];\n            for (var key in data) {\n                let val = JSON.parse(data[key]);\n                articles.push({\n                    key: key,\n                    val: val\n                });\n            }\n\n            articles.sort((a, b) => {\n                if (a.val.published < b.val.published)\n                    return 1;\n                if (a.val.published === b.val.published)\n                    return 0;\n                if (a.val.published > b.val.published)\n                    return -1;\n            });\n\n            setArtList(articles);\n        });\n    });\n\n    if (articleList) {\n        content = articleList.map((art, idx) => <li key={idx}>{moment(art.val.published).format(\"YYYY MMM DD\")} - <Link to={`/article/${art.key}`}>{art.key}</Link> </li>);\n        console.log(articleList);\n        console.log(content);\n    }\n\n    return (<ul> {content} </ul>);\n}\n\nexport default ListArticles;\n"]},"metadata":{},"sourceType":"module"}